//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Idd.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IIddListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class IddBaseListener : IIddListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="IddParser.idd"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdd([NotNull] IddParser.IddContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="IddParser.idd"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdd([NotNull] IddParser.IddContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="IddParser.object"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObject([NotNull] IddParser.ObjectContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="IddParser.object"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObject([NotNull] IddParser.ObjectContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="IddParser.object_header"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObject_header([NotNull] IddParser.Object_headerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="IddParser.object_header"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObject_header([NotNull] IddParser.Object_headerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="IddParser.fields"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFields([NotNull] IddParser.FieldsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="IddParser.fields"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFields([NotNull] IddParser.FieldsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="IddParser.terminating_field"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTerminating_field([NotNull] IddParser.Terminating_fieldContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="IddParser.terminating_field"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTerminating_field([NotNull] IddParser.Terminating_fieldContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="IddParser.field"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterField([NotNull] IddParser.FieldContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="IddParser.field"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitField([NotNull] IddParser.FieldContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="IddParser.field_id"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterField_id([NotNull] IddParser.Field_idContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="IddParser.field_id"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitField_id([NotNull] IddParser.Field_idContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="IddParser.group"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGroup([NotNull] IddParser.GroupContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="IddParser.group"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGroup([NotNull] IddParser.GroupContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="IddParser.object_properties"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObject_properties([NotNull] IddParser.Object_propertiesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="IddParser.object_properties"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObject_properties([NotNull] IddParser.Object_propertiesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="IddParser.field_properties"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterField_properties([NotNull] IddParser.Field_propertiesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="IddParser.field_properties"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitField_properties([NotNull] IddParser.Field_propertiesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="IddParser.object_property"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObject_property([NotNull] IddParser.Object_propertyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="IddParser.object_property"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObject_property([NotNull] IddParser.Object_propertyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="IddParser.field_property"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterField_property([NotNull] IddParser.Field_propertyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="IddParser.field_property"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitField_property([NotNull] IddParser.Field_propertyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="IddParser.maximum_exclusive_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMaximum_exclusive_statement([NotNull] IddParser.Maximum_exclusive_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="IddParser.maximum_exclusive_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMaximum_exclusive_statement([NotNull] IddParser.Maximum_exclusive_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="IddParser.maximum_inclusive_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMaximum_inclusive_statement([NotNull] IddParser.Maximum_inclusive_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="IddParser.maximum_inclusive_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMaximum_inclusive_statement([NotNull] IddParser.Maximum_inclusive_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="IddParser.min_fields_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMin_fields_statement([NotNull] IddParser.Min_fields_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="IddParser.min_fields_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMin_fields_statement([NotNull] IddParser.Min_fields_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="IddParser.minimum_exclusive_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMinimum_exclusive_statement([NotNull] IddParser.Minimum_exclusive_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="IddParser.minimum_exclusive_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMinimum_exclusive_statement([NotNull] IddParser.Minimum_exclusive_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="IddParser.minimum_inclusive_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMinimum_inclusive_statement([NotNull] IddParser.Minimum_inclusive_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="IddParser.minimum_inclusive_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMinimum_inclusive_statement([NotNull] IddParser.Minimum_inclusive_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="IddParser.type_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_statement([NotNull] IddParser.Type_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="IddParser.type_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_statement([NotNull] IddParser.Type_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="IddParser.units_based_on_field_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnits_based_on_field_statement([NotNull] IddParser.Units_based_on_field_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="IddParser.units_based_on_field_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnits_based_on_field_statement([NotNull] IddParser.Units_based_on_field_statementContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
