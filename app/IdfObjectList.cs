using System;
using System.Collections.Generic;
namespace dotnet
{
    public static class IdfObjectList
    {
        public static bool ContainsKey(string key) => Objects.ContainsKey(key);
        private static readonly Dictionary<string, IdfObject> CachedDictionary = new Dictionary<string, IdfObject>(StringComparer.OrdinalIgnoreCase);
        public static IdfObject GetIdfObject(string name)
        {
            bool inCache = CachedDictionary.TryGetValue(name, out IdfObject idfObject);
            if (inCache) return idfObject;
            if (Objects.ContainsKey(name)) {
                idfObject = Objects[name]();
                CachedDictionary[name] = idfObject;
            }
            else {
                throw new ArgumentException();
            }
            return idfObject;
        }
        private static Dictionary<string, Func<IdfObject>> Objects = new Dictionary<string, Func<IdfObject>>(StringComparer.OrdinalIgnoreCase)
        {
            {"Version", () => new IdfObject("Version",true,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,"9.2",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Version Identifier",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,1 ) },
            {"SimulationControl", () => new IdfObject("SimulationControl",true,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Do Zone Sizing Calculation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Do System Sizing Calculation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Do Plant Sizing Calculation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Yes",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Run Simulation for Sizing Periods",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Yes",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Run Simulation for Weather File Run Periods",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Do HVAC Sizing Simulation for Sizing Periods",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Number of HVAC Sizing Simulation Passes",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,7 ) },
            {"PerformancePrecisionTradeoffs", () => new IdfObject("PerformancePrecisionTradeoffs",true,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Use Coil Direct Solutions",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,1 ) },
            {"Building", () => new IdfObject("Building",true,IdfObjectFormat.NotSpecified,false,8,true,new List<IdfField> {new IdfField(false,"",0,0,"NONE",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"North Axis",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Suburbs",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Country","Suburbs","City","Ocean","Urban"},"Terrain",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0.5,".04",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Loads Convergence Tolerance Value",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0.5,".4",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Convergence Tolerance Value",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"FullExterior",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"MinimalShadowing","FullExterior","FullInteriorAndExterior","FullExteriorWithReflections","FullInteriorAndExteriorWithReflections"},"Solar Distribution",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"25",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Number of Warmup Days",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"6",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Number of Warmup Days",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,8 ) },
            {"ShadowCalculation", () => new IdfObject("ShadowCalculation",true,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,"AverageOverDaysInFrequency",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"AverageOverDaysInFrequency","TimestepFrequency"},"Calculation Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,0,"20",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Calculation Frequency",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",200,0,"15000",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Figures in Shadow Overlap Calculations",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SutherlandHodgman",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ConvexWeilerAtherton","SutherlandHodgman"},"Polygon Clipping Algorithm",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SimpleSkyDiffuseModeling",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SimpleSkyDiffuseModeling","DetailedSkyDiffuseModeling"},"Sky Diffuse Modeling Algorithm",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"InternalCalculation",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ScheduledShading","InternalCalculation","ImportedShading"},"External Shading Calculation Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Output External Shading Calculation Results",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Disable Self-Shading Within Shading Zone Groups",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Disable Self-Shading From Shading Zone Groups to Other Zones",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Shading Zone Group 1 ZoneList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneListNames"})},true,15 ) },
            {"SurfaceConvectionAlgorithm:Inside", () => new IdfObject("SurfaceConvectionAlgorithm:Inside",true,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,"TARP",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Simple","TARP","CeilingDiffuser","AdaptiveConvectionAlgorithm"},"Algorithm",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,1 ) },
            {"SurfaceConvectionAlgorithm:Outside", () => new IdfObject("SurfaceConvectionAlgorithm:Outside",true,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,"DOE-2",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SimpleCombined","TARP","MoWiTT","DOE-2","AdaptiveConvectionAlgorithm"},"Algorithm",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,1 ) },
            {"HeatBalanceAlgorithm", () => new IdfObject("HeatBalanceAlgorithm",true,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,"ConductionTransferFunction",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ConductionTransferFunction","MoisturePenetrationDepthConductionTransferFunction","ConductionFiniteDifference","CombinedHeatAndMoistureFiniteElement"},"Algorithm",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",200,0,"200",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface Temperature Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2-K",0,0,"0.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Surface Convection Heat Transfer Coefficient Value",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2-K",1,0,"1000",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Surface Convection Heat Transfer Coefficient Value",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,4 ) },
            {"HeatBalanceSettings:ConductionFiniteDifference", () => new IdfObject("HeatBalanceSettings:ConductionFiniteDifference",true,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,"FullyImplicitFirstOrder",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"CrankNicholsonSecondOrder","FullyImplicitFirstOrder"},"Difference Scheme",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"3",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Space Discretization Constant",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0.01,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relaxation Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1E-07,0.01,"0.002",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inside Face Surface Temperature Convergence Criteria",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,4 ) },
            {"ZoneAirHeatBalanceAlgorithm", () => new IdfObject("ZoneAirHeatBalanceAlgorithm",true,IdfObjectFormat.NotSpecified,false,1,false,new List<IdfField> {new IdfField(false,"",0,0,"ThirdOrderBackwardDifference",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ThirdOrderBackwardDifference","AnalyticalSolution","EulerMethod"},"Algorithm",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,1 ) },
            {"ZoneAirContaminantBalance", () => new IdfObject("ZoneAirContaminantBalance",true,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Carbon Dioxide Concentration",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Carbon Dioxide Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Generic Contaminant Concentration",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Generic Contaminant Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,4 ) },
            {"ZoneAirMassFlowConservation", () => new IdfObject("ZoneAirMassFlowConservation",true,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Adjust Zone Mixing For Zone Air Mass Flow Balance",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"AddInfiltrationFlow",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"AddInfiltrationFlow","AdjustInfiltrationFlow","None"},"Infiltration Balancing Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"MixingSourceZonesOnly",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"MixingSourceZonesOnly","AllZones"},"Infiltration Balancing Zones",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,3 ) },
            {"ZoneCapacitanceMultiplier:ResearchSpecial", () => new IdfObject("ZoneCapacitanceMultiplier:ResearchSpecial",false,IdfObjectFormat.NotSpecified,false,6,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone or ZoneList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneAndZoneListNames"}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Capacity Multiplier",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidity Capacity Multiplier",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Carbon Dioxide Capacity Multiplier",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Generic Contaminant Capacity Multiplier",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,6 ) },
            {"Timestep", () => new IdfObject("Timestep",true,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",1,60,"6",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Timesteps per Hour",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,1 ) },
            {"ConvergenceLimits", () => new IdfObject("ConvergenceLimits",true,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"minutes",0,60,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum System Timestep",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,0,"20",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum HVAC Iterations",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,0,"2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Plant Iterations",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",2,0,"8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Plant Iterations",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,4 ) },
            {"HVACSystemRootFindingAlgorithm", () => new IdfObject("HVACSystemRootFindingAlgorithm",true,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,"RegulaFalsi",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"RegulaFalsi","Bisection","BisectionThenRegulaFalsi","RegulaFalsiThenBisection","Alternation"},"Algorithm",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Iterations Before Algorithm Switch",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,2 ) },
            {"Compliance:Building", () => new IdfObject("Compliance:Building",true,IdfObjectFormat.NotSpecified,false,1,false,new List<IdfField> {new IdfField(false,"deg",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Building Rotation for Appendix G",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,1 ) },
            {"Site:Location", () => new IdfObject("Site:Location",true,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",-90,90,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Latitude",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",-180,180,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Longitude",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"hr",-12,14,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Time Zone",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",-300,8900,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Elevation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"Site:VariableLocation", () => new IdfObject("Site:VariableLocation",true,IdfObjectFormat.NotSpecified,false,1,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Building Location Latitude Schedule",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Building Location Longitude Schedule",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Building Location Orientation Schedule",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,4 ) },
            {"SizingPeriod:DesignDay", () => new IdfObject("SizingPeriod:DesignDay",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"RunPeriodsAndDesignDays"},new List<string>{},new List<string>{}),new IdfField(true,"",1,12,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Month",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",1,31,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Day of Month",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Holiday","SummerDesignDay","WinterDesignDay","CustomDay1","CustomDay2"},"Day Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",-90,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Dry-Bulb Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Daily Dry-Bulb Temperature Range",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"DefaultMultipliers",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"MultiplierSchedule","DifferenceSchedule","TemperatureProfileSchedule","DefaultMultipliers"},"Dry-Bulb Temperature Range Modifier Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Range Modifier Day Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DayScheduleNames"}),new IdfField(false,"",0,0,"WetBulb",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"WetBulb","DewPoint","HumidityRatio","Enthalpy","RelativeHumiditySchedule","WetBulbProfileMultiplierSchedule","WetBulbProfileDifferenceSchedule","WetBulbProfileDefaultMultipliers"},"Humidity Condition Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wetbulb or DewPoint at Maximum Dry-Bulb",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidity Condition Day Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DayScheduleNames"}),new IdfField(false,"kgWater/kgDryAir",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidity Ratio at Maximum Dry-Bulb",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Enthalpy at Maximum Dry-Bulb",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Daily Wet-Bulb Temperature Range",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",31000,120000,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Barometric Pressure",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m/s",0,40,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Speed",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Direction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Rain Indicator",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Snow Indicator",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Daylight Saving Time Indicator",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ASHRAEClearSky",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ASHRAEClearSky","ZhangHuang","Schedule","ASHRAETau","ASHRAETau2017"},"Solar Model Indicator",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Beam Solar Day Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DayScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Diffuse Solar Day Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DayScheduleNames"}),new IdfField(false,"dimensionless",0,1.2,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"ASHRAE Clear Sky Optical Depth for Beam Irradiance (taub)",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,3,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"ASHRAE Clear Sky Optical Depth for Diffuse Irradiance (taud)",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1.2,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sky Clearness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,26 ) },
            {"SizingPeriod:WeatherFileDays", () => new IdfObject("SizingPeriod:WeatherFileDays",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"RunPeriodsAndDesignDays"},new List<string>{},new List<string>{}),new IdfField(true,"",1,12,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Begin Month",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",1,31,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Begin Day of Month",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",1,12,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End Month",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",1,31,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End Day of Month",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Monday",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","SummerDesignDay","WinterDesignDay","CustomDay1","CustomDay2"},"Day of Week for Start Day",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Yes",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Use Weather File Daylight Saving Period",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Yes",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Use Weather File Rain and Snow Indicators",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,8 ) },
            {"SizingPeriod:WeatherFileConditionType", () => new IdfObject("SizingPeriod:WeatherFileConditionType",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"RunPeriodsAndDesignDays"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SummerExtreme","SummerTypical","WinterExtreme","WinterTypical","AutumnTypical","SpringTypical","WetSeason","DrySeason","NoDrySeason","NoWetSeason","TropicalHot","TropicalCold","NoDrySeasonMax","NoDrySeasonMin","NoWetSeasonMax","NoWetSeasonMin"},"Period Selection",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Monday",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","SummerDesignDay","WinterDesignDay","CustomDay1","CustomDay2"},"Day of Week for Start Day",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Yes",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Use Weather File Daylight Saving Period",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Yes",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Use Weather File Rain and Snow Indicators",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"RunPeriod", () => new IdfObject("RunPeriod",false,IdfObjectFormat.NotSpecified,false,7,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"RunPeriodsAndDesignDays"},new List<string>{},new List<string>{}),new IdfField(true,"",1,12,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Begin Month",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",1,31,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Begin Day of Month",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Begin Year",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",1,12,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End Month",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",1,31,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End Day of Month",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End Year",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"},"Day of Week for Start Day",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Yes",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Use Weather File Holidays and Special Days",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Yes",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Use Weather File Daylight Saving Period",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Apply Weekend Holiday Rule",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Yes",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Use Weather File Rain Indicators",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Yes",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Use Weather File Snow Indicators",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Treat Weather as Actual",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,14 ) },
            {"RunPeriodControl:SpecialDays", () => new IdfObject("RunPeriodControl:SpecialDays",false,IdfObjectFormat.NotSpecified,false,4,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Start Date",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"days",1,366,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Duration",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Holiday",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Holiday","SummerDesignDay","WinterDesignDay","CustomDay1","CustomDay2"},"Special Day Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,4 ) },
            {"RunPeriodControl:DaylightSavingTime", () => new IdfObject("RunPeriodControl:DaylightSavingTime",true,IdfObjectFormat.NotSpecified,false,2,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Start Date",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End Date",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,2 ) },
            {"WeatherProperty:SkyTemperature", () => new IdfObject("WeatherProperty:SkyTemperature",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"RunPeriodsAndDesignDays"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ScheduleValue","DifferenceScheduleDryBulbValue","DifferenceScheduleDewPointValue"},"Calculation Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DayScheduleNames","ScheduleNames"})},false,3 ) },
            {"Site:WeatherStation", () => new IdfObject("Site:WeatherStation",true,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"m",0,0,"10.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Sensor Height Above Ground",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.14",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Speed Profile Exponent",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"270.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Speed Profile Boundary Layer Thickness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"1.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Temperature Sensor Height Above Ground",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,4 ) },
            {"Site:HeightVariation", () => new IdfObject("Site:HeightVariation",true,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,"0.22",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Speed Profile Exponent",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"370.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Speed Profile Boundary Layer Thickness",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"K/m",0,0,"0.0065",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Temperature Gradient Coefficient",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,3 ) },
            {"Site:GroundTemperature:BuildingSurface", () => new IdfObject("Site:GroundTemperature:BuildingSurface",true,IdfObjectFormat.NotSpecified,false,12,false,new List<IdfField> {new IdfField(false,"C",0,0,"18",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"January Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"18",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"February Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"18",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"March Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"18",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"April Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"18",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"May Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"18",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"June Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"18",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"July Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"18",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"August Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"18",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"September Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"18",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"October Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"18",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"November Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"18",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"December Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,12 ) },
            {"Site:GroundTemperature:FCfactorMethod", () => new IdfObject("Site:GroundTemperature:FCfactorMethod",true,IdfObjectFormat.NotSpecified,false,12,false,new List<IdfField> {new IdfField(false,"C",0,0,"13",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"January Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"13",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"February Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"13",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"March Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"13",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"April Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"13",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"May Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"13",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"June Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"13",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"July Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"13",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"August Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"13",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"September Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"13",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"October Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"13",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"November Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"13",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"December Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,12 ) },
            {"Site:GroundTemperature:Shallow", () => new IdfObject("Site:GroundTemperature:Shallow",true,IdfObjectFormat.NotSpecified,false,12,false,new List<IdfField> {new IdfField(false,"C",0,0,"13",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"January Surface Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"13",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"February Surface Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"13",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"March Surface Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"13",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"April Surface Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"13",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"May Surface Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"13",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"June Surface Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"13",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"July Surface Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"13",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"August Surface Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"13",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"September Surface Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"13",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"October Surface Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"13",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"November Surface Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"13",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"December Surface Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,12 ) },
            {"Site:GroundTemperature:Deep", () => new IdfObject("Site:GroundTemperature:Deep",true,IdfObjectFormat.NotSpecified,false,12,false,new List<IdfField> {new IdfField(false,"C",0,0,"16",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"January Deep Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"16",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"February Deep Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"16",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"March Deep Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"16",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"April Deep Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"16",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"May Deep Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"16",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"June Deep Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"16",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"July Deep Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"16",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"August Deep Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"16",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"September Deep Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"16",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"October Deep Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"16",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"November Deep Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"16",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"December Deep Ground Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,12 ) },
            {"Site:GroundTemperature:Undisturbed:FiniteDifference", () => new IdfObject("Site:GroundTemperature:Undisturbed:FiniteDifference",false,IdfObjectFormat.NotSpecified,false,7,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"UndisturbedGroundTempModels"},new List<string>{},new List<string>{}),new IdfField(true,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Thermal Conductivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Density",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"J/kg-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Specific Heat",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent",0,100,"30",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Moisture Content Volume Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent",0,100,"50",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Moisture Content Volume Fraction at Saturation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1.5,"0.4",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evapotranspiration Ground Cover Parameter",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,7 ) },
            {"Site:GroundTemperature:Undisturbed:KusudaAchenbach", () => new IdfObject("Site:GroundTemperature:Undisturbed:KusudaAchenbach",false,IdfObjectFormat.NotSpecified,false,7,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"UndisturbedGroundTempModels"},new List<string>{},new List<string>{}),new IdfField(true,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Thermal Conductivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Density",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"J/kg-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Specific Heat",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Average Soil Surface Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Average Amplitude of Surface Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"days",0,365,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Phase Shift of Minimum Surface Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{})},false,7 ) },
            {"Site:GroundTemperature:Undisturbed:Xing", () => new IdfObject("Site:GroundTemperature:Undisturbed:Xing",false,IdfObjectFormat.NotSpecified,false,9,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"UndisturbedGroundTempModels"},new List<string>{},new List<string>{}),new IdfField(true,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Thermal Conductivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Density",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"J/kg-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Specific Heat",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Average Soil Surface Tempeature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Surface Temperature Amplitude 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Surface Temperature Amplitude 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"days",0,365,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Phase Shift of Temperature Amplitude 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"days",0,365,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Phase Shift of Temperature Amplitude 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{})},false,9 ) },
            {"Site:GroundDomain:Slab", () => new IdfObject("Site:GroundDomain:Slab",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"10",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ground Domain Depth",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Aspect Ratio",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Perimeter Offset",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,"1.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Thermal Conductivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,"2800",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Density",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg-K",0,0,"850",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Specific Heat",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent",0,100,"30",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Moisture Content Volume Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent",0,100,"50",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Moisture Content Volume Fraction at Saturation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Site:GroundTemperature:Undisturbed:FiniteDifference","Site:GroundTemperature:Undisturbed:KusudaAchenbach","Site:GroundTemperature:Undisturbed:Xing"},"Undisturbed Ground Temperature Model Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Undisturbed Ground Temperature Model Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UndisturbedGroundTempModels"}),new IdfField(false,"",0,1.5,"0.4",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evapotranspiration Ground Cover Parameter",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Slab Boundary Condition Model Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"OSCMNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"InGrade","OnGrade"},"Slab Location",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Slab Material Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Horizontal Insulation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Horizontal Insulation Material Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(false,"",0,0,"Full",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Full","Perimeter"},"Horizontal Insulation Extents",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Perimeter Insulation Width",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Vertical Insulation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Vertical Insulation Material Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Vertical Insulation Depth",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Hourly",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Timestep","Hourly"},"Simulation Timestep",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,2,"1.6",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Geometric Mesh Coefficient",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",4,0,"6",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mesh Density Parameter",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,25 ) },
            {"Site:GroundDomain:Basement", () => new IdfObject("Site:GroundDomain:Basement",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"10",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ground Domain Depth",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Aspect Ratio",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Perimeter Offset",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,"1.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Thermal Conductivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,"2800",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Density",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg-K",0,0,"850",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Specific Heat",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent",0,100,"30",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Moisture Content Volume Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent",0,100,"50",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Moisture Content Volume Fraction at Saturation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Site:GroundTemperature:Undisturbed:FiniteDifference","Site:GroundTemperature:Undisturbed:KusudaAchenbach","Site:GroundTemperature:Undisturbed:Xing"},"Undisturbed Ground Temperature Model Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Undisturbed Ground Temperature Model Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UndisturbedGroundTempModels"}),new IdfField(false,"",0,1.5,"0.4",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evapotranspiration Ground Cover Parameter",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basement Floor Boundary Condition Model Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"OSCMNames"}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Horizontal Insulation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Horizontal Insulation Material Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(false,"",0,0,"Full",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Perimeter","Full"},"Horizontal Insulation Extents",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Perimeter Horizontal Insulation Width",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basement Wall Depth",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basement Wall Boundary Condition Model Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"OSCMNames"}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Vertical Insulation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basement Wall Vertical Insulation Material Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Vertical Insulation Depth",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Hourly",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Timestep","Hourly"},"Simulation Timestep",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",2,0,"4",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mesh Density Parameter",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,24 ) },
            {"Site:GroundReflectance", () => new IdfObject("Site:GroundReflectance",true,IdfObjectFormat.NotSpecified,false,12,false,new List<IdfField> {new IdfField(false,"dimensionless",0,1,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"January Ground Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"February Ground Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"March Ground Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"April Ground Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"May Ground Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"June Ground Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"July Ground Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"August Ground Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"September Ground Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"October Ground Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"November Ground Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"December Ground Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,12 ) },
            {"Site:GroundReflectance:SnowModifier", () => new IdfObject("Site:GroundReflectance:SnowModifier",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ground Reflected Solar Modifier",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Daylighting Ground Reflected Solar Modifier",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,2 ) },
            {"Site:WaterMainsTemperature", () => new IdfObject("Site:WaterMainsTemperature",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,"CorrelationFromWeatherFile",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Schedule","Correlation","CorrelationFromWeatherFile"},"Calculation Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Annual Average Outdoor Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Difference In Monthly Average Outdoor Air Temperatures",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,4 ) },
            {"Site:Precipitation", () => new IdfObject("Site:Precipitation",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ScheduleAndDesignLevel"},"Precipitation Model Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m/yr",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Level for Total Annual Precipitation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Precipitation Rates Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"m/yr",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Average Total Annual Precipitation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,4 ) },
            {"RoofIrrigation", () => new IdfObject("RoofIrrigation",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Schedule","SmartSchedule"},"Irrigation Model Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Irrigation Rate Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"percent",0,100,"40.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Irrigation Maximum Saturation Threshold",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,3 ) },
            {"Site:SolarAndVisibleSpectrum", () => new IdfObject("Site:SolarAndVisibleSpectrum",true,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Default",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Default","UserDefined"},"Spectrum Data Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Solar Spectrum Data Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SpectrumDataNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Visible Spectrum Data Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SpectrumDataNames"})},false,4 ) },
            {"Site:SpectrumData", () => new IdfObject("Site:SpectrumData",false,IdfObjectFormat.NotSpecified,false,8,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SpectrumDataNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Solar","Visible"},"Spectrum Data Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"micron",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wavelength",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Spectrum",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"micron",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wavelength",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Spectrum",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"micron",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wavelength",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Spectrum",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,216 ) },
            {"ScheduleTypeLimits", () => new IdfObject("ScheduleTypeLimits",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ScheduleTypeLimitsNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Lower Limit Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Upper Limit Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Continuous","Discrete"},"Numeric Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless","Temperature","DeltaTemperature","PrecipitationRate","Angle","ConvectionCoefficient","ActivityLevel","Velocity","Capacity","Power","Availability","Percent","Control","Mode"},"Unit Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"Schedule:Day:Hourly", () => new IdfObject("Schedule:Day:Hourly",false,IdfObjectFormat.NotSpecified,false,26,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"DayScheduleNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Type Limits Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleTypeLimitsNames"}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hour 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hour 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hour 3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hour 4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hour 5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hour 6",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hour 7",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hour 8",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hour 9",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hour 10",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hour 11",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hour 12",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hour 13",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hour 14",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hour 15",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hour 16",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hour 17",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hour 18",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hour 19",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hour 20",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hour 21",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hour 22",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hour 23",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hour 24",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,26 ) },
            {"Schedule:Day:Interval", () => new IdfObject("Schedule:Day:Interval",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"DayScheduleNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Type Limits Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleTypeLimitsNames"}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Average","Linear","No"},"Interpolate to Timestep",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"hh:mm",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Time 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Value Until Time 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,291 ) },
            {"Schedule:Day:List", () => new IdfObject("Schedule:Day:List",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"DayScheduleNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Type Limits Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleTypeLimitsNames"}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Average","Linear","No"},"Interpolate to Timestep",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,60,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minutes per Item",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Value 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,1444 ) },
            {"Schedule:Week:Daily", () => new IdfObject("Schedule:Week:Daily",false,IdfObjectFormat.NotSpecified,false,13,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"WeekScheduleNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sunday Schedule:Day Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DayScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Monday Schedule:Day Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DayScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tuesday Schedule:Day Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DayScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wednesday Schedule:Day Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DayScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thursday Schedule:Day Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DayScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Friday Schedule:Day Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DayScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Saturday Schedule:Day Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DayScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Holiday Schedule:Day Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DayScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"SummerDesignDay Schedule:Day Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DayScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"WinterDesignDay Schedule:Day Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DayScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"CustomDay1 Schedule:Day Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DayScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"CustomDay2 Schedule:Day Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DayScheduleNames"})},false,13 ) },
            {"Schedule:Week:Compact", () => new IdfObject("Schedule:Week:Compact",false,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"WeekScheduleNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"AllDays","AllOtherDays","Weekdays","Weekends","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Holiday","SummerDesignDay","WinterDesignDay","CustomDay1","CustomDay2"},"DayType List 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule:Day Name 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DayScheduleNames"})},true,11 ) },
            {"Schedule:Year", () => new IdfObject("Schedule:Year",false,IdfObjectFormat.NotSpecified,false,7,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ScheduleNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Type Limits Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleTypeLimitsNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule:Week Name 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WeekScheduleNames"}),new IdfField(true,"",1,12,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Start Month 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",1,31,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Start Day 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",1,12,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End Month 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",1,31,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End Day 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},true,267 ) },
            {"Schedule:Compact", () => new IdfObject("Schedule:Compact",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ScheduleNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Type Limits Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleTypeLimitsNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Field 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,10000 ) },
            {"Schedule:Constant", () => new IdfObject("Schedule:Constant",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ScheduleNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Type Limits Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleTypeLimitsNames"}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hourly Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,3 ) },
            {"Schedule:File:Shading", () => new IdfObject("Schedule:File:Shading",true,IdfObjectFormat.NotSpecified,false,1,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"File Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,1 ) },
            {"Schedule:File", () => new IdfObject("Schedule:File",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ScheduleNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Type Limits Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleTypeLimitsNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"File Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",1,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Column Number",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rows to Skip at Top",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",8760,8784,"8760",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Hours of Data",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Comma",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Comma","Tab","Space","Semicolon"},"Column Separator",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Interpolate to Timestep",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,60,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minutes per Item",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,9 ) },
            {"Material", () => new IdfObject("Material",false,IdfObjectFormat.NotSpecified,false,6,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"MaterialName"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"VeryRough","Rough","MediumRough","MediumSmooth","Smooth","VerySmooth"},"Roughness",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thickness",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Conductivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Density",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"J/kg-K",100,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Specific Heat",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0.99999,".9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Absorptance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,".7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Solar Absorptance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,".7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Visible Absorptance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,9 ) },
            {"Material:NoMass", () => new IdfObject("Material:NoMass",false,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"MaterialName"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"VeryRough","Rough","MediumRough","MediumSmooth","Smooth","VerySmooth"},"Roughness",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m2-K/W",0.001,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Resistance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0.99999,".9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Absorptance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,".7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Solar Absorptance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,".7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Visible Absorptance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,6 ) },
            {"Material:InfraredTransparent", () => new IdfObject("Material:InfraredTransparent",false,IdfObjectFormat.NotSpecified,false,1,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"MaterialName"},new List<string>{},new List<string>{})},false,1 ) },
            {"Material:AirGap", () => new IdfObject("Material:AirGap",false,IdfObjectFormat.NotSpecified,false,2,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"MaterialName"},new List<string>{},new List<string>{}),new IdfField(true,"m2-K/W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Resistance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,2 ) },
            {"Material:RoofVegetation", () => new IdfObject("Material:RoofVegetation",false,IdfObjectFormat.NotSpecified,false,19,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"MaterialName"},new List<string>{},new List<string>{}),new IdfField(false,"m",0.005,1,".2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Height of Plants",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0.001,5,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Leaf Area Index",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0.05,0.5,"0.22",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Leaf Reflectivity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0.8,1,"0.95",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Leaf Emissivity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"s/m",50,300,"180.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Stomatal Resistance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Green Roof Soil",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Layer Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"MediumRough",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"VeryRough","MediumRough","Rough","Smooth","MediumSmooth","VerySmooth"},"Roughness",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0.05,0.7,"0.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thickness",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0.2,1.5,"0.35",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Conductivity of Dry Soil",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",300,2000,"1100",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Density of Dry Soil",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg-K",500,2000,"1200",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Specific Heat of Dry Soil",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0.8,1,".9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Absorptance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0.4,0.9,".70",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Solar Absorptance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0.5,1,".75",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Visible Absorptance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0.1,0.5,"0.3",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Saturation Volumetric Moisture Content of the Soil Layer",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0.01,0.1,"0.01",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Residual Volumetric Moisture Content of the Soil Layer",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0.05,0.5,"0.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Initial Volumetric Moisture Content of the Soil Layer",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Advanced",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Simple","Advanced"},"Moisture Diffusion Calculation Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,19 ) },
            {"WindowMaterial:SimpleGlazingSystem", () => new IdfObject("WindowMaterial:SimpleGlazingSystem",false,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"MaterialName","GlazingMaterialName"},new List<string>{},new List<string>{}),new IdfField(true,"W/m2-K",0,7,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"U-Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Solar Heat Gain Coefficient",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Visible Transmittance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{})},false,4 ) },
            {"WindowMaterial:Glazing", () => new IdfObject("WindowMaterial:Glazing",false,IdfObjectFormat.NotSpecified,false,14,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"MaterialName","GlazingMaterialName","CFSGlazingName"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SpectralAverage","Spectral","BSDF","SpectralAndAngle"},"Optical Data Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Window Glass Spectral Data Set Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SpectralDataSets"}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thickness",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Solar Transmittance at Normal Incidence",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Side Solar Reflectance at Normal Incidence",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Back Side Solar Reflectance at Normal Incidence",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Visible Transmittance at Normal Incidence",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Side Visible Reflectance at Normal Incidence",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Back Side Visible Reflectance at Normal Incidence",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Infrared Transmittance at Normal Incidence",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.84",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Side Infrared Hemispherical Emissivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.84",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Back Side Infrared Hemispherical Emissivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Conductivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dirt Correction Factor for Solar and Visible Transmittance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"No","Yes"},"Solar Diffusing",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"7.2e10",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Young's modulus",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.22",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Poisson's ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Window Glass Spectral and Incident Angle Transmittance Data Set Table Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Window Glass Spectral and Incident Angle Front Reflectance Data Set Table Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Window Glass Spectral and Incident Angle Back Reflectance Data Set Table Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"})},false,21 ) },
            {"WindowMaterial:GlazingGroup:Thermochromic", () => new IdfObject("WindowMaterial:GlazingGroup:Thermochromic",false,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"MaterialName","GlazingMaterialName"},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Optical Data Temperature 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Window Material Glazing Name 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"GlazingMaterialName"})},true,91 ) },
            {"WindowMaterial:Glazing:RefractionExtinctionMethod", () => new IdfObject("WindowMaterial:Glazing:RefractionExtinctionMethod",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"MaterialName","GlazingMaterialName"},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thickness",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",1,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Solar Index of Refraction",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"1/m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Solar Extinction Coefficient",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",1,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Visible Index of Refraction",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"1/m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Visible Extinction Coefficient",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Infrared Transmittance at Normal Incidence",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.84",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Infrared Hemispherical Emissivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Conductivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dirt Correction Factor for Solar and Visible Transmittance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"No","Yes"},"Solar Diffusing",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,11 ) },
            {"WindowMaterial:Gas", () => new IdfObject("WindowMaterial:Gas",false,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"MaterialName","WindowGasAndGasMixtures"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Air","Argon","Krypton","Xenon","Custom"},"Gas Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thickness",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Conductivity Coefficient A",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Conductivity Coefficient B",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Conductivity Coefficient C",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m-s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Viscosity Coefficient A",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m-s-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Viscosity Coefficient B",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m-s-K2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Viscosity Coefficient C",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Specific Heat Coefficient A",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg-K2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Specific Heat Coefficient B",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg-K3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Specific Heat Coefficient C",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"g/mol",20,200,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Molecular Weight",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Specific Heat Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,14 ) },
            {"WindowGap:SupportPillar", () => new IdfObject("WindowGap:SupportPillar",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"WindowGapSupportPillars"},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.04",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Spacing",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.0004",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Radius",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,3 ) },
            {"WindowGap:DeflectionState", () => new IdfObject("WindowGap:DeflectionState",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"WindowGapDeflectionStates"},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Deflected Thickness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"25",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Initial Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"101325",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Initial Pressure",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,4 ) },
            {"WindowMaterial:GasMixture", () => new IdfObject("WindowMaterial:GasMixture",false,IdfObjectFormat.NotSpecified,false,7,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"MaterialName","WindowGasAndGasMixtures"},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thickness",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",1,4,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Gases in Mixture",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Air","Argon","Krypton","Xenon"},"Gas 1 Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gas 1 Fraction",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Air","Argon","Krypton","Xenon"},"Gas 2 Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gas 2 Fraction",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Air","Argon","Krypton","Xenon"},"Gas 3 Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gas 3 Fraction",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Air","Argon","Krypton","Xenon"},"Gas 4 Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gas 4 Fraction",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,11 ) },
            {"WindowMaterial:Gap", () => new IdfObject("WindowMaterial:Gap",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"CFSGap"},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thickness",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gas (or Gas Mixture)",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WindowGasAndGasMixtures"}),new IdfField(false,"Pa",0,0,"101325",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pressure",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Deflection State",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WindowGapDeflectionStates"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Support Pillar",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WindowGapSupportPillars"})},false,6 ) },
            {"WindowMaterial:Shade", () => new IdfObject("WindowMaterial:Shade",false,IdfObjectFormat.NotSpecified,false,15,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"MaterialName","WindowShadesScreensAndBlinds"},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Solar Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Solar Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Visible Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Visible Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Infrared Hemispherical Emissivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Infrared Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thickness",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Conductivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0.001,1,"0.050",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Shade to Glass Distance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Top Opening Multiplier",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Bottom Opening Multiplier",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Left-Side Opening Multiplier",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Right-Side Opening Multiplier",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0.8,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Airflow Permeability",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,15 ) },
            {"WindowMaterial:ComplexShade", () => new IdfObject("WindowMaterial:ComplexShade",false,IdfObjectFormat.NotSpecified,false,12,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"WindowComplexShades"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"OtherShadingType",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"VenetianHorizontal","VenetianVertical","Woven","Perforated","BSDF","OtherShadingType"},"Layer Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.002",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thickness",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Conductivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"IR Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.84",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Emissivity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.84",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Back Emissivity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Top Opening Multiplier",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Bottom Opening Multiplier",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Left Side Opening Multiplier",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Right Side Opening Multiplier",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.05",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Opening Multiplier",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.016",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Slat Width",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.012",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Slat Spacing",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.0006",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Slat Thickness",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",-90,90,"90",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Slat Angle",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,"160.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Slat Conductivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Slat Curve",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,18 ) },
            {"WindowMaterial:Blind", () => new IdfObject("WindowMaterial:Blind",false,IdfObjectFormat.NotSpecified,false,29,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"MaterialName","WindowShadesScreensAndBlinds"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Horizontal",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Horizontal","Vertical"},"Slat Orientation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Slat Width",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Slat Separation",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0.1,"0.00025",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Slat Thickness",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,180,"45",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Slat Angle",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,"221.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Slat Conductivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Slat Beam Solar Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Side Slat Beam Solar Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Back Side Slat Beam Solar Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Slat Diffuse Solar Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Side Slat Diffuse Solar Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Back Side Slat Diffuse Solar Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Slat Beam Visible Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Side Slat Beam Visible Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Back Side Slat Beam Visible Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Slat Diffuse Visible Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Side Slat Diffuse Visible Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Back Side Slat Diffuse Visible Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Slat Infrared Hemispherical Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Side Slat Infrared Hemispherical Emissivity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Back Side Slat Infrared Hemispherical Emissivity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0.01,1,"0.050",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Blind to Glass Distance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Blind Top Opening Multiplier",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Blind Bottom Opening Multiplier",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Blind Left Side Opening Multiplier",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Blind Right Side Opening Multiplier",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,180,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Slat Angle",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,180,"180",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Slat Angle",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,29 ) },
            {"WindowMaterial:Screen", () => new IdfObject("WindowMaterial:Screen",false,IdfObjectFormat.NotSpecified,false,9,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"MaterialName","WindowShadesScreensAndBlinds"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ModelAsDiffuse",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"DoNotModel","ModelAsDirectBeam","ModelAsDiffuse"},"Reflected Beam Transmittance Accounting Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Diffuse Solar Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Diffuse Visible Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Hemispherical Emissivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,"221.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Conductivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Screen Material Spacing",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Screen Material Diameter",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0.001,1,"0.025",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Screen to Glass Distance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Top Opening Multiplier",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Bottom Opening Multiplier",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Left Side Opening Multiplier",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Right Side Opening Multiplier",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"0","1","2","3","5"},"Angle of Resolution for Screen Transmittance Output Map",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,14 ) },
            {"WindowMaterial:Shade:EquivalentLayer", () => new IdfObject("WindowMaterial:Shade:EquivalentLayer",false,IdfObjectFormat.NotSpecified,false,6,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"WindowEquivalentLayerMaterialNames"},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0.8,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Shade Beam-Beam Solar Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Side Shade Beam-Diffuse Solar Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Back Side Shade Beam-Diffuse Solar Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Side Shade Beam-Diffuse Solar Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Back Side Shade Beam-Diffuse Solar Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Shade Beam-Beam Visible Transmittance at Normal Incidence",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Shade Beam-Diffuse Visible Transmittance at Normal Incidence",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Shade Beam-Diffuse Visible Reflectance at Normal Incidence",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.05",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Shade Material Infrared Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.91",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Side Shade Material Infrared Emissivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.91",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Back Side Shade Material Infrared Emissivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{})},false,12 ) },
            {"WindowMaterial:Drape:EquivalentLayer", () => new IdfObject("WindowMaterial:Drape:EquivalentLayer",false,IdfObjectFormat.NotSpecified,false,4,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"WindowEquivalentLayerMaterialNames"},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0.2,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Drape Beam-Beam Solar Transmittance at Normal Incidence",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Side Drape Beam-Diffuse Solar Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Back Side Drape Beam-Diffuse Solar Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Side Drape Beam-Diffuse Solar Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Back Side Drape Beam-Diffuse Solar Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Drape Beam-Beam Visible Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Drape Beam-Diffuse Visible Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Drape Beam-Diffuse Visible Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.05",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Drape Material Infrared Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.87",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Side Drape Material Infrared Emissivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.87",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Back Side Drape Material Infrared Emissivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Width of Pleated Fabric",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Length of Pleated Fabric",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,14 ) },
            {"WindowMaterial:Blind:EquivalentLayer", () => new IdfObject("WindowMaterial:Blind:EquivalentLayer",false,IdfObjectFormat.NotSpecified,false,10,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"WindowEquivalentLayerMaterialNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Horizontal",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Horizontal","Vertical"},"Slat Orientation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0.025,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Slat Width",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0.025,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Slat Separation",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0.00156,"0.0015",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Slat Crown",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",-90,90,"45",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Slat Angle",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Side Slat Beam-Diffuse Solar Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Back Side Slat Beam-Diffuse Solar Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Side Slat Beam-Diffuse Solar Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Back Side Slat Beam-Diffuse Solar Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Side Slat Beam-Diffuse Visible Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Back Side Slat Beam-Diffuse Visible Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Side Slat Beam-Diffuse Visible Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Back Side Slat Beam-Diffuse Visible Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Slat Diffuse-Diffuse Solar Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Side Slat Diffuse-Diffuse Solar Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Back Side Slat Diffuse-Diffuse Solar Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Slat Diffuse-Diffuse Visible Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Side Slat Diffuse-Diffuse Visible Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Back Side Slat Diffuse-Diffuse Visible Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Slat Infrared Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Side Slat Infrared Emissivity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Back Side Slat Infrared Emissivity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"FixedSlatAngle",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"FixedSlatAngle","MaximizeSolar","BlockBeamSolar"},"Slat Angle Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,24 ) },
            {"WindowMaterial:Screen:EquivalentLayer", () => new IdfObject("WindowMaterial:Screen:EquivalentLayer",false,IdfObjectFormat.NotSpecified,false,11,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"WindowEquivalentLayerMaterialNames"},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Screen Beam-Beam Solar Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Screen Beam-Diffuse Solar Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Screen Beam-Diffuse Solar Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Screen Beam-Beam Visible Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Screen Beam-Diffuse Visible Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Screen Beam-Diffuse Visible Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.02",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Screen Infrared Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.93",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Screen Infrared Emissivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.025",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Screen Wire Spacing",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.005",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Screen Wire Diameter",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,11 ) },
            {"WindowMaterial:Glazing:EquivalentLayer", () => new IdfObject("WindowMaterial:Glazing:EquivalentLayer",false,IdfObjectFormat.NotSpecified,false,11,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"WindowEquivalentLayerMaterialNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SpectralAverage",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Spectral"},"Optical Data Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Window Glass Spectral Data Set Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SpectralDataSets"}),new IdfField(true,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Side Beam-Beam Solar Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Back Side Beam-Beam Solar Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Side Beam-Beam Solar Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Back Side Beam-Beam Solar Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Side Beam-Beam Visible Solar Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Back Side Beam-Beam Visible Solar Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Side Beam-Beam Visible Solar Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Back Side Beam-Beam Visible Solar Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Side Beam-Diffuse Solar Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Back Side Beam-Diffuse Solar Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Side Beam-Diffuse Solar Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Back Side Beam-Diffuse Solar Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Side Beam-Diffuse Visible Solar Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Back Side Beam-Diffuse Visible Solar Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Side Beam-Diffuse Visible Solar Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Back Side Beam-Diffuse Visible Solar Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Diffuse-Diffuse Solar Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Side Diffuse-Diffuse Solar Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Back Side Diffuse-Diffuse Solar Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Diffuse-Diffuse Visible Solar Transmittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Side Diffuse-Diffuse Visible Solar Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Back Side Diffuse-Diffuse Visible Solar Reflectance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Infrared Transmittance (applies to front and back)",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.84",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Side Infrared Emissivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.84",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Back Side Infrared Emissivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2-K/W",0,0,"0.158",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Resistance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,29 ) },
            {"WindowMaterial:Gap:EquivalentLayer", () => new IdfObject("WindowMaterial:Gap:EquivalentLayer",false,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"WindowEquivalentLayerMaterialNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"AIR","ARGON","KRYPTON","XENON","CUSTOM"},"Gas Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thickness",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Sealed","VentedIndoor","VentedOutdoor"},"Gap Vent Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Conductivity Coefficient A",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Conductivity Coefficient B",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Conductivity Coefficient C",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m-s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Viscosity Coefficient A",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m-s-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Viscosity Coefficient B",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m-s-K2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Viscosity Coefficient C",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Specific Heat Coefficient A",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg-K2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Specific Heat Coefficient B",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg-K3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Specific Heat Coefficient C",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"g/mol",20,200,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Molecular Weight",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Specific Heat Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,15 ) },
            {"MaterialProperty:MoisturePenetrationDepth:Settings", () => new IdfObject("MaterialProperty:MoisturePenetrationDepth:Settings",false,IdfObjectFormat.NotSpecified,false,10,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(true,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Vapor Diffusion Resistance Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Equation Coefficient a",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Equation Coefficient b",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Equation Coefficient c",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Equation Coefficient d",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface Layer Penetration Depth",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Deep Layer Penetration Depth",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coating Layer Thickness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coating Layer Water Vapor Diffusion Resistance Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,10 ) },
            {"MaterialProperty:PhaseChange", () => new IdfObject("MaterialProperty:PhaseChange",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(false,"W/m-K2",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Coefficient for Thermal Conductivity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"J/kg",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Enthalpy 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"J/kg",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Enthalpy 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"J/kg",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Enthalpy 3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Enthalpy 4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Enthalpy 5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 6",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Enthalpy 6",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 7",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Enthalpy 7",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 8",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Enthalpy 8",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 9",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Enthalpy 9",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 10",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Enthalpy 10",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 11",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Enthalpy 11",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 12",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Enthalpy 12",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 13",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Enthalpy 13",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 14",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Enthalpy 14",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 15",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Enthalpy 15",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 16",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Enthalpy 16",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,34 ) },
            {"MaterialProperty:PhaseChangeHysteresis", () => new IdfObject("MaterialProperty:PhaseChangeHysteresis",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(true,"J/kg",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Latent Heat during the Entire Phase Change Process",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid State Thermal Conductivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid State Density",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"J/kg-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid State Specific Heat",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"High Temperature Difference of Melting Curve",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Peak Melting Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Temperature Difference of Melting Curve",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Solid State Thermal Conductivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Solid State Density",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"J/kg-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Solid State Specific Heat",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"High Temperature Difference of Freezing Curve",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Peak Freezing Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Temperature Difference of Freezing Curve",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,14 ) },
            {"MaterialProperty:VariableThermalConductivity", () => new IdfObject("MaterialProperty:VariableThermalConductivity",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Conductivity 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Conductivity 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Conductivity 3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Conductivity 4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Conductivity 5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 6",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Conductivity 6",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 7",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Conductivity 7",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 8",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Conductivity 8",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 9",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Conductivity 9",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 10",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Conductivity 10",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,21 ) },
            {"MaterialProperty:HeatAndMoistureTransfer:Settings", () => new IdfObject("MaterialProperty:HeatAndMoistureTransfer:Settings",false,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Material Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(true,"m3/m3",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Porosity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/kg",0,0,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Initial Water Content Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,3 ) },
            {"MaterialProperty:HeatAndMoistureTransfer:SorptionIsotherm", () => new IdfObject("MaterialProperty:HeatAndMoistureTransfer:SorptionIsotherm",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Material Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(true,"",1,25,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Isotherm Coordinates",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 2",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 2",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 3",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 3",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 4",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 4",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 5",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 5",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 6",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 6",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 7",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 7",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 8",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 8",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 9",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 9",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 10",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 10",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 11",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 11",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 12",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 12",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 13",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 13",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 14",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 14",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 15",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 15",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 16",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 16",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 17",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 17",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 18",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 18",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 19",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 19",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 20",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 20",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 21",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 21",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 22",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 22",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 23",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 23",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 24",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 24",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 25",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 25",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,52 ) },
            {"MaterialProperty:HeatAndMoistureTransfer:Suction", () => new IdfObject("MaterialProperty:HeatAndMoistureTransfer:Suction",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Material Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(true,"",1,25,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Suction points",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 2",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 2",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 3",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 3",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 4",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 4",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 5",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 5",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 6",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 6",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 7",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 7",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 8",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 8",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 9",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 9",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 10",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 10",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 11",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 11",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 12",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 12",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 13",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 13",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 14",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 14",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 15",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 15",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 16",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 16",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 17",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 17",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 18",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 18",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 19",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 19",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 20",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 20",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 21",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 21",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 22",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 22",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 23",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 23",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 24",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 24",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 25",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 25",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,52 ) },
            {"MaterialProperty:HeatAndMoistureTransfer:Redistribution", () => new IdfObject("MaterialProperty:HeatAndMoistureTransfer:Redistribution",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Material Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(true,"",1,25,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Redistribution points",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 2",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 2",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 3",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 3",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 4",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 4",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 5",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 5",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 6",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 6",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 7",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 7",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 8",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 8",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 9",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 9",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 10",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 10",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 11",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 11",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 12",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 12",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 13",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 13",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 14",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 14",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 15",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 15",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 16",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 16",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 17",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 17",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 18",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 18",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 19",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 19",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 20",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 20",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 21",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 21",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 22",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 22",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 23",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 23",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 24",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 24",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 25",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Transport Coefficient 25",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,52 ) },
            {"MaterialProperty:HeatAndMoistureTransfer:Diffusion", () => new IdfObject("MaterialProperty:HeatAndMoistureTransfer:Diffusion",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Material Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(true,"",1,25,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Data Pairs",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Vapor Diffusion Resistance Factor 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 2",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Vapor Diffusion Resistance Factor 2",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 3",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Vapor Diffusion Resistance Factor 3",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 4",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Vapor Diffusion Resistance Factor 4",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 5",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Vapor Diffusion Resistance Factor 5",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 6",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Vapor Diffusion Resistance Factor 6",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 7",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Vapor Diffusion Resistance Factor 7",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 8",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Vapor Diffusion Resistance Factor 8",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 9",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Vapor Diffusion Resistance Factor 9",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 10",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Vapor Diffusion Resistance Factor 10",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 11",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Vapor Diffusion Resistance Factor 11",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 12",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Vapor Diffusion Resistance Factor 12",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 13",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Vapor Diffusion Resistance Factor 13",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 14",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Vapor Diffusion Resistance Factor 14",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 15",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Vapor Diffusion Resistance Factor 15",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 16",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Vapor Diffusion Resistance Factor 16",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 17",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Vapor Diffusion Resistance Factor 17",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 18",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Vapor Diffusion Resistance Factor 18",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 19",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Vapor Diffusion Resistance Factor 19",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 20",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Vapor Diffusion Resistance Factor 20",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 21",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Vapor Diffusion Resistance Factor 21",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 22",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Vapor Diffusion Resistance Factor 22",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 23",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Vapor Diffusion Resistance Factor 23",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 24",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Vapor Diffusion Resistance Factor 24",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Fraction 25",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Vapor Diffusion Resistance Factor 25",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,52 ) },
            {"MaterialProperty:HeatAndMoistureTransfer:ThermalConductivity", () => new IdfObject("MaterialProperty:HeatAndMoistureTransfer:ThermalConductivity",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Material Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(true,"",1,25,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Thermal Coordinates",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Conductivity 1",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 2",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Conductivity 2",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 3",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Conductivity 3",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 4",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Conductivity 4",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 5",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Conductivity 5",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 6",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Conductivity 6",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 7",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Conductivity 7",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 8",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Conductivity 8",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 9",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Conductivity 9",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 10",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Conductivity 10",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 11",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Conductivity 11",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 12",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Conductivity 12",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 13",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Conductivity 13",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 14",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Conductivity 14",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 15",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Conductivity 15",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 16",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Conductivity 16",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 17",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Conductivity 17",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 18",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Conductivity 18",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 19",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Conductivity 19",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 20",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Conductivity 20",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 21",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Conductivity 21",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 22",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Conductivity 22",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 23",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Conductivity 23",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 24",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Conductivity 24",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Moisture Content 25",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Conductivity 25",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,52 ) },
            {"MaterialProperty:GlazingSpectralData", () => new IdfObject("MaterialProperty:GlazingSpectralData",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SpectralDataSets"},new List<string>{},new List<string>{}),new IdfField(false,"micron",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wavelength 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Transmittance 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Reflectance 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Back Reflectance 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"micron",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wavelength 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Transmittance 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Reflectance 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Back Reflectance 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"micron",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wavelength 3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Transmittance 3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Reflectance 3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Back Reflectance 3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"micron",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wavelength 4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Transmittance 4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Reflectance 4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Back Reflectance 4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"micron",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wavelength 5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Transmittance 5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Reflectance 5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Back Reflectance 5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,3201 ) },
            {"Construction", () => new IdfObject("Construction",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ConstructionNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outside Layer",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 6",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 7",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 8",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 9",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 10",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"})},false,11 ) },
            {"Construction:CfactorUndergroundWall", () => new IdfObject("Construction:CfactorUndergroundWall",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ConstructionNames"},new List<string>{},new List<string>{}),new IdfField(true,"W/m2-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"C-Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Height",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,3 ) },
            {"Construction:FfactorGroundFloor", () => new IdfObject("Construction:FfactorGroundFloor",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ConstructionNames"},new List<string>{},new List<string>{}),new IdfField(true,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"F-Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Area",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"PerimeterExposed",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,4 ) },
            {"Construction:InternalSource", () => new IdfObject("Construction:InternalSource",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ConstructionNames"},new List<string>{},new List<string>{}),new IdfField(true,"",1,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Present After Layer Number",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Calculation Requested After Layer Number",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",1,2,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dimensions for the CTF Calculation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tube Spacing",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outside Layer",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 6",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 7",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 8",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 9",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 10",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"})},false,15 ) },
            {"Construction:AirBoundary", () => new IdfObject("Construction:AirBoundary",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ConstructionNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"GroupedZones",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"GroupedZones","InteriorWindow"},"Solar and Daylighting Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"GroupedZones",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"GroupedZones","IRTSurface"},"Radiant Exchange Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","SimpleMixing"},"Air Exchange Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"1/hr",0,0,"0.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Simple Mixing Air Changes per Hour",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Simple Mixing Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,6 ) },
            {"WindowThermalModel:Params", () => new IdfObject("WindowThermalModel:Params",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"WindowThermalModelParameters"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ISO15099",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ISO15099","EN673Declared","EN673Design"},"standard",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ISO15099",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ISO15099","ScaledCavityWidth","ConvectiveScalarModel_NoSDThickness","ConvectiveScalarModel_withSDThickness"},"Thermal Model",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"SDScalar",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"NoDeflection",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"NoDeflection","TemperatureAndPressureInput","MeasuredDeflection"},"Deflection Model",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"13.238",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Vacuum Pressure Limit",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"25",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Initial temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"101325",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Initial pressure",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,8 ) },
            {"WindowsCalculationEngine", () => new IdfObject("WindowsCalculationEngine",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,"BuiltInWindowsModel",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"BuiltInWindowsModel","ExternalWindowsModel"},"Windows engine",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,1 ) },
            {"Construction:ComplexFenestrationState", () => new IdfObject("Construction:ComplexFenestrationState",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ComplexFenestrationStates"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"LBNLWINDOW",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"LBNLWINDOW","UserDefined"},"Basis Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Axisymmetric","None"},"Basis Symmetry Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Window Thermal Model",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WindowThermalModelParameters"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basis Matrix Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DataMatrices"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Solar Optical Complex Front Transmittance Matrix Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DataMatrices"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Solar Optical Complex Back Reflectance Matrix Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DataMatrices"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Visible Optical Complex Front Transmittance Matrix Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DataMatrices"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Visible Optical Complex Back Transmittance Matrix Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DataMatrices"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outside Layer Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CFSGlazingName","WindowComplexShades"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outside Layer Directional Front Absoptance Matrix Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DataMatrices"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outside Layer Directional Back Absoptance Matrix Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DataMatrices"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gap 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CFSGap"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"CFS Gap 1 Directional Front Absoptance Matrix Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DataMatrices"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"CFS Gap 1 Directional Back Absoptance Matrix Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DataMatrices"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 2 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CFSGlazingName","WindowComplexShades"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 2 Directional Front Absoptance Matrix Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DataMatrices"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 2 Directional Back Absoptance Matrix Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DataMatrices"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gap 2 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CFSGap"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gap 2 Directional Front Absoptance Matrix Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DataMatrices"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gap 2 Directional Back Absoptance Matrix Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DataMatrices"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 3 Material",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CFSGlazingName","WindowComplexShades"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 3 Directional Front Absoptance Matrix Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DataMatrices"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 3 Directional Back Absoptance Matrix Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DataMatrices"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gap 3 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CFSGap"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gap 3 Directional Front Absoptance Matrix Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DataMatrices"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gap 3 Directional Back Absoptance Matrix Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DataMatrices"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 4 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CFSGlazingName","WindowComplexShades"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 4 Directional Front Absoptance Matrix Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DataMatrices"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 4 Directional Back Absoptance Matrix Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DataMatrices"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gap 4 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CFSGap"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gap 4 Directional Front Absoptance Matrix Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DataMatrices"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gap 4 Directional Back Absoptance Matrix Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DataMatrices"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 5 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CFSGlazingName","WindowComplexShades"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 5 Directional Front Absoptance Matrix Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DataMatrices"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 5 Directional Back Absoptance Matrix Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,36 ) },
            {"Construction:WindowEquivalentLayer", () => new IdfObject("Construction:WindowEquivalentLayer",false,IdfObjectFormat.NotSpecified,false,2,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ConstructionNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outside Layer",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WindowEquivalentLayerMaterialNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WindowEquivalentLayerMaterialNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WindowEquivalentLayerMaterialNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WindowEquivalentLayerMaterialNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WindowEquivalentLayerMaterialNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 6",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WindowEquivalentLayerMaterialNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 7",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WindowEquivalentLayerMaterialNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 8",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WindowEquivalentLayerMaterialNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 9",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WindowEquivalentLayerMaterialNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 10",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WindowEquivalentLayerMaterialNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 11",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WindowEquivalentLayerMaterialNames"})},false,12 ) },
            {"Construction:WindowDataFile", () => new IdfObject("Construction:WindowDataFile",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ConstructionNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"File Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,2 ) },
            {"GlobalGeometryRules", () => new IdfObject("GlobalGeometryRules",true,IdfObjectFormat.NotSpecified,false,null,true,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"UpperLeftCorner","LowerLeftCorner","UpperRightCorner","LowerRightCorner"},"Starting Vertex Position",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Counterclockwise","Clockwise"},"Vertex Entry Direction",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Relative","World","Absolute"},"Coordinate System",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Relative",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Relative","World","Absolute"},"Daylighting Reference Point Coordinate System",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Relative",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Relative","World","Absolute"},"Rectangular Surface Coordinate System",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"GeometryTransform", () => new IdfObject("GeometryTransform",true,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(false,"",0,0,"XY",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"XY"},"Plane of Transform",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Current Aspect Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"New Aspect Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,3 ) },
            {"Zone", () => new IdfObject("Zone",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ZoneNames","OutFaceEnvNames","ZoneAndZoneListNames","AirflowNetworkNodeAndZoneNames"},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Direction of Relative North",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"X Origin",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Y Origin",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Z Origin",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,1,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Type",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Multiplier",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ceiling Height",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3",0,0,"autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Volume",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2",0,0,"autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Floor Area",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Simple","TARP","CeilingDiffuser","AdaptiveConvectionAlgorithm","TrombeWall"},"Zone Inside Convection Algorithm",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SimpleCombined","TARP","DOE-2","MoWiTT","AdaptiveConvectionAlgorithm"},"Zone Outside Convection Algorithm",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Yes",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Part of Total Floor Area",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,13 ) },
            {"ZoneList", () => new IdfObject("ZoneList",false,IdfObjectFormat.NotSpecified,false,2,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ZoneListNames","ZoneAndZoneListNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"})},true,501 ) },
            {"ZoneGroup", () => new IdfObject("ZoneGroup",false,IdfObjectFormat.NotSpecified,false,2,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneListNames"}),new IdfField(false,"",1,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone List Multiplier",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,3 ) },
            {"BuildingSurface:Detailed", () => new IdfObject("BuildingSurface:Detailed",false,IdfObjectFormat.NotSpecified,false,19,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SurfaceNames","SurfAndSubSurfNames","AllHeatTranSurfNames","OutFaceEnvNames","AllHeatTranAngFacNames","RadiantSurfaceNames","AllShadingAndHTSurfNames","FloorSurfaceNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Floor","Wall","Ceiling","Roof"},"Surface Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Construction Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ConstructionNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Adiabatic","Surface","Zone","Outdoors","Foundation","Ground","GroundFCfactorMethod","OtherSideCoefficients","OtherSideConditionsModel","GroundSlabPreprocessorAverage","GroundSlabPreprocessorCore","GroundSlabPreprocessorPerimeter","GroundBasementPreprocessorAverageWall","GroundBasementPreprocessorAverageFloor","GroundBasementPreprocessorUpperWall","GroundBasementPreprocessorLowerWall"},"Outside Boundary Condition",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outside Boundary Condition Object",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"OutFaceEnvNames"}),new IdfField(false,"",0,0,"SunExposed",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SunExposed","NoSun"},"Sun Exposure",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"WindExposed",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"WindExposed","NoWind"},"Wind Exposure",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"View Factor to Ground",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",3,0,"autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Vertices",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Vertex 1 X-coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Vertex 1 Y-coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Vertex 1 Z-coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,370 ) },
            {"Wall:Detailed", () => new IdfObject("Wall:Detailed",false,IdfObjectFormat.NotSpecified,false,18,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SurfaceNames","SurfAndSubSurfNames","AllHeatTranSurfNames","OutFaceEnvNames","AllHeatTranAngFacNames","RadiantSurfaceNames","AllShadingAndHTSurfNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Construction Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ConstructionNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Adiabatic","Surface","Zone","Outdoors","Foundation","Ground","GroundFCfactorMethod","OtherSideCoefficients","OtherSideConditionsModel","GroundSlabPreprocessorAverage","GroundSlabPreprocessorCore","GroundSlabPreprocessorPerimeter","GroundBasementPreprocessorAverageWall","GroundBasementPreprocessorAverageFloor","GroundBasementPreprocessorUpperWall","GroundBasementPreprocessorLowerWall"},"Outside Boundary Condition",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outside Boundary Condition Object",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"OutFaceEnvNames"}),new IdfField(false,"",0,0,"SunExposed",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SunExposed","NoSun"},"Sun Exposure",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"WindExposed",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"WindExposed","NoWind"},"Wind Exposure",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"View Factor to Ground",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",3,0,"autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Vertices",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Vertex 1 X-coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Vertex 1 Y-coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Vertex 1 Z-coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,39 ) },
            {"RoofCeiling:Detailed", () => new IdfObject("RoofCeiling:Detailed",false,IdfObjectFormat.NotSpecified,false,18,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SurfaceNames","SurfAndSubSurfNames","AllHeatTranSurfNames","OutFaceEnvNames","AllHeatTranAngFacNames","RadiantSurfaceNames","AllShadingAndHTSurfNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Construction Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ConstructionNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Adiabatic","Surface","Zone","Outdoors","Ground","OtherSideCoefficients","OtherSideConditionsModel","GroundSlabPreprocessorAverage","GroundSlabPreprocessorCore","GroundSlabPreprocessorPerimeter","GroundBasementPreprocessorAverageWall","GroundBasementPreprocessorAverageFloor","GroundBasementPreprocessorUpperWall","GroundBasementPreprocessorLowerWall"},"Outside Boundary Condition",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outside Boundary Condition Object",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"OutFaceEnvNames"}),new IdfField(false,"",0,0,"SunExposed",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SunExposed","NoSun"},"Sun Exposure",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"WindExposed",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"WindExposed","NoWind"},"Wind Exposure",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"View Factor to Ground",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",3,0,"autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Vertices",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Vertex 1 X-coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Vertex 1 Y-coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Vertex 1 Z-coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,39 ) },
            {"Floor:Detailed", () => new IdfObject("Floor:Detailed",false,IdfObjectFormat.NotSpecified,false,18,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SurfaceNames","SurfAndSubSurfNames","AllHeatTranSurfNames","OutFaceEnvNames","AllHeatTranAngFacNames","RadiantSurfaceNames","AllShadingAndHTSurfNames","FloorSurfaceNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Construction Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ConstructionNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Adiabatic","Surface","Zone","Outdoors","Foundation","Ground","GroundFCfactorMethod","OtherSideCoefficients","OtherSideConditionsModel","GroundSlabPreprocessorAverage","GroundSlabPreprocessorCore","GroundSlabPreprocessorPerimeter","GroundBasementPreprocessorAverageWall","GroundBasementPreprocessorAverageFloor","GroundBasementPreprocessorUpperWall","GroundBasementPreprocessorLowerWall"},"Outside Boundary Condition",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outside Boundary Condition Object",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"OutFaceEnvNames"}),new IdfField(false,"",0,0,"SunExposed",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SunExposed","NoSun"},"Sun Exposure",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"WindExposed",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"WindExposed","NoWind"},"Wind Exposure",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"View Factor to Ground",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",3,0,"autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Vertices",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Vertex 1 X-coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Vertex 1 Y-coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Vertex 1 Z-coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,39 ) },
            {"Wall:Exterior", () => new IdfObject("Wall:Exterior",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SurfaceNames","SurfAndSubSurfNames","AllHeatTranSurfNames","AllHeatTranAngFacNames","RadiantSurfaceNames","AllShadingAndHTSurfNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Construction Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ConstructionNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Azimuth Angle",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,180,"90",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tilt Angle",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting X Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting Y Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting Z Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Length",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Height",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,10 ) },
            {"Wall:Adiabatic", () => new IdfObject("Wall:Adiabatic",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SurfaceNames","SurfAndSubSurfNames","AllHeatTranSurfNames","AllHeatTranAngFacNames","RadiantSurfaceNames","AllShadingAndHTSurfNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Construction Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ConstructionNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Azimuth Angle",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,180,"90",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tilt Angle",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting X Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting Y Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting Z Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Length",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Height",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,10 ) },
            {"Wall:Underground", () => new IdfObject("Wall:Underground",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SurfaceNames","SurfAndSubSurfNames","AllHeatTranSurfNames","AllHeatTranAngFacNames","RadiantSurfaceNames","AllShadingAndHTSurfNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Construction Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ConstructionNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Azimuth Angle",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,180,"90",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tilt Angle",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting X Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting Y Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting Z Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Length",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Height",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,10 ) },
            {"Wall:Interzone", () => new IdfObject("Wall:Interzone",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SurfaceNames","SurfAndSubSurfNames","AllHeatTranSurfNames","OutFaceEnvNames","AllHeatTranAngFacNames","RadiantSurfaceNames","AllShadingAndHTSurfNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Construction Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ConstructionNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outside Boundary Condition Object",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"OutFaceEnvNames"}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Azimuth Angle",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,180,"90",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tilt Angle",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting X Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting Y Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting Z Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Length",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Height",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,11 ) },
            {"Roof", () => new IdfObject("Roof",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SurfaceNames","SurfAndSubSurfNames","AllHeatTranSurfNames","AllHeatTranAngFacNames","RadiantSurfaceNames","AllShadingAndHTSurfNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Construction Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ConstructionNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Azimuth Angle",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,180,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tilt Angle",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting X Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting Y Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting Z Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Length",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Width",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,10 ) },
            {"Ceiling:Adiabatic", () => new IdfObject("Ceiling:Adiabatic",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SurfaceNames","SurfAndSubSurfNames","AllHeatTranSurfNames","AllHeatTranAngFacNames","RadiantSurfaceNames","AllShadingAndHTSurfNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Construction Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ConstructionNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Azimuth Angle",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,180,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tilt Angle",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting X Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting Y Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting Z Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Length",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Width",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,10 ) },
            {"Ceiling:Interzone", () => new IdfObject("Ceiling:Interzone",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SurfaceNames","SurfAndSubSurfNames","AllHeatTranSurfNames","OutFaceEnvNames","AllHeatTranAngFacNames","RadiantSurfaceNames","AllShadingAndHTSurfNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Construction Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ConstructionNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outside Boundary Condition Object",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"OutFaceEnvNames"}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Azimuth Angle",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,180,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tilt Angle",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting X Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting Y Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting Z Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Length",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Width",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,11 ) },
            {"Floor:GroundContact", () => new IdfObject("Floor:GroundContact",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SurfaceNames","SurfAndSubSurfNames","AllHeatTranSurfNames","AllHeatTranAngFacNames","RadiantSurfaceNames","AllShadingAndHTSurfNames","FloorSurfaceNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Construction Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ConstructionNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Azimuth Angle",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,180,"180",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tilt Angle",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting X Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting Y Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting Z Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Length",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Width",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,10 ) },
            {"Floor:Adiabatic", () => new IdfObject("Floor:Adiabatic",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SurfaceNames","SurfAndSubSurfNames","AllHeatTranSurfNames","AllHeatTranAngFacNames","RadiantSurfaceNames","AllShadingAndHTSurfNames","FloorSurfaceNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Construction Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ConstructionNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Azimuth Angle",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,180,"180",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tilt Angle",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting X Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting Y Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting Z Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Length",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Width",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,10 ) },
            {"Floor:Interzone", () => new IdfObject("Floor:Interzone",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SurfaceNames","SurfAndSubSurfNames","AllHeatTranSurfNames","OutFaceEnvNames","AllHeatTranAngFacNames","RadiantSurfaceNames","AllShadingAndHTSurfNames","FloorSurfaceNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Construction Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ConstructionNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outside Boundary Condition Object",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"OutFaceEnvNames"}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Azimuth Angle",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,180,"180",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tilt Angle",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting X Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting Y Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting Z Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Length",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Width",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,11 ) },
            {"FenestrationSurface:Detailed", () => new IdfObject("FenestrationSurface:Detailed",false,IdfObjectFormat.NotSpecified,false,18,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SubSurfNames","GlazedExtSubSurfNames","SurfAndSubSurfNames","AllHeatTranSurfNames","OutFaceEnvNames","AllHeatTranAngFacNames","RadiantSurfaceNames","AllShadingAndHTSurfNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Window","Door","GlassDoor","TubularDaylightDome","TubularDaylightDiffuser"},"Surface Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Construction Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ConstructionNames","ComplexFenestrationStates"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Building Surface Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SurfaceNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outside Boundary Condition Object",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"OutFaceEnvNames"}),new IdfField(false,"",0,1,"autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"View Factor to Ground",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Frame and Divider Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WindowFrameAndDividerNames"}),new IdfField(false,"",1,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Multiplier",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",3,4,"autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Vertices",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Vertex 1 X-coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Vertex 1 Y-coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Vertex 1 Z-coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Vertex 2 X-coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Vertex 2 Y-coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Vertex 2 Z-coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Vertex 3 X-coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Vertex 3 Y-coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Vertex 3 Z-coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Vertex 4 X-coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Vertex 4 Y-coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Vertex 4 Z-coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,21 ) },
            {"Window", () => new IdfObject("Window",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SubSurfNames","GlazedExtSubSurfNames","SurfAndSubSurfNames","AllHeatTranSurfNames","OutFaceEnvNames","AllHeatTranAngFacNames","AllShadingAndHTSurfNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Construction Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ConstructionNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Building Surface Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SurfaceNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Frame and Divider Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WindowFrameAndDividerNames"}),new IdfField(false,"",1,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Multiplier",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting X Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting Z Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Length",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Height",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,9 ) },
            {"Door", () => new IdfObject("Door",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SubSurfNames","SurfAndSubSurfNames","AllHeatTranSurfNames","OutFaceEnvNames","AllHeatTranAngFacNames","RadiantSurfaceNames","AllShadingAndHTSurfNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Construction Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ConstructionNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Building Surface Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SurfaceNames"}),new IdfField(false,"",1,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Multiplier",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting X Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting Z Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Length",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Height",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,8 ) },
            {"GlazedDoor", () => new IdfObject("GlazedDoor",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SubSurfNames","GlazedExtSubSurfNames","SurfAndSubSurfNames","AllHeatTranSurfNames","OutFaceEnvNames","AllHeatTranAngFacNames","AllShadingAndHTSurfNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Construction Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ConstructionNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Building Surface Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SurfaceNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Frame and Divider Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WindowFrameAndDividerNames"}),new IdfField(false,"",1,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Multiplier",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting X Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting Z Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Length",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Height",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,9 ) },
            {"Window:Interzone", () => new IdfObject("Window:Interzone",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SubSurfNames","SurfAndSubSurfNames","AllHeatTranSurfNames","OutFaceEnvNames","AllHeatTranAngFacNames","AllShadingAndHTSurfNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Construction Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ConstructionNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Building Surface Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SurfaceNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outside Boundary Condition Object",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"OutFaceEnvNames"}),new IdfField(false,"",1,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Multiplier",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting X Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting Z Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Length",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Height",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,9 ) },
            {"Door:Interzone", () => new IdfObject("Door:Interzone",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SubSurfNames","SurfAndSubSurfNames","AllHeatTranSurfNames","OutFaceEnvNames","AllHeatTranAngFacNames","RadiantSurfaceNames","AllShadingAndHTSurfNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Construction Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ConstructionNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Building Surface Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SurfaceNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outside Boundary Condition Object",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"OutFaceEnvNames"}),new IdfField(false,"",1,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Multiplier",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting X Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting Z Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Length",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Height",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,9 ) },
            {"GlazedDoor:Interzone", () => new IdfObject("GlazedDoor:Interzone",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SubSurfNames","SurfAndSubSurfNames","AllHeatTranSurfNames","OutFaceEnvNames","AllHeatTranAngFacNames","AllShadingAndHTSurfNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Construction Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ConstructionNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Building Surface Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SurfaceNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outside Boundary Condition Object",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"OutFaceEnvNames"}),new IdfField(false,"",1,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Multiplier",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting X Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting Z Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Length",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Height",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,9 ) },
            {"WindowShadingControl", () => new IdfObject("WindowShadingControl",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"WindowShadeControlNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",1,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Shading Control Sequence Number",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"InteriorShade","ExteriorShade","ExteriorScreen","InteriorBlind","ExteriorBlind","BetweenGlassShade","BetweenGlassBlind","SwitchableGlazing"},"Shading Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Construction with Shading Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ConstructionNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"AlwaysOn","AlwaysOff","OnIfScheduleAllows","OnIfHighSolarOnWindow","OnIfHighHorizontalSolar","OnIfHighOutdoorAirTemperature","OnIfHighZoneAirTemperature","OnIfHighZoneCooling","OnIfHighGlare","MeetDaylightIlluminanceSetpoint","OnNightIfLowOutdoorTempAndOffDay","OnNightIfLowInsideTempAndOffDay","OnNightIfHeatingAndOffDay","OnNightIfLowOutdoorTempAndOnDayIfCooling","OnNightIfHeatingAndOnDayIfCooling","OffNightAndOnDayIfCoolingAndHighSolarOnWindow","OnNightAndOnDayIfCoolingAndHighSolarOnWindow","OnIfHighOutdoorAirTempAndHighSolarOnWindow","OnIfHighOutdoorAirTempAndHighHorizontalSolar","OnIfHighZoneAirTempAndHighSolarOnWindow","OnIfHighZoneAirTempAndHighHorizontalSolar"},"Shading Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"W/m2, W or deg C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"No","Yes"},"Shading Control Is Scheduled",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"No","Yes"},"Glare Control Is Active",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Shading Device Material Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WindowShadesScreensAndBlinds"}),new IdfField(false,"",0,0,"FixedSlatAngle",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"FixedSlatAngle","ScheduledSlatAngle","BlockBeamSolar"},"Type of Slat Angle Control for Blinds",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Slat Angle Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"W/m2 or deg C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Daylighting Control Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DaylightingControlNames"}),new IdfField(false,"",0,0,"Sequential",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Sequential","Group"},"Multiple Surface Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fenestration Surface 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"GlazedExtSubSurfNames"})},true,26 ) },
            {"WindowProperty:FrameAndDivider", () => new IdfObject("WindowProperty:FrameAndDivider",false,IdfObjectFormat.NotSpecified,false,20,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"WindowFrameAndDividerNames"},new List<string>{},new List<string>{}),new IdfField(false,"m",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Frame Width",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0.5,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Frame Outside Projection",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0.5,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Frame Inside Projection",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Frame Conductance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,4,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ratio of Frame-Edge Glass Conductance to Center-Of-Glass Conductance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Frame Solar Absorptance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Frame Visible Absorptance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Frame Thermal Hemispherical Emissivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"DividedLite",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"DividedLite","Suspended"},"Divider Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0.5,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Divider Width",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Horizontal Dividers",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Vertical Dividers",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0.5,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Divider Outside Projection",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0.5,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Divider Inside Projection",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2-K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Divider Conductance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,4,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ratio of Divider-Edge Glass Conductance to Center-Of-Glass Conductance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Divider Solar Absorptance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Divider Visible Absorptance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Divider Thermal Hemispherical Emissivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outside Reveal Solar Absorptance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,2,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inside Sill Depth",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inside Sill Solar Absorptance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,2,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inside Reveal Depth",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inside Reveal Solar Absorptance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,25 ) },
            {"WindowProperty:AirflowControl", () => new IdfObject("WindowProperty:AirflowControl",false,IdfObjectFormat.NotSpecified,false,7,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SubSurfNames"}),new IdfField(false,"",0,0,"IndoorAir",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"IndoorAir","OutdoorAir"},"Airflow Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"OutdoorAir",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"IndoorAir","OutdoorAir","ReturnAir"},"Airflow Destination",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-m",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"AlwaysOnAtMaximumFlow",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"AlwaysOnAtMaximumFlow","AlwaysOff","ScheduledOnly"},"Airflow Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Airflow Is Scheduled",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Airflow Multiplier Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Airflow Return Air Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,8 ) },
            {"WindowProperty:StormWindow", () => new IdfObject("WindowProperty:StormWindow",false,IdfObjectFormat.NotSpecified,false,7,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Window Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SubSurfNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Storm Glass Layer Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"GlazingMaterialName"}),new IdfField(false,"m",0,0.5,"0.050",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Distance Between Storm Glass Layer and Adjacent Glass",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",1,12,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Month that Storm Glass Layer is Put On",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",1,31,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Day of Month that Storm Glass Layer is Put On",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",1,12,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Month that Storm Glass Layer is Taken Off",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",1,31,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Day of Month that Storm Glass Layer is Taken Off",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,7 ) },
            {"InternalMass", () => new IdfObject("InternalMass",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AllHeatTranSurfNames","AllHeatTranAngFacNames","RadiantSurfaceNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Construction Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ConstructionNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone or ZoneList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneAndZoneListNames"}),new IdfField(true,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface Area",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,4 ) },
            {"Shading:Site", () => new IdfObject("Shading:Site",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AllShadingAndHTSurfNames","AllShadingSurfNames"},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Azimuth Angle",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,180,"90",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tilt Angle",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting X Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting Y Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting Z Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Length",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Height",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,8 ) },
            {"Shading:Building", () => new IdfObject("Shading:Building",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AllShadingAndHTSurfNames","AllShadingSurfNames"},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Azimuth Angle",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,180,"90",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tilt Angle",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting X Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting Y Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Starting Z Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Length",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Height",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,8 ) },
            {"Shading:Site:Detailed", () => new IdfObject("Shading:Site:Detailed",false,IdfObjectFormat.NotSpecified,false,12,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AllShadingAndHTSurfNames","AllShadingSurfNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Transmittance Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",3,0,"autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Vertices",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Vertex 1 X-coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Vertex 1 Y-coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Vertex 1 Z-coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,363 ) },
            {"Shading:Building:Detailed", () => new IdfObject("Shading:Building:Detailed",false,IdfObjectFormat.NotSpecified,false,12,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AllShadingAndHTSurfNames","AllShadingSurfNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Transmittance Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",3,0,"autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Vertices",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Vertex 1 X-coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Vertex 1 Y-coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Vertex 1 Z-coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,363 ) },
            {"Shading:Overhang", () => new IdfObject("Shading:Overhang",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AttachedShadingSurfNames","AllShadingAndHTSurfNames","AllShadingSurfNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Window or Door Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SubSurfNames"}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Height above Window or Door",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,180,"90",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tilt Angle from Window/Door",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Left extension from Window/Door Width",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Right extension from Window/Door Width",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Depth",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,7 ) },
            {"Shading:Overhang:Projection", () => new IdfObject("Shading:Overhang:Projection",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AttachedShadingSurfNames","AllShadingAndHTSurfNames","AllShadingSurfNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Window or Door Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SubSurfNames"}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Height above Window or Door",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,180,"90",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tilt Angle from Window/Door",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Left extension from Window/Door Width",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Right extension from Window/Door Width",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Depth as Fraction of Window/Door Height",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,7 ) },
            {"Shading:Fin", () => new IdfObject("Shading:Fin",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AttachedShadingSurfNames","AllShadingAndHTSurfNames","AllShadingSurfNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Window or Door Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SubSurfNames"}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Left Extension from Window/Door",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Left Distance Above Top of Window",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Left Distance Below Bottom of Window",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,180,"90",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Left Tilt Angle from Window/Door",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Left Depth",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Right Extension from Window/Door",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Right Distance Above Top of Window",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Right Distance Below Bottom of Window",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,180,"90",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Right Tilt Angle from Window/Door",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Right Depth",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,12 ) },
            {"Shading:Fin:Projection", () => new IdfObject("Shading:Fin:Projection",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AttachedShadingSurfNames","AllShadingAndHTSurfNames","AllShadingSurfNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Window or Door Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SubSurfNames"}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Left Extension from Window/Door",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Left Distance Above Top of Window",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Left Distance Below Bottom of Window",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,180,"90",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Left Tilt Angle from Window/Door",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Left Depth as Fraction of Window/Door Width",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Right Extension from Window/Door",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Right Distance Above Top of Window",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Right Distance Below Bottom of Window",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,180,"90",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Right Tilt Angle from Window/Door",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Right Depth as Fraction of Window/Door Width",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,12 ) },
            {"Shading:Zone:Detailed", () => new IdfObject("Shading:Zone:Detailed",false,IdfObjectFormat.NotSpecified,false,13,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AttachedShadingSurfNames","AllShadingAndHTSurfNames","AllShadingSurfNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Base Surface Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SurfaceNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Transmittance Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",3,0,"autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Vertices",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Vertex 1 X-coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Vertex 1 Y-coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Vertex 1 Z-coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,364 ) },
            {"ShadingProperty:Reflectance", () => new IdfObject("ShadingProperty:Reflectance",false,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Shading Surface Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllShadingSurfNames"}),new IdfField(false,"",0,1,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Diffuse Solar Reflectance of Unglazed Part of Shading Surface",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Diffuse Visible Reflectance of Unglazed Part of Shading Surface",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Shading Surface That Is Glazed",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Glazing Construction Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"SurfaceProperty:HeatTransferAlgorithm", () => new IdfObject("SurfaceProperty:HeatTransferAlgorithm",false,IdfObjectFormat.NotSpecified,false,2,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SurfaceNames"}),new IdfField(false,"",0,0,"ConductionTransferFunction",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ConductionTransferFunction","MoisturePenetrationDepthConductionTransferFunction","ConductionFiniteDifference","CombinedHeatAndMoistureFiniteElement"},"Algorithm",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,2 ) },
            {"SurfaceProperty:HeatTransferAlgorithm:MultipleSurface", () => new IdfObject("SurfaceProperty:HeatTransferAlgorithm:MultipleSurface",false,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"AllExteriorSurfaces","AllExteriorWalls","AllExteriorRoofs","AllExteriorFloors","AllGroundContactSurfaces","AllInteriorSurfaces","AllInteriorWalls","AllInteriorCeilings","AllInteriorFloors"},"Surface Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ConductionTransferFunction",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ConductionTransferFunction","MoisturePenetrationDepthConductionTransferFunction","ConductionFiniteDifference","CombinedHeatAndMoistureFiniteElement"},"Algorithm",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,3 ) },
            {"SurfaceProperty:HeatTransferAlgorithm:SurfaceList", () => new IdfObject("SurfaceProperty:HeatTransferAlgorithm:SurfaceList",false,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ConductionTransferFunction",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ConductionTransferFunction","MoisturePenetrationDepthConductionTransferFunction","ConductionFiniteDifference","CombinedHeatAndMoistureFiniteElement"},"Algorithm",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface Name 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SurfaceNames"})},true,8 ) },
            {"SurfaceProperty:HeatTransferAlgorithm:Construction", () => new IdfObject("SurfaceProperty:HeatTransferAlgorithm:Construction",false,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ConductionTransferFunction",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ConductionTransferFunction","MoisturePenetrationDepthConductionTransferFunction","ConductionFiniteDifference","CombinedHeatAndMoistureFiniteElement"},"Algorithm",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Construction Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ConstructionNames"})},false,3 ) },
            {"SurfaceProperty:HeatBalanceSourceTerm", () => new IdfObject("SurfaceProperty:HeatBalanceSourceTerm",false,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SurfaceNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inside Face Heat Source Term Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outside Face Heat Source Term Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,3 ) },
            {"SurfaceControl:MovableInsulation", () => new IdfObject("SurfaceControl:MovableInsulation",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Outside","Inside"},"Insulation Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SurfaceNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Material Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,4 ) },
            {"SurfaceProperty:OtherSideCoefficients", () => new IdfObject("SurfaceProperty:OtherSideCoefficients",false,IdfObjectFormat.NotSpecified,false,8,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"OutFaceEnvNames"},new List<string>{},new List<string>{}),new IdfField(true,"W/m2-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Combined Convective/Radiative Film Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Constant Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Constant Temperature Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"External Dry-Bulb Temperature Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ground Temperature Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Speed Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Air Temperature Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Constant Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Sinusoidal Variation of Constant Temperature Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"hr",0,0,"24",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Period of Sinusoidal Variation",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Previous Other Side Temperature Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Other Side Temperature Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Other Side Temperature Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,14 ) },
            {"SurfaceProperty:OtherSideConditionsModel", () => new IdfObject("SurfaceProperty:OtherSideConditionsModel",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"OSCMNames","OutFaceEnvNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"GapConvectionRadiation",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"GapConvectionRadiation","UndergroundPipingSystemSurface","GroundCoupledSurface","ConvectiveUnderwater"},"Type of Modeling",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,2 ) },
            {"SurfaceProperty:Underwater", () => new IdfObject("SurfaceProperty:Underwater",false,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SurfacePropUnderWaterNames"},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Distance from Surface Centroid to Leading Edge of Boundary Layer",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Free Stream Water Temperature Schedule",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"m/s",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Free Stream Water Velocity Schedule",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,4 ) },
            {"Foundation:Kiva", () => new IdfObject("Foundation:Kiva",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"OutFaceEnvNames"},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Initial Indoor Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Interior Horizontal Insulation Material Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(false,"m",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Interior Horizontal Insulation Depth",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Interior Horizontal Insulation Width",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Interior Vertical Insulation Material Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Interior Vertical Insulation Depth",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Exterior Horizontal Insulation Material Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Exterior Horizontal Insulation Depth",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Exterior Horizontal Insulation Width",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Exterior Vertical Insulation Material Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Exterior Vertical Insulation Depth",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wall Height Above Grade",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wall Depth Below Slab",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Footing Wall Construction Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ConstructionNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Footing Material Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(false,"m",0,0,"0.3",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Footing Depth",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Custom Block 1 Material Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Custom Block 1 Depth",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Custom Block 1 X Position",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Custom Block 1 Z Position",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,57 ) },
            {"Foundation:Kiva:Settings", () => new IdfObject("Foundation:Kiva:Settings",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"W/m-K",0,0,"1.73",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Conductivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,"1842",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Density",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg-K",0,0,"419",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Specific Heat",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ground Solar Absorptivity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ground Thermal Absorptivity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.03",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ground Surface Roughness",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"40",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Far-Field Width",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Autoselect",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ZeroFlux","GroundWater","Autoselect"},"Deep-Ground Boundary Condition",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Deep-Ground Depth",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.02",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Cell Dimension",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",1,0,"1.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Cell Growth Coefficient",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Hourly",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Hourly","Timestep"},"Simulation Timestep",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,12 ) },
            {"SurfaceProperty:ExposedFoundationPerimeter", () => new IdfObject("SurfaceProperty:ExposedFoundationPerimeter",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FloorSurfaceNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"TotalExposedPerimeter","ExposedPerimeterFraction","BySegment"},"Exposed Perimeter Calculation Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Total Exposed Perimeter",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Exposed Perimeter Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Surface Segment 1 Exposed",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,14 ) },
            {"SurfaceConvectionAlgorithm:Inside:AdaptiveModelSelections", () => new IdfObject("SurfaceConvectionAlgorithm:Inside:AdaptiveModelSelections",true,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"FohannoPolidoriVerticalWall",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ASHRAEVerticalWall","AlamdariHammondVerticalWall","KhalifaEq3WallAwayFromHeat","KhalifaEq6NonHeatedWalls","FohannoPolidoriVerticalWall","ISO15099Windows","UserCurve"},"Simple Buoyancy Vertical Wall Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Simple Buoyancy Vertical Wall User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"AlamdariHammondStableHorizontal",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"WaltonStableHorizontalOrTilt","AlamdariHammondStableHorizontal","UserCurve"},"Simple Buoyancy Stable Horizontal Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Simple Buoyancy Stable Horizontal Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"AlamdariHammondUnstableHorizontal",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"WaltonUnstableHorizontalOrTilt","AlamdariHammondUnstableHorizontal","UserCurve"},"Simple Buoyancy Unstable Horizontal Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Simple Buoyancy Unstable Horizontal Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"WaltonStableHorizontalOrTilt",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"WaltonStableHorizontalOrTilt","AlamdariHammondStableHorizontal","UserCurve"},"Simple Buoyancy Stable Tilted Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Simple Buoyancy Stable Tilted Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"WaltonUnstableHorizontalOrTilt",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"WaltonUnstableHorizontalOrTilt","AlamdariHammondUnstableHorizontal","UserCurve"},"Simple Buoyancy Unstable Tilted Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Simple Buoyancy Unstable Tilted Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"ISO15099Windows",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ASHRAEVerticalWall","AlamdariHammondVerticalWall","FohannoPolidoriVerticalWall","KaradagChilledCeiling","ISO15099Windows","UserCurve"},"Simple Buoyancy Windows Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Simple Buoyancy Windows Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"KhalifaEq3WallAwayFromHeat",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ASHRAEVerticalWall","AlamdariHammondVerticalWall","KhalifaEq3WallAwayFromHeat","FohannoPolidoriVerticalWall","ISO15099Windows","UserCurve"},"Floor Heat Ceiling Cool Vertical Wall Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Floor Heat Ceiling Cool Vertical Wall Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"AlamdariHammondStableHorizontal",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"WaltonStableHorizontalOrTilt","AlamdariHammondStableHorizontal","UserCurve"},"Floor Heat Ceiling Cool Stable Horizontal Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Floor Heat Ceiling Cool Stable Horizontal Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"KhalifaEq4CeilingAwayFromHeat",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"WaltonUnstableHorizontalOrTilt","AlamdariHammondUnstableHorizontal","KhalifaEq4CeilingAwayFromHeat","UserCurve"},"Floor Heat Ceiling Cool Unstable Horizontal Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Floor Heat Ceiling Cool Unstable Horizontal Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"AwbiHattonHeatedFloor",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"WaltonUnstableHorizontalOrTilt","AlamdariHammondUnstableHorizontal","AwbiHattonHeatedFloor","UserCurve"},"Floor Heat Ceiling Cool Heated Floor Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Floor Heat Ceiling Cool Heated Floor Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"KaradagChilledCeiling",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"WaltonUnstableHorizontalOrTilt","AlamdariHammondUnstableHorizontal","KaradagChilledCeiling","UserCurve"},"Floor Heat Ceiling Cool Chilled Ceiling Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Floor Heat Ceiling Cool Chilled Ceiling Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"WaltonStableHorizontalOrTilt",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"WaltonStableHorizontalOrTilt","AlamdariHammondStableHorizontal","ISO15099Windows","UserCurve"},"Floor Heat Ceiling Cool Stable Tilted Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Floor Heat Ceiling Cool Stable Tilted Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"WaltonUnstableHorizontalOrTilt",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"WaltonUnstableHorizontalOrTilt","AlamdariHammondUnstableHorizontal","ISO15099Windows","UserCurve"},"Floor Heat Ceiling Cool Unstable Tilted Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Floor Heat Ceiling Cool Unstable Tilted Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"ISO15099Windows",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ASHRAEVerticalWall","AlamdariHammondVerticalWall","ISO15099Windows","UserCurve"},"Floor Heat Ceiling Cool Window Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Floor Heat Ceiling Cool Window Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"KhalifaEq6NonHeatedWalls",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ASHRAEVerticalWall","AlamdariHammondVerticalWall","KhalifaEq6NonHeatedWalls","FohannoPolidoriVerticalWall","ISO15099Windows","UserCurve"},"Wall Panel Heating Vertical Wall Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wall Panel Heating Vertical Wall Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"AwbiHattonHeatedWall",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ASHRAEVerticalWall","AlamdariHammondVerticalWall","KhalifaEq5WallNearHeat","AwbiHattonHeatedWall","FohannoPolidoriVerticalWall","ISO15099Windows","UserCurve"},"Wall Panel Heating Heated Wall Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wall Panel Heating Heated Wall Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"AlamdariHammondStableHorizontal",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"WaltonStableHorizontalOrTilt","AlamdariHammondStableHorizontal","UserCurve"},"Wall Panel Heating Stable Horizontal Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wall Panel Heating Stable Horizontal Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"KhalifaEq7Ceiling",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ASHRAEVerticalWall","WaltonUnstableHorizontalOrTilt","AlamdariHammondUnstableHorizontal","KhalifaEq7Ceiling","KaradagChilledCeiling","UserCurve"},"Wall Panel Heating Unstable Horizontal Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wall Panel Heating Unstable Horizontal Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"WaltonStableHorizontalOrTilt",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"WaltonStableHorizontalOrTilt","AlamdariHammondStableHorizontal","ISO15099Windows","UserCurve"},"Wall Panel Heating Stable Tilted Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wall Panel Heating Stable Tilted Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"WaltonUnstableHorizontalOrTilt",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"WaltonUnstableHorizontalOrTilt","AlamdariHammondUnstableHorizontal","ISO15099Windows","UserCurve"},"Wall Panel Heating Unstable Tilted Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wall Panel Heating Unstable Tilted Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"ISO15099Windows",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ASHRAEVerticalWall","AlamdariHammondVerticalWall","FohannoPolidoriVerticalWall","ISO15099Windows","UserCurve"},"Wall Panel Heating Window Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wall Panel Heating Window Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"FohannoPolidoriVerticalWall",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ASHRAEVerticalWall","AlamdariHammondVerticalWall","KhalifaEq3WallAwayFromHeat","KhalifaEq6NonHeatedWalls","FohannoPolidoriVerticalWall","ISO15099Windows","UserCurve"},"Convective Zone Heater Vertical Wall Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Convective Zone Heater Vertical Wall Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"KhalifaEq5WallNearHeat",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ASHRAEVerticalWall","AlamdariHammondVerticalWall","KhalifaEq5WallNearHeat","AwbiHattonHeatedWall","FohannoPolidoriVerticalWall","ISO15099Windows","UserCurve"},"Convective Zone Heater Vertical Walls Near Heater Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Convective Zone Heater Vertical Walls Near Heater Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"AlamdariHammondStableHorizontal",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"WaltonStableHorizontalOrTilt","AlamdariHammondStableHorizontal","UserCurve"},"Convective Zone Heater Stable Horizontal Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Convective Zone Heater Stable Horizontal Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"KhalifaEq7Ceiling",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"WaltonUnstableHorizontalOrTilt","AlamdariHammondUnstableHorizontal","KhalifaEq4CeilingAwayFromHeat","KhalifaEq7Ceiling","UserCurve"},"Convective Zone Heater Unstable Horizontal Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Convective Zone Heater Unstable Horizontal Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"WaltonStableHorizontalOrTilt",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"WaltonStableHorizontalOrTilt","AlamdariHammondStableHorizontal","UserCurve"},"Convective Zone Heater Stable Tilted Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Convective Zone Heater Stable Tilted Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"WaltonUnstableHorizontalOrTilt",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"WaltonUnstableHorizontalOrTilt","AlamdariHammondUnstableHorizontal","UserCurve"},"Convective Zone Heater Unstable Tilted Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Convective Zone Heater Unstable Tilted Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"ISO15099Windows",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ASHRAEVerticalWall","AlamdariHammondVerticalWall","KhalifaEq3WallAwayFromHeat","FohannoPolidoriVerticalWall","ISO15099Windows","UserCurve"},"Convective Zone Heater Windows Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Convective Zone Heater Windows Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"GoldsteinNovoselacCeilingDiffuserWalls",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ASHRAEVerticalWall","FisherPedersenCeilingDiffuserWalls","AlamdariHammondVerticalWall","BeausoleilMorrisonMixedAssistedWall","BeausoleilMorrisonMixedOpposingWall","FohannoPolidoriVerticalWall","ISO15099Windows","GoldsteinNovoselacCeilingDiffuserWalls","UserCurve"},"Central Air Diffuser Wall Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Central Air Diffuser Wall Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"FisherPedersenCeilingDiffuserCeiling",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"FisherPedersenCeilingDiffuserCeiling","BeausoleilMorrisonMixedStableCeiling","BeausoleilMorrisonMixedUnstableCeiling","UserCurve"},"Central Air Diffuser Ceiling Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Central Air Diffuser Ceiling Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"GoldsteinNovoselacCeilingDiffuserFloor",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"FisherPedersenCeilingDiffuserFloor","BeausoleilMorrisonMixedStableFloor","BeausoleilMorrisonMixedUnstableFloor","GoldsteinNovoselacCeilingDiffuserFloor","UserCurve"},"Central Air Diffuser Floor Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Central Air Diffuser Floor Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"GoldsteinNovoselacCeilingDiffuserWindow",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ASHRAEVerticalWall","FisherPedersenCeilingDiffuserWalls","BeausoleilMorrisonMixedAssistedWall","BeausoleilMorrisonMixedOpposingWall","FohannoPolidoriVerticalWall","AlamdariHammondVerticalWall","ISO15099Windows","GoldsteinNovoselacCeilingDiffuserWindow","UserCurve"},"Central Air Diffuser Window Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Central Air Diffuser Window Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"KhalifaEq3WallAwayFromHeat",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"KhalifaEq3WallAwayFromHeat","ASHRAEVerticalWall","FisherPedersenCeilingDiffuserWalls","AlamdariHammondVerticalWall","BeausoleilMorrisonMixedAssistedWall","BeausoleilMorrisonMixedOpposingWall","FohannoPolidoriVerticalWall","ISO15099Windows","GoldsteinNovoselacCeilingDiffuserWalls","UserCurve"},"Mechanical Zone Fan Circulation Vertical Wall Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mechanical Zone Fan Circulation Vertical Wall Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"AlamdariHammondStableHorizontal",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"WaltonStableHorizontalOrTilt","AlamdariHammondStableHorizontal","UserCurve"},"Mechanical Zone Fan Circulation Stable Horizontal Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mechanical Zone Fan Circulation Stable Horizontal Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"KhalifaEq4CeilingAwayFromHeat",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"KhalifaEq4CeilingAwayFromHeat","WaltonUnstableHorizontalOrTilt","AlamdariHammondUnstableHorizontal","UserCurve"},"Mechanical Zone Fan Circulation Unstable Horizontal Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mechanical Zone Fan Circulation Unstable Horizontal Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"WaltonStableHorizontalOrTilt",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"WaltonStableHorizontalOrTilt","UserCurve"},"Mechanical Zone Fan Circulation Stable Tilted Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mechanical Zone Fan Circulation Stable Tilted Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"WaltonUnstableHorizontalOrTilt",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"WaltonUnstableHorizontalOrTilt","AlamdariHammondUnstableHorizontal","UserCurve"},"Mechanical Zone Fan Circulation Unstable Tilted Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mechanical Zone Fan Circulation Unstable Tilted Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"ISO15099Windows",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ASHRAEVerticalWall","AlamdariHammondVerticalWall","FohannoPolidoriVerticalWall","ISO15099Windows","GoldsteinNovoselacCeilingDiffuserWindow","UserCurve"},"Mechanical Zone Fan Circulation Window Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mechanical Zone Fan Circulation Window Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"BeausoleilMorrisonMixedAssistedWall",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"BeausoleilMorrisonMixedAssistedWall","AlamdariHammondVerticalWall","FohannoPolidoriVerticalWall","ASHRAEVerticalWall","FisherPedersenCeilingDiffuserWalls","GoldsteinNovoselacCeilingDiffuserWalls","UserCurve"},"Mixed Regime Buoyancy Assisting Flow on Walls Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mixed Regime Buoyancy Assisting Flow on Walls Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"BeausoleilMorrisonMixedOpposingWall",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"BeausoleilMorrisonMixedOpposingWall","AlamdariHammondVerticalWall","FohannoPolidoriVerticalWall","ASHRAEVerticalWall","FisherPedersenCeilingDiffuserWalls","GoldsteinNovoselacCeilingDiffuserWalls","UserCurve"},"Mixed Regime Buoyancy Opposing Flow on Walls Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mixed Regime Buoyancy Opposing Flow on Walls Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"BeausoleilMorrisonMixedStableFloor",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"BeausoleilMorrisonMixedStableFloor","WaltonStableHorizontalOrTilt","AlamdariHammondStableHorizontal","UserCurve"},"Mixed Regime Stable Floor Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mixed Regime Stable Floor Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"BeausoleilMorrisonMixedUnstableFloor",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"BeausoleilMorrisonMixedUnstableFloor","WaltonUnstableHorizontalOrTilt","AlamdariHammondUnstableHorizontal","UserCurve"},"Mixed Regime Unstable Floor Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mixed Regime Unstable Floor Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"BeausoleilMorrisonMixedStableCeiling",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"BeausoleilMorrisonMixedStableCeiling","WaltonStableHorizontalOrTilt","AlamdariHammondStableHorizontal","UserCurve"},"Mixed Regime Stable Ceiling Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mixed Regime Stable Ceiling Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"BeausoleilMorrisonMixedUnstableCeiling",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"BeausoleilMorrisonMixedUnstableCeiling","WaltonUnstableHorizontalOrTilt","AlamdariHammondUnstableHorizontal","UserCurve"},"Mixed Regime Unstable Ceiling Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mixed Regime Unstable Ceiling Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"}),new IdfField(false,"",0,0,"GoldsteinNovoselacCeilingDiffuserWindow",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"GoldsteinNovoselacCeilingDiffuserWindow","ISO15099Windows","UserCurve"},"Mixed Regime Window Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mixed Regime Window Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionInsideModels"})},false,91 ) },
            {"SurfaceConvectionAlgorithm:Outside:AdaptiveModelSelections", () => new IdfObject("SurfaceConvectionAlgorithm:Outside:AdaptiveModelSelections",true,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"TARPWindward",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SimpleCombined","TARPWindward","MoWiTTWindward","DOE2Windward","NusseltJurges","McAdams","Mitchell","BlockenWindward","EmmelVertical","UserCurve"},"Wind Convection Windward Vertical Wall Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Convection Windward Equation Vertical Wall User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionOutsideModels"}),new IdfField(false,"",0,0,"TARPLeeward",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SimpleCombined","TARPLeeward","MoWiTTLeeward","DOE2Leeward","EmmelVertical","NusseltJurges","McAdams","Mitchell","UserCurve"},"Wind Convection Leeward Vertical Wall Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Convection Leeward Vertical Wall Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionOutsideModels"}),new IdfField(false,"",0,0,"ClearRoof",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SimpleCombined","TARPWindward","MoWiTTWindward","DOE2Windward","NusseltJurges","McAdams","Mitchell","BlockenWindward","EmmelRoof","ClearRoof","UserCurve"},"Wind Convection Horizontal Roof Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Convection Horizontal Roof User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionOutsideModels"}),new IdfField(false,"",0,0,"ASHRAEVerticalWall",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ASHRAEVerticalWall","AlamdariHammondVerticalWall","FohannoPolidoriVerticalWall","ISO15099Windows","UserCurve","None"},"Natural Convection Vertical Wall Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Natural Convection Vertical Wall Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionOutsideModels"}),new IdfField(false,"",0,0,"WaltonStableHorizontalOrTilt",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"WaltonStableHorizontalOrTilt","AlamdariHammondStableHorizontal","UserCurve","None"},"Natural Convection Stable Horizontal Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Natural Convection Stable Horizontal Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionOutsideModels"}),new IdfField(false,"",0,0,"WaltonUnstableHorizontalOrTilt",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"WaltonUnstableHorizontalOrTilt","AlamdariHammondUnstableHorizontal","UserCurve","None"},"Natural Convection Unstable Horizontal Equation Source",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Natural Convection Unstable Horizontal Equation User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionOutsideModels"})},false,13 ) },
            {"SurfaceConvectionAlgorithm:Inside:UserCurve", () => new IdfObject("SurfaceConvectionAlgorithm:Inside:UserCurve",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"UserConvectionInsideModels","UserConvectionModels"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"MeanAirTemperature","AdjacentAirTemperature","SupplyAirTemperature"},"Reference Temperature for Convection Heat Transfer",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hc Function of Temperature Difference Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hc Function of Temperature Difference Divided by Height Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hc Function of Air Change Rate Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hc Function of Air System Volume Flow Rate Divided by Zone Perimeter Length Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"})},false,6 ) },
            {"SurfaceConvectionAlgorithm:Outside:UserCurve", () => new IdfObject("SurfaceConvectionAlgorithm:Outside:UserCurve",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"UserConvectionOutsideModels","UserConvectionModels"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"HeightAdjust",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"WeatherFile","HeightAdjust","ParallelComponent","ParallelComponentHeightAdjust"},"Wind Speed Type for Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hf Function of Wind Speed Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hn Function of Temperature Difference Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hn Function of Temperature Difference Divided by Height Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"})},false,5 ) },
            {"SurfaceProperty:ConvectionCoefficients", () => new IdfObject("SurfaceProperty:ConvectionCoefficients",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Outside","Inside"},"Convection Coefficient 1 Location",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Value","Schedule","UserCurve","Simple","SimpleCombined","TARP","DOE-2","MoWitt","AdaptiveConvectionAlgorithm","ASHRAEVerticalWall","WaltonUnstableHorizontalOrTilt","WaltonStableHorizontalOrTilt","FisherPedersenCeilingDiffuserWalls","FisherPedersenCeilingDiffuserCeiling","FisherPedersenCeilingDiffuserFloor","AlamdariHammondStableHorizontal","AlamdariHammondUnstableHorizontal","AlamdariHammondVerticalWall","KhalifaEq3WallAwayFromHeat","KhalifaEq4CeilingAwayFromHeat","KhalifaEq5WallNearHeat","KhalifaEq6NonHeatedWalls","KhalifaEq7Ceiling","AwbiHattonHeatedFloor","AwbiHattonHeatedWall","BeausoleilMorrisonMixedAssistedWall","BeausoleilMorrisonMixedOpposingWall","BeausoleilMorrisonMixedStableFloor","BeausoleilMorrisonMixedUnstableFloor","BeausoleilMorrisonMixedStableCeiling","BeausoleilMorrisonMixedUnstableCeiling","FohannoPolidoriVerticalWall","KaradagChilledCeiling","ISO15099Windows","GoldsteinNovoselacCeilingDiffuserWindow","GoldsteinNovoselacCeilingDiffuserWalls","GoldsteinNovoselacCeilingDiffuserFloor","NusseltJurges","McAdams","Mitchell","EmmelVertical","EmmelRoof","ClearRoof"},"Convection Coefficient 1 Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Convection Coefficient 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Convection Coefficient 1 Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Convection Coefficient 1 User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionModels"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Outside","Inside"},"Convection Coefficient 2 Location",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Value","Schedule","UserCurve","Simple","SimpleCombined","TARP","DOE-2","MoWitt","AdaptiveConvectionAlgorithm","ASHRAEVerticalWall","WaltonUnstableHorizontalOrTilt","WaltonStableHorizontalOrTilt","FisherPedersenCeilingDiffuserWalls","FisherPedersenCeilingDiffuserCeiling","FisherPedersenCeilingDiffuserFloor","AlamdariHammondStableHorizontal","AlamdariHammondUnstableHorizontal","AlamdariHammondVerticalWall","KhalifaEq3WallAwayFromHeat","KhalifaEq4CeilingAwayFromHeat","KhalifaEq5WallNearHeat","KhalifaEq6NonHeatedWalls","KhalifaEq7Ceiling","AwbiHattonHeatedFloor","AwbiHattonHeatedWall","BeausoleilMorrisonMixedAssistedWall","BeausoleilMorrisonMixedOpposingWall","BeausoleilMorrisonMixedStableFloor","BeausoleilMorrisonMixedUnstableFloor","BeausoleilMorrisonMixedStableCeiling","BeausoleilMorrisonMixedUnstableCeiling","FohannoPolidoriVerticalWall","KaradagChilledCeiling","ISO15099Windows","GoldsteinNovoselacCeilingDiffuserWindow","GoldsteinNovoselacCeilingDiffuserWalls","GoldsteinNovoselacCeilingDiffuserFloor","NusseltJurges","McAdams","Mitchell","EmmelVertical","EmmelRoof","ClearRoof"},"Convection Coefficient 2 Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2-K",0,0,".1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Convection Coefficient 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Convection Coefficient 2 Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Convection Coefficient 2 User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionModels"})},false,11 ) },
            {"SurfaceProperty:ConvectionCoefficients:MultipleSurface", () => new IdfObject("SurfaceProperty:ConvectionCoefficients:MultipleSurface",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"AllExteriorSurfaces","AllExteriorWindows","AllExteriorWalls","AllExteriorRoofs","AllExteriorFloors","AllInteriorSurfaces","AllInteriorWalls","AllInteriorWindows","AllInteriorCeilings","AllInteriorFloors"},"Surface Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Outside","Inside"},"Convection Coefficient 1 Location",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Value","Schedule","Simple","SimpleCombined","TARP","DOE-2","MoWitt","AdaptiveConvectionAlgorithm","ASHRAEVerticalWall","WaltonUnstableHorizontalOrTilt","WaltonStableHorizontalOrTilt","FisherPedersenCeilingDiffuserWalls","FisherPedersenCeilingDiffuserCeiling","FisherPedersenCeilingDiffuserFloor","AlamdariHammondStableHorizontal","AlamdariHammondUnstableHorizontal","AlamdariHammondVerticalWall","KhalifaEq3WallAwayFromHeat","KhalifaEq4CeilingAwayFromHeat","KhalifaEq5WallNearHeat","KhalifaEq6NonHeatedWalls","KhalifaEq7Ceiling","AwbiHattonHeatedFloor","AwbiHattonHeatedWall","BeausoleilMorrisonMixedAssistedWall","BeausoleilMorrisonMixedOpposingWall","BeausoleilMorrisonMixedStableFloor","BeausoleilMorrisonMixedUnstableFloor","BeausoleilMorrisonMixedStableCeiling","BeausoleilMorrisonMixedUnstableCeiling","FohannoPolidoriVerticalWall","KaradagChilledCeiling","ISO15099Windows","GoldsteinNovoselacCeilingDiffuserWindow","GoldsteinNovoselacCeilingDiffuserWalls","GoldsteinNovoselacCeilingDiffuserFloor","NusseltJurges","McAdams","Mitchell","BlockenWindard","EmmelVertical","EmmelRoof","ClearRoof","UserCurve"},"Convection Coefficient 1 Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Convection Coefficient 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Convection Coefficient 1 Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Convection Coefficient 1 User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionModels"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Outside","Inside"},"Convection Coefficient 2 Location",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Value","Schedule","Simple","SimpleCombined","TARP","DOE-2","MoWitt","AdaptiveConvectionAlgorithm","ASHRAEVerticalWall","WaltonUnstableHorizontalOrTilt","WaltonStableHorizontalOrTilt","FisherPedersenCeilingDiffuserWalls","FisherPedersenCeilingDiffuserCeiling","FisherPedersenCeilingDiffuserFloor","AlamdariHammondStableHorizontal","AlamdariHammondUnstableHorizontal","AlamdariHammondVerticalWall","KhalifaEq3WallAwayFromHeat","KhalifaEq4CeilingAwayFromHeat","KhalifaEq5WallNearHeat","KhalifaEq6NonHeatedWalls","KhalifaEq7Ceiling","AwbiHattonHeatedFloor","AwbiHattonHeatedWall","BeausoleilMorrisonMixedAssistedWall","BeausoleilMorrisonMixedOpposingWall","BeausoleilMorrisonMixedStableFloor","BeausoleilMorrisonMixedUnstableFloor","BeausoleilMorrisonMixedStableCeiling","BeausoleilMorrisonMixedUnstableCeiling","FohannoPolidoriVerticalWall","KaradagChilledCeiling","ISO15099Windows","GoldsteinNovoselacCeilingDiffuserWindow","GoldsteinNovoselacCeilingDiffuserWalls","GoldsteinNovoselacCeilingDiffuserFloor","NusseltJurges","McAdams","Mitchell","BlockenWindard","EmmelVertical","EmmelRoof","ClearRoof","UserCurve"},"Convection Coefficient 2 Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2-K",0,0,".1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Convection Coefficient 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Convection Coefficient 2 Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Convection Coefficient 2 User Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UserConvectionModels"})},false,11 ) },
            {"SurfaceProperties:VaporCoefficients", () => new IdfObject("SurfaceProperties:VaporCoefficients",false,IdfObjectFormat.NotSpecified,false,4,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SurfaceNames"}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Constant External Vapor Transfer Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/Pa-s-m2",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"External Vapor Coefficient Value",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Constant Internal vapor Transfer Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/Pa-s-m2",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Internal Vapor Coefficient Value",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"SurfaceProperty:ExteriorNaturalVentedCavity", () => new IdfObject("SurfaceProperty:ExteriorNaturalVentedCavity",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Boundary Conditions Model Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"OSCMNames"}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Area Fraction of Openings",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Emissivity of Exterior Baffle Material",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Solar Absorbtivity of Exterior Baffle",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Height Scale for Buoyancy-Driven Ventilation",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Effective Thickness of Cavity Behind Exterior Baffle",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0.8,2,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ratio of Actual Surface Area to Projected Surface Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"VeryRough","Rough","MediumRough","MediumSmooth","Smooth","VerySmooth"},"Roughness of Exterior Surface",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1.5,"0.25",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Effectiveness for Perforations with Respect to Wind",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1.5,"0.65",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Discharge Coefficient for Openings with Respect to Buoyancy Driven Flow",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllShadingAndHTSurfNames"})},true,21 ) },
            {"SurfaceProperty:SolarIncidentInside", () => new IdfObject("SurfaceProperty:SolarIncidentInside",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SurfaceNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Construction Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ConstructionNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inside Surface Incident Sun Solar Radiation Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,4 ) },
            {"SurfaceProperty:LocalEnvironment", () => new IdfObject("SurfaceProperty:LocalEnvironment",false,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SurfaceLocalEnvironmentNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Exterior Surface Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SurfaceNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"External Shading Fraction Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surrounding Surfaces Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SurroundingSurfacesNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"OutdoorAirNodeNames"})},false,5 ) },
            {"ZoneProperty:LocalEnvironment", () => new IdfObject("ZoneProperty:LocalEnvironment",false,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ZoneLocalEnvironmentNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"OutdoorAirNodeNames"})},false,3 ) },
            {"SurfaceProperty:SurroundingSurfaces", () => new IdfObject("SurfaceProperty:SurroundingSurfaces",false,IdfObjectFormat.NotSpecified,false,8,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SurroundingSurfacesNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sky View Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sky Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,1,"0.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ground View Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ground Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surrounding Surface 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surrounding Surface 1 View Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surrounding Surface 1 Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},true,35 ) },
            {"ComplexFenestrationProperty:SolarAbsorbedLayers", () => new IdfObject("ComplexFenestrationProperty:SolarAbsorbedLayers",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fenestration Surface",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SubSurfNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Construction Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ComplexFenestrationStates"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 1 Solar Radiation Absorbed Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 2 Solar Radiation Absorbed Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 3 Solar Radiation Absorbed Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 4 Solar Radiation Absorbed Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Layer 5 Solar Radiation Absorbed Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,8 ) },
            {"ZoneProperty:UserViewFactors:bySurfaceName", () => new IdfObject("ZoneProperty:UserViewFactors:bySurfaceName",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone or ZoneList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames","ZoneListNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"From Surface 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"To Surface 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"View Factor 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},true,1471 ) },
            {"GroundHeatTransfer:Control", () => new IdfObject("GroundHeatTransfer:Control",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Run Basement Preprocessor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Run Slab Preprocessor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,3 ) },
            {"GroundHeatTransfer:Slab:Materials", () => new IdfObject("GroundHeatTransfer:Slab:Materials",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"NMAT: Number of materials",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.16",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"ALBEDO: Surface Albedo: No Snow",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.40",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"ALBEDO: Surface Albedo: Snow",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.94",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"EPSLW: Surface Emissivity: No Snow",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.86",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"EPSLW: Surface Emissivity: Snow",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"cm",0,0,".75",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Z0: Surface Roughness: No Snow",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"cm",0,0,"0.25",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Z0: Surface Roughness: Snow",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2-K",0,0,"6.13",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"HIN: Indoor HConv: Downward Flow",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2-K",0,0,"9.26",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"HIN: Indoor HConv: Upward",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,9 ) },
            {"GroundHeatTransfer:Slab:MatlProps", () => new IdfObject("GroundHeatTransfer:Slab:MatlProps",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"kg/m3",0,0,"2300",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"RHO: Slab Material density",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,"1200",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"RHO: Soil Density",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg-K",0,0,"650",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"CP: Slab CP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg-K",0,0,"1200",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"CP: Soil CP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"TCON: Slab k",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"TCON: Soil k",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,6 ) },
            {"GroundHeatTransfer:Slab:BoundConds", () => new IdfObject("GroundHeatTransfer:Slab:BoundConds",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"TRUE","FALSE"},"EVTR: Is surface evapotranspiration modeled",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"TRUE","FALSE"},"FIXBC: is the lower boundary at a fixed temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"TDEEPin",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"TRUE","FALSE"},"USRHflag: Is the ground surface h specified by the user?",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"USERH: User specified ground surface heat transfer coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"GroundHeatTransfer:Slab:BldgProps", () => new IdfObject("GroundHeatTransfer:Slab:BldgProps",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",1,0,"10",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"IYRS: Number of years to iterate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Shape: Slab shape",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"HBLDG: Building height",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"22",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"TIN1: January Indoor Average Temperature Setpoint",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"22",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"TIN2: February Indoor Average Temperature Setpoint",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"22",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"TIN3: March Indoor Average Temperature Setpoint",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"22",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"TIN4: April Indoor Average Temperature Setpoint",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"22",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"TIN5: May Indoor Average Temperature Setpoint",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"22",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"TIN6: June Indoor Average Temperature Setpoint",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"22",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"TIN7: July Indoor Average Temperature Setpoint",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"22",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"TIN8: August Indoor Average Temperature Setpoint",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"22",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"TIN9: September Indoor Average Temperature Setpoint",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"22",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"TIN10: October Indoor Average Temperature Setpoint",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"22",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"TIN11: November Indoor Average Temperature Setpoint",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"22",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"TIN12: December Indoor Average Temperature Setpoint",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"TINAmp: Daily Indoor sine wave variation amplitude",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"ConvTol: Convergence Tolerance",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,17 ) },
            {"GroundHeatTransfer:Slab:Insulation", () => new IdfObject("GroundHeatTransfer:Slab:Insulation",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(false,"m2-K/W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"RINS: R value of under slab insulation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"DINS: Width of strip of under slab insulation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2-K/W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"RVINS: R value of vertical insulation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"ZVINS: Depth of vertical insulation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"0","1"},"IVINS: Flag: Is there vertical insulation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"GroundHeatTransfer:Slab:EquivalentSlab", () => new IdfObject("GroundHeatTransfer:Slab:EquivalentSlab",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"m",1.5,22,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"APRatio: The area to perimeter ratio for this slab",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"SLABDEPTH: Thickness of slab on grade",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"15.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"CLEARANCE: Distance from edge of slab to domain edge",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"15.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"ZCLEARANCE: Distance from bottom of slab to domain bottom",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,4 ) },
            {"GroundHeatTransfer:Slab:AutoGrid", () => new IdfObject("GroundHeatTransfer:Slab:AutoGrid",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"m",6,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"SLABX: X dimension of the building slab",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",6,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"SLABY: Y dimension of the building slab",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"SLABDEPTH: Thickness of slab on grade",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"15.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"CLEARANCE: Distance from edge of slab to domain edge",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"15.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"ZCLEARANCE: Distance from bottom of slab to domain bottom",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"GroundHeatTransfer:Slab:ManualGrid", () => new IdfObject("GroundHeatTransfer:Slab:ManualGrid",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",1,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"NX: Number of cells in the X direction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",1,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"NY: Number of cells in the Y direction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",1,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"NZ: Number of cells in the Z direction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"IBOX: X direction cell indicator of slab edge",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"JBOX: Y direction cell indicator of slab edge",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"GroundHeatTransfer:Slab:XFACE", () => new IdfObject("GroundHeatTransfer:Slab:XFACE",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,40 ) },
            {"GroundHeatTransfer:Slab:YFACE", () => new IdfObject("GroundHeatTransfer:Slab:YFACE",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,40 ) },
            {"GroundHeatTransfer:Slab:ZFACE", () => new IdfObject("GroundHeatTransfer:Slab:ZFACE",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,25 ) },
            {"GroundHeatTransfer:Basement:SimParameters", () => new IdfObject("GroundHeatTransfer:Basement:SimParameters",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"F: Multiplier for the ADI solution",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"15",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"IYRS: Maximum number of yearly iterations:",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,2 ) },
            {"GroundHeatTransfer:Basement:MatlProps", () => new IdfObject("GroundHeatTransfer:Basement:MatlProps",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,6,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"NMAT: Number of materials in this domain",IdfFieldMinMaxType.None,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,"2243",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Density for Foundation Wall",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,"2243",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"density for Floor Slab",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,"311",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"density for Ceiling",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,"1500",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"density for Soil",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,"2000",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"density for Gravel",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,"449",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"density for Wood",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg-K",0,0,"880",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Specific heat for foundation wall",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg-K",0,0,"880",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Specific heat for floor slab",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg-K",0,0,"1530",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Specific heat for ceiling",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg-K",0,0,"840",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Specific heat for soil",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg-K",0,0,"720",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Specific heat for gravel",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg-K",0,0,"1530",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Specific heat for wood",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,"1.4",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal conductivity for foundation wall",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,"1.4",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal conductivity for floor slab",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,"0.09",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal conductivity for ceiling",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,"1.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"thermal conductivity for soil",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,"1.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"thermal conductivity for gravel",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,"0.12",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"thermal conductivity for wood",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,19 ) },
            {"GroundHeatTransfer:Basement:Insulation", () => new IdfObject("GroundHeatTransfer:Basement:Insulation",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"m2-K/W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"REXT: R Value of any exterior insulation",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"TRUE","FALSE"},"INSFULL: Flag: Is the wall fully insulated?",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,2 ) },
            {"GroundHeatTransfer:Basement:SurfaceProps", () => new IdfObject("GroundHeatTransfer:Basement:SurfaceProps",false,IdfObjectFormat.NotSpecified,false,7,false,new List<IdfField> {new IdfField(false,"",0,1,"0.16",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"ALBEDO: Surface albedo for No snow conditions",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.40",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"ALBEDO: Surface albedo for snow conditions",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.94",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"EPSLN: Surface emissivity No Snow",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.86",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"EPSLN: Surface emissivity with Snow",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"cm",0,0,"6.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"VEGHT: Surface roughness No snow conditions",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"cm",0,0,"0.25",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"VEGHT: Surface roughness Snow conditions",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"FALSE",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"TRUE","FALSE"},"PET: Flag, Potential evapotranspiration on?",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,7 ) },
            {"GroundHeatTransfer:Basement:BldgData", () => new IdfObject("GroundHeatTransfer:Basement:BldgData",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"m",0.2,0,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"DWALL: Wall thickness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0.25,"0.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"DSLAB: Floor slab thickness",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.3",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"DGRAVXY: Width of gravel pit beside basement wall",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"DGRAVZN: Gravel depth extending above the floor slab",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"DGRAVZP: Gravel depth below the floor slab",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"GroundHeatTransfer:Basement:Interior", () => new IdfObject("GroundHeatTransfer:Basement:Interior",false,IdfObjectFormat.NotSpecified,false,7,false,new List<IdfField> {new IdfField(false,"",0,0,"TRUE",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"TRUE","FALSE"},"COND: Flag: Is the basement conditioned?",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2-K",0,0,"0.92",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"HIN: Downward convection only heat transfer coefficient",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2-K",0,0,"4.04",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"HIN: Upward convection only heat transfer coefficient",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2-K",0,0,"3.08",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"HIN: Horizontal convection only heat transfer coefficient",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2-K",0,0,"6.13",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"HIN: Downward combined (convection and radiation) heat transfer coefficient",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2-K",0,0,"9.26",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"HIN: Upward combined (convection and radiation) heat transfer coefficient",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2-K",0,0,"8.29",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"HIN: Horizontal combined (convection and radiation) heat transfer coefficient",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,7 ) },
            {"GroundHeatTransfer:Basement:ComBldg", () => new IdfObject("GroundHeatTransfer:Basement:ComBldg",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"C",0,0,"22",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"January average temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"22",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"February average temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"22",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"March average temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"22",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"April average temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"22",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"May average temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"22",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"June average temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"22",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"July average temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"22",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"August average temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"22",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"September average temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"22",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"October average temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"22",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"November average temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"22",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"December average temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Daily variation sine wave amplitude",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,13 ) },
            {"GroundHeatTransfer:Basement:EquivSlab", () => new IdfObject("GroundHeatTransfer:Basement:EquivSlab",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"APRatio: The area to perimeter ratio for this slab",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"TRUE","FALSE"},"EquivSizing: Flag",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,2 ) },
            {"GroundHeatTransfer:Basement:EquivAutoGrid", () => new IdfObject("GroundHeatTransfer:Basement:EquivAutoGrid",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"m",0,0,"15",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"CLEARANCE: Distance from outside of wall to edge of 3-D ground domain",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"SlabDepth: Thickness of the floor slab",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"BaseDepth: Depth of the basement wall below grade",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,3 ) },
            {"GroundHeatTransfer:Basement:AutoGrid", () => new IdfObject("GroundHeatTransfer:Basement:AutoGrid",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"m",0,0,"15",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"CLEARANCE: Distance from outside of wall to edge,",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,60,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"SLABX: X dimension of the building slab",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,60,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"SLABY: Y dimension of the building slab",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"ConcAGHeight: Height of the foundation wall above grade",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"SlabDepth: Thickness of the floor slab",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"BaseDepth: Depth of the basement wall below grade",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,6 ) },
            {"GroundHeatTransfer:Basement:ManualGrid", () => new IdfObject("GroundHeatTransfer:Basement:ManualGrid",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",1,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"NX: Number of cells in the X direction: 20]",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",1,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"NY: Number of cells in the Y direction: 20]",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",1,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"NZAG: Number of cells in the Z direction. above grade: 4 Always]",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",1,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"NZBG: Number of cells in Z direction. below grade: 10-35]",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"IBASE: X direction cell indicator of slab edge: 5-20]",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"JBASE: Y direction cell indicator of slab edge: 5-20]",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"KBASE: Z direction cell indicator of the top of the floor slab: 5-20]",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,7 ) },
            {"GroundHeatTransfer:Basement:XFACE", () => new IdfObject("GroundHeatTransfer:Basement:XFACE",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,44 ) },
            {"GroundHeatTransfer:Basement:YFACE", () => new IdfObject("GroundHeatTransfer:Basement:YFACE",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,44 ) },
            {"GroundHeatTransfer:Basement:ZFACE", () => new IdfObject("GroundHeatTransfer:Basement:ZFACE",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,40 ) },
            {"RoomAirModelType", () => new IdfObject("RoomAirModelType",false,IdfObjectFormat.NotSpecified,false,4,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,"Mixing",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Mixing","UserDefined","OneNodeDisplacementVentilation","ThreeNodeDisplacementVentilation","CrossVentilation","UnderFloorAirDistributionInterior","UnderFloorAirDistributionExterior","AirflowNetwork"},"Room-Air Modeling Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Direct",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Direct","Indirect"},"Air Temperature Coupling Strategy",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,4 ) },
            {"RoomAir:TemperaturePattern:UserDefined", () => new IdfObject("RoomAir:TemperaturePattern:UserDefined",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pattern Control Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,4 ) },
            {"RoomAir:TemperaturePattern:ConstantGradient", () => new IdfObject("RoomAir:TemperaturePattern:ConstantGradient",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Room Air Temperature Pattern Constant Gradient Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Integer for Pattern Control Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermostat Offset",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Air Offset",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Exhaust Air Offset",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"K/m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Gradient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,6 ) },
            {"RoomAir:TemperaturePattern:TwoGradient", () => new IdfObject("RoomAir:TemperaturePattern:TwoGradient",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Room Air Temperature Pattern Two Gradient Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Integer for Pattern Control Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermostat Height",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Air Height",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Exhaust Air Height",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"K/m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Gradient Lower Bound",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"K/m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Gradient Upper  Bound",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"OutdoorDryBulbTemperature","ZoneDryBulbTemperature","ZoneAndOutdoorTemperatureDifference","SensibleCoolingLoad","SensibleHeatingLoad"},"Gradient Interpolation Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Upper Temperature Bound",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Lower Temperature Bound",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Upper Heat Rate Bound",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Lower Heat Rate Bound",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,12 ) },
            {"RoomAir:TemperaturePattern:NondimensionalHeight", () => new IdfObject("RoomAir:TemperaturePattern:NondimensionalHeight",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Integer for Pattern Control Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermostat Offset",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Air Offset",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Exhaust Air Offset",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pair 1 Zeta Nondimensional Height",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"deltaC",-10,20,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pair 1 Delta Adjacent Air Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},true,43 ) },
            {"RoomAir:TemperaturePattern:SurfaceMapping", () => new IdfObject("RoomAir:TemperaturePattern:SurfaceMapping",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Integer for Pattern Control Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermostat Offset",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Air Offset",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Exhaust Air Offset",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface Name Pair 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(true,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Delta Adjacent Air Temperature Pair 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,47 ) },
            {"RoomAir:Node", () => new IdfObject("RoomAir:Node",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"RoomAirNodes"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Inlet","Floor","Control","Ceiling","MundtRoom","Return"},"Node Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Height of Nodal Control Volume Center",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 2 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 3 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 4 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 5 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 6 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 7 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 8 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 9 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 10 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 11 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 12 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 13 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 14 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 15 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 16 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 17 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 18 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 19 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 20 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 21 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"})},false,25 ) },
            {"RoomAirSettings:OneNodeDisplacementVentilation", () => new IdfObject("RoomAirSettings:OneNodeDisplacementVentilation",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Convective Internal Loads Added to Floor Air",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Infiltration Internal Loads Added to Floor Air",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,3 ) },
            {"RoomAirSettings:ThreeNodeDisplacementVentilation", () => new IdfObject("RoomAirSettings:ThreeNodeDisplacementVentilation",false,IdfObjectFormat.NotSpecified,false,6,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gain Distribution Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Plumes per Occupant",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"1.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermostat Height",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"1.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Comfort Height",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"0.4",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Difference Threshold for Reporting",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,6 ) },
            {"RoomAirSettings:CrossVentilation", () => new IdfObject("RoomAirSettings:CrossVentilation",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gain Distribution Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Jet","Recirculation"},"Airflow Region Used for Thermal Comfort Evaluation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,3 ) },
            {"RoomAirSettings:UnderFloorAirDistributionInterior", () => new IdfObject("RoomAirSettings:UnderFloorAirDistributionInterior",false,IdfObjectFormat.NotSpecified,false,15,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,"autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Diffusers",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Power per Plume",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2",0,0,"Autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Effective Area of Diffuser",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,90,"Autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Diffuser Slot Angle from Vertical",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"1.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermostat Height",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"1.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Comfort Height",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"0.4",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Difference Threshold for Reporting",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Swirl",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Custom","Swirl","VariableArea","HorizontalSwirl","LinearBarGrille"},"Floor Diffuser Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"1.7",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Transition Height",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient A",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient B",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient C",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient D",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient E",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,15 ) },
            {"RoomAirSettings:UnderFloorAirDistributionExterior", () => new IdfObject("RoomAirSettings:UnderFloorAirDistributionExterior",false,IdfObjectFormat.NotSpecified,false,15,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,"Autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Diffusers per Zone",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Power per Plume",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2",0,0,"Autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Effective Area of Diffuser",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,90,"autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Diffuser Slot Angle from Vertical",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"1.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermostat Height",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"1.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Comfort Height",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"0.4",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Difference Threshold for Reporting",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Swirl",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Custom","Swirl","VariableArea","HorizontalSwirl","LinearBarGrille"},"Floor Diffuser Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"1.7",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Transition Height",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient A in formula Kc = A*Gamma**B + C + D*Gamma + E*Gamma**2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient B in formula Kc = A*Gamma**B + C + D*Gamma + E*Gamma**2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient C in formula Kc = A*Gamma**B + C + D*Gamma + E*Gamma**2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient D in formula Kc = A*Gamma**B + C + D*Gamma + E*Gamma**2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient E in formula Kc = A*Gamma**B + C + D*Gamma + E*Gamma**2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,15 ) },
            {"RoomAir:Node:AirflowNetwork", () => new IdfObject("RoomAir:Node:AirflowNetwork",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"RoomAirflowNetworkNodes"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Zone Air Volume",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"RoomAir:Node:AirflowNetwork:AdjacentSurfaceList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"RoomAirNodeSurfaceLists"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"RoomAir:Node:AirflowNetwork:InternalGains Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"RoomAirNodeGains"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"RoomAir:Node:AirflowNetwork:HVACEquipment Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"RoomAirNodeHVACEquipment"})},false,6 ) },
            {"RoomAir:Node:AirflowNetwork:AdjacentSurfaceList", () => new IdfObject("RoomAir:Node:AirflowNetwork:AdjacentSurfaceList",false,IdfObjectFormat.NotSpecified,false,2,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"RoomAirNodeSurfaceLists"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"})},true,22 ) },
            {"RoomAir:Node:AirflowNetwork:InternalGains", () => new IdfObject("RoomAir:Node:AirflowNetwork:InternalGains",false,IdfObjectFormat.NotSpecified,false,4,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"RoomAirNodeGains"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"People","Lights","ElectricEquipment","GasEquipment","HotWaterEquipment","SteamEquipment","OtherEquipment","ZoneBaseboard:OutdoorTemperatureControlled","ZoneContaminantSourceAndSink:CarbonDioxide","WaterUse:Equipment","DaylightingDevice:Tubular","WaterHeater:Mixed","WaterHeater:Stratified","ThermalStorage:ChilledWater:Mixed","ThermalStorage:ChilledWater:Stratified","Generator:FuelCell","Generator:MicroCHP","ElectricLoadCenter:Transformer","ElectricLoadCenter:Inverter:Simple","ElectricLoadCenter:Inverter:FunctionOfPower","ElectricLoadCenter:Inverter:LookUpTable","ElectricLoadCenter:Storage:Battery","ElectricLoadCenter:Storage:Simple","ElectricLoadCenter:Storage:Converter","Pipe:Indoor","Refrigeration:Case","Refrigeration:CompressorRack","Refrigeration:System:Condenser:AirCooled","Refrigeration:TranscriticalSystem:GasCooler:AirCooled","Refrigeration:System:SuctionPipe","Refrigeration:TranscriticalSystem:SuctionPipeMT","Refrigeration:TranscriticalSystem:SuctionPipeLT","Refrigeration:SecondarySystem:Receiver","Refrigeration:SecondarySystem:Pipe","Refrigeration:WalkIn","Pump:VariableSpeed","Pump:ConstantSpeed","Pump:VariableSpeed:Condensate","HeaderedPumps:VariableSpeed","HeaderedPumps:ConstantSpeed","ZoneContaminantSourceAndSink:GenericContaminant","PlantComponent:UserDefined","Coil:UserDefined","ZoneHVAC:ForcedAir:UserDefined","AirTerminal:SingleDuct:UserDefined"},"Internal Gain Object 1 Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Internal Gain Object 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Gains to Node 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},true,10 ) },
            {"RoomAir:Node:AirflowNetwork:HVACEquipment", () => new IdfObject("RoomAir:Node:AirflowNetwork:HVACEquipment",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"RoomAirNodeHVACEquipment"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ZoneHVAC:TerminalUnit:VariableRefrigerantFlow","ZoneHVAC:EnergyRecoveryVentilator","ZoneHVAC:FourPipeFanCoil","ZoneHVAC:OutdoorAirUnit","ZoneHVAC:PackagedTerminalAirConditioner","ZoneHVAC:PackagedTerminalHeatPump","ZoneHVAC:UnitHeater","ZoneHVAC:UnitVentilator","ZoneHVAC:VentilatedSlab","ZoneHVAC:WaterToAirHeatPump","ZoneHVAC:WindowAirConditioner","ZoneHVAC:Baseboard:RadiantConvective:Electric","ZoneHVAC:Baseboard:RadiantConvective:Water","ZoneHVAC:Baseboard:RadiantConvective:Steam","ZoneHVAC:Baseboard:Convective:Electric","ZoneHVAC:Baseboard:Convective:Water","ZoneHVAC:HighTemperatureRadiant","ZoneHVAC:Dehumidifier:DX","ZoneHVAC:IdealLoadsAirSystem","ZoneHVAC:RefrigerationChillerSet","Fan:ZoneExhaust","WaterHeater:HeatPump","AirTerminal:SingleDuct:Uncontrolled","AirTerminal:DualDuct:ConstantVolume","AirTerminal:DualDuct:VAV","AirTerminal:SingleDuct:ConstantVolume:Reheat","AirTerminal:SingleDuct:VAV:Reheat","AirTerminal:SingleDuct:VAV:NoReheat","AirTerminal:SingleDuct:SeriesPIU:Reheat","AirTerminal:SingleDuct:ParallelPIU:Reheat","AirTerminal:SingleDuct:ConstantVolume:FourPipeInduction","AirTerminal:SingleDuct:VAV:Reheat:VariableSpeedFan","AirTerminal:SingleDuct:VAV:HeatAndCool:Reheat","AirTerminal:SingleDuct:VAV:HeatAndCool:NoReheat","AirTerminal:SingleDuct:ConstantVolume:CooledBeam","AirTerminal:DualDuct:VAV:OutdoorAir","AirLoopHVACReturnAir"},"ZoneHVAC or Air Terminal Equipment Object Type 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"ZoneHVAC or Air Terminal Equipment Object Name 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Output or Supply Air from HVAC Equipment 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Input or Return Air to HVAC Equipment 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},true,9 ) },
            {"RoomAirSettings:AirflowNetwork", () => new IdfObject("RoomAirSettings:AirflowNetwork",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Point RoomAirflowNetwork:Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"RoomAirflowNetworkNodes"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"RoomAirflowNetwork:Node Name 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"RoomAirflowNetworkNodes"})},true,9 ) },
            {"People", () => new IdfObject("People",false,IdfObjectFormat.NotSpecified,false,10,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"PeopleNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone or ZoneList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneAndZoneListNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of People Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"People",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"People","People/Area","Area/Person"},"Number of People Calculation Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of People",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"person/m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"People per Zone Floor Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/person",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Floor Area per Person",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.3",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction Radiant",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sensible Heat Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Activity Level Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"m3/s-W",0,3.82E-07,"3.82E-8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Carbon Dioxide Generation Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Enable ASHRAE 55 Comfort Warnings",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ZoneAveraged",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ZoneAveraged","SurfaceWeighted","AngleFactor"},"Mean Radiant Temperature Calculation Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface Name/Angle Factor List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranAngFacNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Work Efficiency Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"ClothingInsulationSchedule",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ClothingInsulationSchedule","DynamicClothingModelASHRAE55","CalculationMethodSchedule"},"Clothing Insulation Calculation Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Clothing Insulation Calculation Method Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Clothing Insulation Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Velocity Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fanger","Pierce","KSU","AdaptiveASH55","AdaptiveCEN15251"},"Thermal Comfort Model 1 Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fanger","Pierce","KSU","AdaptiveASH55","AdaptiveCEN15251"},"Thermal Comfort Model 2 Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fanger","Pierce","KSU","AdaptiveASH55","AdaptiveCEN15251"},"Thermal Comfort Model 3 Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fanger","Pierce","KSU","AdaptiveASH55","AdaptiveCEN15251"},"Thermal Comfort Model 4 Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fanger","Pierce","KSU","AdaptiveASH55","AdaptiveCEN15251"},"Thermal Comfort Model 5 Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,24 ) },
            {"ComfortViewFactorAngles", () => new IdfObject("ComfortViewFactorAngles",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AllHeatTranAngFacNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Angle Factor 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 2 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Angle Factor 2",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 3 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Angle Factor 3",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 4 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Angle Factor 4",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 5 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Angle Factor 5",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 6 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Angle Factor 6",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 7 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Angle Factor 7",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 8 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Angle Factor 8",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 9 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Angle Factor 9",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 10 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Angle Factor 10",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 11 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Angle Factor 11",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 12 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Angle Factor 12",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 13 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Angle Factor 13",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 14 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Angle Factor 14",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 15 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Angle Factor 15",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 16 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Angle Factor 16",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 17 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Angle Factor 17",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 18 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Angle Factor 18",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 19 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Angle Factor 19",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 20 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Angle Factor 20",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,42 ) },
            {"Lights", () => new IdfObject("Lights",false,IdfObjectFormat.NotSpecified,false,11,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"LightsNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone or ZoneList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneAndZoneListNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"LightingLevel",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"LightingLevel","Watts/Area","Watts/Person"},"Design Level Calculation Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Lighting Level",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Watts per Zone Floor Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/person",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Watts per Person",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Air Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction Radiant",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction Visible",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction Replaceable",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Return Air Fraction Calculated from Plenum Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Air Fraction Function of Plenum Temperature Coefficient 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"1/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Air Fraction Function of Plenum Temperature Coefficient 2",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Air Heat Gain Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,16 ) },
            {"ElectricEquipment", () => new IdfObject("ElectricEquipment",false,IdfObjectFormat.NotSpecified,false,10,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ElectricEquipmentNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone or ZoneList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneAndZoneListNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"EquipmentLevel",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"EquipmentLevel","Watts/Area","Watts/Person"},"Design Level Calculation Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Level",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Watts per Zone Floor Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/person",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Watts per Person",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction Latent",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction Radiant",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction Lost",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,11 ) },
            {"GasEquipment", () => new IdfObject("GasEquipment",false,IdfObjectFormat.NotSpecified,false,10,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone or ZoneList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneAndZoneListNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"EquipmentLevel",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"EquipmentLevel","Watts/Area","Watts/Person","Power/Area","Power/Person"},"Design Level Calculation Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Level",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Power per Zone Floor Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/person",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Power per Person",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction Latent",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction Radiant",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction Lost",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-W",0,4E-07,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Carbon Dioxide Generation Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,12 ) },
            {"HotWaterEquipment", () => new IdfObject("HotWaterEquipment",false,IdfObjectFormat.NotSpecified,false,10,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone or ZoneList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneAndZoneListNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"EquipmentLevel",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"EquipmentLevel","Watts/Area","Watts/Person","Power/Area","Power/Person"},"Design Level Calculation Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Level",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Power per Zone Floor Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/person",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Power per Person",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction Latent",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction Radiant",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction Lost",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,11 ) },
            {"SteamEquipment", () => new IdfObject("SteamEquipment",false,IdfObjectFormat.NotSpecified,false,10,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone or ZoneList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneAndZoneListNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"EquipmentLevel",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"EquipmentLevel","Watts/Area","Watts/Person","Power/Area","Power/Person"},"Design Level Calculation Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Level",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Power per Zone Floor Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/person",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Power per Person",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction Latent",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction Radiant",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction Lost",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,11 ) },
            {"OtherEquipment", () => new IdfObject("OtherEquipment",false,IdfObjectFormat.NotSpecified,false,11,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","Electricity","NaturalGas","PropaneGas","FuelOil#1","FuelOil#2","Diesel","Gasoline","Coal","OtherFuel1","OtherFuel2","Steam","DistrictHeating","DistrictCooling"},"Fuel Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone or ZoneList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneAndZoneListNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"EquipmentLevel",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"EquipmentLevel","Watts/Area","Watts/Person","Power/Area","Power/Person"},"Design Level Calculation Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Level",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Power per Zone Floor Area",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/person",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Power per Person",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction Latent",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction Radiant",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction Lost",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-W",0,4E-07,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Carbon Dioxide Generation Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,13 ) },
            {"ElectricEquipment:ITE:AirCooled", () => new IdfObject("ElectricEquipment:ITE:AirCooled",false,IdfObjectFormat.NotSpecified,false,28,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,"FlowFromSystem",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"FlowFromSystem","FlowControlWithApproachTemperatures"},"Air Flow Calculation Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Watts/Unit",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Watts/Unit","Watts/Area"},"Design Power Input Calculation Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Watts per Unit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Units",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Watts per Zone Floor Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Power Input Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"CPU Loading  Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"CPU Power Input Function of Loading and Air Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Fan Power Input Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s-W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Fan Air Flow Rate per Power Input",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Flow Function of Loading and Air Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Power Input Function of Flow Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"C",0,0,"15.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Entering Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","A1","A2","A3","A4","B","C"},"Environmental Class",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"AdjustedSupply",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"AdjustedSupply","ZoneAirNode","RoomAirModel"},"Air Inlet Connection Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Room Air Model Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"RoomAirNodes"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Room Air Model Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"RoomAirNodes"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0.5,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Recirculation Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Recirculation Function of Loading and Supply Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Electric Power Supply Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Electric Power Supply Efficiency Function of Part Load Ratio Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Electric Power Supply Losses to Zone",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ITE-CPU",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"CPU End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ITE-Fans",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ITE-UPS",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Electric Power Supply End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Temperature Difference",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Temperature Difference Schedule",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Temperature Difference",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Temperature Difference Schedule",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,32 ) },
            {"ZoneBaseboard:OutdoorTemperatureControlled", () => new IdfObject("ZoneBaseboard:OutdoorTemperatureControlled",false,IdfObjectFormat.NotSpecified,false,8,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Capacity at Low Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Capacity at High Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"High Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction Radiant",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,9 ) },
            {"SwimmingPool:Indoor", () => new IdfObject("SwimmingPool:Indoor",false,IdfObjectFormat.NotSpecified,false,16,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FloorSurfaceNames"}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Average Depth",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Activity Factor Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Make-up Water Supply Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cover Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cover Evaporation Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cover Convection Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cover Short-Wavelength Radiation Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cover Long-Wavelength Radiation Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pool Water Inlet Node",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pool Water Outlet Node",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pool Heating System Maximum Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/(m3/s)",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pool Miscellaneous Equipment Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint Temperature Schedule",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Number of People",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"People Schedule",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"People Heat Gain Schedule",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,18 ) },
            {"ZoneContaminantSourceAndSink:CarbonDioxide", () => new IdfObject("ZoneContaminantSourceAndSink:CarbonDioxide",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Generation Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,4 ) },
            {"ZoneContaminantSourceAndSink:Generic:Constant", () => new IdfObject("ZoneContaminantSourceAndSink:Generic:Constant",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Generation Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Generation Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Removal Coefficient",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Removal Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,6 ) },
            {"SurfaceContaminantSourceAndSink:Generic:PressureDriven", () => new IdfObject("SurfaceContaminantSourceAndSink:Generic:PressureDriven",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SurfAndSubSurfNames"}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Generation Rate Coefficient",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Generation Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Generation Exponent",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"ZoneContaminantSourceAndSink:Generic:CutoffModel", () => new IdfObject("ZoneContaminantSourceAndSink:Generic:CutoffModel",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Generation Rate Coefficient",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"ppm",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cutoff Generic Contaminant at which Emission Ceases",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"ZoneContaminantSourceAndSink:Generic:DecaySource", () => new IdfObject("ZoneContaminantSourceAndSink:Generic:DecaySource",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Initial Emission Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Delay Time Constant",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"SurfaceContaminantSourceAndSink:Generic:BoundaryLayerDiffusion", () => new IdfObject("SurfaceContaminantSourceAndSink:Generic:BoundaryLayerDiffusion",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SurfaceNames"}),new IdfField(false,"m/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mass Transfer Coefficient",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Henry Adsorption Constant or Partition Coefficient",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"SurfaceContaminantSourceAndSink:Generic:DepositionVelocitySink", () => new IdfObject("SurfaceContaminantSourceAndSink:Generic:DepositionVelocitySink",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SurfaceNames"}),new IdfField(false,"m/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Deposition Velocity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,4 ) },
            {"ZoneContaminantSourceAndSink:Generic:DepositionRateSink", () => new IdfObject("ZoneContaminantSourceAndSink:Generic:DepositionRateSink",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"m/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Deposition Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,4 ) },
            {"Daylighting:Controls", () => new IdfObject("Daylighting:Controls",false,IdfObjectFormat.NotSpecified,false,16,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"DaylightingControlNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,"SplitFlux",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SplitFlux","DElight"},"Daylighting Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"Continuous",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Continuous","Stepped","ContinuousOff"},"Lighting Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0.6,"0.3",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Input Power Fraction for Continuous or ContinuousOff Dimming Control",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0.6,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Light Output Fraction for Continuous or ContinuousOff Dimming Control",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Stepped Control Steps",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Probability Lighting will be Reset When Needed in Manual Stepped Control",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Glare Calculation Daylighting Reference Point Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DaylightReferencePointNames"}),new IdfField(false,"deg",0,360,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Glare Calculation Azimuth Angle of View Direction Clockwise from Zone y-Axis",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,0,"22",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Allowable Discomfort Glare Index",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"DElight Gridding Resolution",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Daylighting Reference Point 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DaylightReferencePointNames"}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Zone Controlled by Reference Point 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"lux",0,0,"500",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Illuminance Setpoint at Reference Point 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,43 ) },
            {"Daylighting:ReferencePoint", () => new IdfObject("Daylighting:ReferencePoint",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"DaylightReferencePointNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"X-Coordinate of Reference Point",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Y-Coordinate of Reference Point",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Z-Coordinate of Reference Point",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"Daylighting:DELight:ComplexFenestration", () => new IdfObject("Daylighting:DELight:ComplexFenestration",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Complex Fenestration Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Building Surface Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SurfaceNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Window Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SubSurfNames"}),new IdfField(false,"deg",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fenestration Rotation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"DaylightingDevice:Tubular", () => new IdfObject("DaylightingDevice:Tubular",false,IdfObjectFormat.NotSpecified,false,7,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dome Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SubSurfNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Diffuser Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SubSurfNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Construction Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ConstructionNames"}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Diameter",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Total Length",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2-K/W",0,0,"0.28",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Effective Thermal Resistance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Transition Zone 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Transition Zone 1 Length",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,15 ) },
            {"DaylightingDevice:Shelf", () => new IdfObject("DaylightingDevice:Shelf",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Window Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SubSurfNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inside Shelf Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SurfaceNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outside Shelf Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AttachedShadingSurfNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outside Shelf Construction Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ConstructionNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"View Factor to Outside Shelf",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,6 ) },
            {"DaylightingDevice:LightWell", () => new IdfObject("DaylightingDevice:LightWell",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Exterior Window Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SubSurfNames"}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Height of Well",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Perimeter of Bottom of Well",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Area of Bottom of Well",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Visible Reflectance of Well Walls",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"Output:DaylightFactors", () => new IdfObject("Output:DaylightFactors",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SizingDays","AllShadowCalculationDays"},"Reporting Days",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,1 ) },
            {"Output:IlluminanceMap", () => new IdfObject("Output:IlluminanceMap",false,IdfObjectFormat.NotSpecified,false,9,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"m",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Z height",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"X Minimum Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"X Maximum Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,0,"2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of X Grid Points",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Y Minimum Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Y Maximum Coordinate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,0,"2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Y Grid Points",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,9 ) },
            {"OutputControl:IlluminanceMap:Style", () => new IdfObject("OutputControl:IlluminanceMap:Style",true,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,"Comma",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Comma","Tab","Fixed"},"Column Separator",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,1 ) },
            {"ZoneInfiltration:DesignFlowRate", () => new IdfObject("ZoneInfiltration:DesignFlowRate",false,IdfObjectFormat.NotSpecified,false,12,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone or ZoneList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneAndZoneListNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"Flow/Zone",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Flow/Zone","Flow/Area","Flow/ExteriorArea","Flow/ExteriorWallArea","AirChanges/Hour"},"Design Flow Rate Calculation Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Flow per Zone Floor Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Flow per Exterior Surface Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"1/hr",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Changes per Hour",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Constant Term Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Term Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Velocity Term Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Velocity Squared Term Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,12 ) },
            {"ZoneInfiltration:EffectiveLeakageArea", () => new IdfObject("ZoneInfiltration:EffectiveLeakageArea",false,IdfObjectFormat.NotSpecified,false,6,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"cm2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Effective Air Leakage Area",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stack Coefficient",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Coefficient",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,6 ) },
            {"ZoneInfiltration:FlowCoefficient", () => new IdfObject("ZoneInfiltration:FlowCoefficient",false,IdfObjectFormat.NotSpecified,false,8,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Flow Coefficient",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stack Coefficient",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.67",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pressure Exponent",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Coefficient",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Shelter Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,8 ) },
            {"ZoneVentilation:DesignFlowRate", () => new IdfObject("ZoneVentilation:DesignFlowRate",false,IdfObjectFormat.NotSpecified,false,15,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"VentilationNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone or ZoneList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneAndZoneListNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"Flow/Zone",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Flow/Zone","Flow/Area","Flow/Person","AirChanges/Hour"},"Design Flow Rate Calculation Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Flow Rate per Zone Floor Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-person",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Flow Rate per Person",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"1/hr",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Changes per Hour",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Natural",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Natural","Intake","Exhaust","Balanced"},"Ventilation Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Pressure Rise",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Total Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Constant Term Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Term Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Velocity Term Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Velocity Squared Term Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",-100,100,"-100",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Indoor Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Indoor Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",-100,100,"100",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Indoor Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Indoor Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"deltaC",-100,0,"-100",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Delta Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Delta Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",-100,100,"-100",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",-100,100,"100",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"m/s",0,40,"40",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Wind Speed",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,26 ) },
            {"ZoneVentilation:WindandStackOpenArea", () => new IdfObject("ZoneVentilation:WindandStackOpenArea",false,IdfObjectFormat.NotSpecified,false,8,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"VentilationNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"m2",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Opening Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Opening Area Fraction Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"dimensionless",0,1,"Autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Opening Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,360,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Effective Angle",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Height Difference",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"Autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Discharge Coefficient for Opening",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",-100,100,"-100",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Indoor Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Indoor Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",-100,100,"100",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Indoor Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Indoor Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"deltaC",-100,0,"-100",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Delta Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Delta Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",-100,100,"-100",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",-100,100,"100",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"m/s",0,40,"40",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Wind Speed",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,19 ) },
            {"ZoneAirBalance:OutdoorAir", () => new IdfObject("ZoneAirBalance:OutdoorAir",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,"Quadrature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Quadrature","None"},"Air Balance Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Induced Outdoor Air Due to Unbalanced Duct Leakage",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Induced Outdoor Air Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,5 ) },
            {"ZoneMixing", () => new IdfObject("ZoneMixing",false,IdfObjectFormat.NotSpecified,false,9,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"Flow/Zone",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Flow/Zone","Flow/Area","Flow/Person","AirChanges/Hour"},"Design Flow Rate Calculation Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Flow Rate per Zone Floor Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-person",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Flow Rate per Person",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"1/hr",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Changes per Hour",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"deltaC",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Delta Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Delta Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Zone Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Zone Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Source Zone Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Source Zone Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,17 ) },
            {"ZoneCrossMixing", () => new IdfObject("ZoneCrossMixing",false,IdfObjectFormat.NotSpecified,false,9,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"Flow/Zone",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Flow/Zone","Flow/Person","Flow/Area","AirChanges/Hour"},"Design Flow Rate Calculation Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Flow Rate per Zone Floor Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-person",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Flow Rate per Person",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"1/hr",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Changes per Hour",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"deltaC",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Delta Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Delta Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Zone Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Zone Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Source Zone Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Source Zone Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,17 ) },
            {"ZoneRefrigerationDoorMixing", () => new IdfObject("ZoneRefrigerationDoorMixing",false,IdfObjectFormat.NotSpecified,false,4,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone 2 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"m",0,50,"3.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Door Height",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2",0,400,"9.",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Door Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","AirCurtain","StripCurtain"},"Door Protection Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,7 ) },
            {"ZoneEarthtube", () => new IdfObject("ZoneEarthtube",false,IdfObjectFormat.NotSpecified,false,22,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",-100,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Zone Temperature when Cooling",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",-100,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Zone Temperature when Heating",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Delta Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Natural",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Natural","Intake","Exhaust"},"Earthtube Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Pressure Rise",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Total Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pipe Radius",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pipe Thickness",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"15",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pipe Length",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,"200",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pipe Thermal Conductivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"3",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pipe Depth Under Ground Surface",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"HeavyAndDamp",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HeavyAndSaturated","HeavyAndDamp","HeavyAndDry","LightAndDry"},"Soil Condition",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Average Soil Surface Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Amplitude of Soil Surface Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"days",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Phase Constant of Soil Surface Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Constant Term Flow Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Term Flow Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Velocity Term Flow Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Velocity Squared Term Flow Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,22 ) },
            {"ZoneCoolTower:Shower", () => new IdfObject("ZoneCoolTower:Shower",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Supply Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"",0,0,"WindDrivenFlow",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"WaterFlowSchedule","WindDrivenFlow"},"Flow Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pump Flow Rate Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Water Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Effective Tower Height",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Airflow Outlet Area",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",-100,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Indoor Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Water Loss",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Flow Schedule",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Power Consumption",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,14 ) },
            {"ZoneThermalChimney", () => new IdfObject("ZoneThermalChimney",false,IdfObjectFormat.NotSpecified,false,10,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Width of the Absorber Wall",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cross Sectional Area of Air Channel Outlet",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Discharge Coefficient",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Distance from Top of Thermal Chimney to Inlet 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Ratios of Air Flow Rates Passing through Zone 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cross Sectional Areas of Air Channel Inlet 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone 2 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Distance from Top of Thermal Chimney to Inlet 2",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Ratios of Air Flow Rates Passing through Zone 2",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cross Sectional Areas of Air Channel Inlet 2",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone 3 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Distance from Top of Thermal Chimney to Inlet 3",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Ratios of Air Flow Rates Passing through Zone 3",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cross Sectional Areas of Air Channel Inlet 3",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone 4 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Distance from Top of Thermal Chimney to Inlet 4",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Ratios of Air Flow Rates Passing through Zone 4",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cross Sectional Areas of Air Channel Inlet 4",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone 5 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Distance from Top of Thermal Chimney to Inlet 5",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Ratios of Air Flow Rates Passing through Zone 5",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cross Sectional Areas of Air Channel Inlet 5",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone 6 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Distance from Top of Thermal Chimney to Inlet 6",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Ratios of Air Flow Rates Passing through Zone 6",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cross Sectional Areas of Air Channel Inlet 6",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone 7 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Distance from Top of Thermal Chimney to Inlet 7",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Ratios of Air Flow Rates Passing through Zone 7",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cross Sectional Areas of Air Channel Inlet 7",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone 8 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Distance from Top of Thermal Chimney to Inlet 8",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Ratios of Air Flow Rates Passing through Zone 8",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cross Sectional Areas of Air Channel Inlet 8",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone 9 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Distance from Top of Thermal Chimney to Inlet 9",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Ratios of Air Flow Rates Passing through Zone 9",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cross Sectional Areas of Air Channel Inlet 9",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone 10 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Distance from Top of Thermal Chimney to Inlet 10",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Ratios of Air Flow Rates Passing through Zone 10",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cross Sectional Areas of Air Channel Inlet 10",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone 11 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Distance from Top of Thermal Chimney to Inlet 11",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Ratios of Air Flow Rates Passing through Zone 11",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cross Sectional Areas of Air Channel Inlet 11",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone 12 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Distance from Top of Thermal Chimney to Inlet 12",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Ratios of Air Flow Rates Passing through Zone 12",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cross Sectional Areas of Air Channel Inlet 12",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone 13 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Distance from Top of Thermal Chimney to Inlet 13",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Ratios of Air Flow Rates Passing through Zone 13",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cross Sectional Areas of Air Channel Inlet 13",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone 14 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Distance from Top of Thermal Chimney to Inlet 14",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Ratios of Air Flow Rates Passing through Zone 14",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cross Sectional Areas of Air Channel Inlet 14",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone 15 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Distance from Top of Thermal Chimney to Inlet 15",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Ratios of Air Flow Rates Passing through Zone 15",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cross Sectional Areas of Air Channel Inlet 15",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone 16 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Distance from Top of Thermal Chimney to Inlet 16",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Ratios of Air Flow Rates Passing through Zone 16",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cross Sectional Areas of Air Channel Inlet 16",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone 17 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Distance from Top of Thermal Chimney to Inlet 17",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Ratios of Air Flow Rates Passing through Zone 17",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cross Sectional Areas of Air Channel Inlet 17",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone 18 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Distance from Top of Thermal Chimney to Inlet 18",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Ratios of Air Flow Rates Passing through Zone 18",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cross Sectional Areas of Air Channel Inlet 18",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone 19 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Distance from Top of Thermal Chimney to Inlet 19",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Ratios of Air Flow Rates Passing through Zone 19",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cross Sectional Areas of Air Channel Inlet 19",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone 20 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Distance from Top of Thermal Chimney to Inlet 20",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Ratios of Air Flow Rates Passing through Zone 20",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cross Sectional Areas of Air Channel Inlet 20",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,86 ) },
            {"AirflowNetwork:SimulationControl", () => new IdfObject("AirflowNetwork:SimulationControl",true,IdfObjectFormat.NotSpecified,false,12,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"NoMultizoneOrDistribution",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"MultizoneWithDistribution","MultizoneWithoutDistribution","MultizoneWithDistributionOnlyDuringFanOperation","NoMultizoneOrDistribution"},"AirflowNetwork Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SurfaceAverageCalculation",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Input","SurfaceAverageCalculation"},"Wind Pressure Coefficient Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"OpeningHeight",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ExternalNode","OpeningHeight"},"Height Selection for Local Wind Pressure Calculation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"LowRise",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"LowRise","HighRise"},"Building Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",10,30000,"500",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Number of Iterations",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ZeroNodePressures",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"LinearInitializationMethod","ZeroNodePressures"},"Initialization Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"1.E-4",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Airflow Convergence Tolerance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/s",0,0,"1.E-6",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Absolute Airflow Convergence Tolerance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",-1,1,"-0.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Convergence Acceleration Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,180,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Azimuth Angle of Long Axis of Building",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ratio of Building Width Along Short Axis to Width Along Long Axis",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Height Dependence of External Node Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SkylineLU",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SkylineLU","ConjugateGradient"},"Solver",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,14 ) },
            {"AirflowNetwork:MultiZone:Zone", () => new IdfObject("AirflowNetwork:MultiZone:Zone",false,IdfObjectFormat.NotSpecified,false,8,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AirFlowNetworkMultizoneZones"},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,"NoVent",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Temperature","Enthalpy","Constant","ASHRAE55Adaptive","CEN15251Adaptive","NoVent"},"Ventilation Control Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ventilation Control Zone Temperature Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"dimensionless",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Venting Open Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,100,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Indoor and Outdoor Temperature Difference Lower Limit For Maximum Venting Open Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"100.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Indoor and Outdoor Temperature Difference Upper Limit for Minimum Venting Open Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaJ/kg",0,300000,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Indoor and Outdoor Enthalpy Difference Lower Limit For Maximum Venting Open Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaJ/kg",0,0,"300000.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Indoor and Outdoor Enthalpy Difference Upper Limit for Minimum Venting Open Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Venting Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"Standard",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Advanced","Standard"},"Single Sided Wind Pressure Coefficient Algorithm",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"10.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Facade Width",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Occupant Ventilation Control Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AirflowNetworkOccupantVentilationControlNames"})},false,12 ) },
            {"AirflowNetwork:MultiZone:Surface", () => new IdfObject("AirflowNetwork:MultiZone:Surface",false,IdfObjectFormat.NotSpecified,false,4,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SurfAndSubSurfNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Leakage Component Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SurfaceAirflowLeakageNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"External Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ExternalNodeNames","OutdoorAirNodeNames"}),new IdfField(false,"dimensionless",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Window/Door Opening Factor, or Crack Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ZoneLevel",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Temperature","Enthalpy","Constant","ASHRAE55Adaptive","CEN15251Adaptive","NoVent","ZoneLevel","AdjacentTemperature","AdjacentEnthalpy"},"Ventilation Control Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ventilation Control Zone Temperature Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"dimensionless",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Venting Open Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,100,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Indoor and Outdoor Temperature Difference Lower Limit For Maximum Venting Open Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"100.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Indoor and Outdoor Temperature Difference Upper Limit for Minimum Venting Open Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaJ/kg",0,300000,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Indoor and Outdoor Enthalpy Difference Lower Limit For Maximum Venting Open Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaJ/kg",0,0,"300000.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Indoor and Outdoor Enthalpy Difference Upper Limit for Minimum Venting Open Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Venting Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Occupant Ventilation Control Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AirflowNetworkOccupantVentilationControlNames"}),new IdfField(false,"",0,0,"PolygonHeight",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"PolygonHeight","BaseSurfaceAspectRatio","UserDefinedAspectRatio"},"Equivalent Rectangle Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equivalent Rectangle Aspect Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,15 ) },
            {"AirflowNetwork:MultiZone:ReferenceCrackConditions", () => new IdfObject("AirflowNetwork:MultiZone:ReferenceCrackConditions",false,IdfObjectFormat.NotSpecified,false,4,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ReferenceCrackConditions"},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"20",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",31000,120000,"101325",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Barometric Pressure",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kgWater/kgDryAir",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Humidity Ratio",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,4 ) },
            {"AirflowNetwork:MultiZone:Surface:Crack", () => new IdfObject("AirflowNetwork:MultiZone:Surface:Crack",false,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SurfaceAirflowLeakageNames"},new List<string>{},new List<string>{}),new IdfField(true,"kg/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Mass Flow Coefficient at Reference Conditions",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0.5,1,"0.65",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Mass Flow Exponent",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Crack Conditions",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ReferenceCrackConditions"})},false,4 ) },
            {"AirflowNetwork:MultiZone:Surface:EffectiveLeakageArea", () => new IdfObject("AirflowNetwork:MultiZone:Surface:EffectiveLeakageArea",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SurfaceAirflowLeakageNames"},new List<string>{},new List<string>{}),new IdfField(true,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Effective Leakage Area",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Discharge Coefficient",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"4.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Pressure Difference",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0.5,1,".65",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Mass Flow Exponent",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"AirflowNetwork:MultiZone:Component:DetailedOpening", () => new IdfObject("AirflowNetwork:MultiZone:Component:DetailedOpening",false,IdfObjectFormat.NotSpecified,false,16,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SurfaceAirflowLeakageNames"},new List<string>{},new List<string>{}),new IdfField(true,"kg/s-m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Mass Flow Coefficient When Opening is Closed",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0.5,1,"0.65",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Mass Flow Exponent When Opening is Closed",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"NonPivoted",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"NonPivoted","HorizontallyPivoted"},"Type of Rectangular Large Vertical Opening (LVO)",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Extra Crack Length or Height of Pivoting Axis",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",2,4,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Sets of Opening Factor Data",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Opening Factor 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.001",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Discharge Coefficient for Opening Factor 1",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Width Factor for Opening Factor 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Height Factor for Opening Factor 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Start Height Factor for Opening Factor 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Opening Factor 2",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Discharge Coefficient for Opening Factor 2",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Width Factor for Opening Factor 2",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Height Factor for Opening Factor 2",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Start Height Factor for Opening Factor 2",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Opening Factor 3",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Discharge Coefficient for Opening Factor 3",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Width Factor for Opening Factor 3",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Height Factor for Opening Factor 3",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Start Height Factor for Opening Factor 3",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Opening Factor 4",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Discharge Coefficient for Opening Factor 4",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Width Factor for Opening Factor 4",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Height Factor for Opening Factor 4",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Start Height Factor for Opening Factor 4",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,26 ) },
            {"AirflowNetwork:MultiZone:Component:SimpleOpening", () => new IdfObject("AirflowNetwork:MultiZone:Component:SimpleOpening",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SurfaceAirflowLeakageNames"},new List<string>{},new List<string>{}),new IdfField(true,"kg/s-m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Mass Flow Coefficient When Opening is Closed",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0.5,1,".65",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Mass Flow Exponent When Opening is Closed",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Density Difference for Two-Way Flow",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Discharge Coefficient",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"AirflowNetwork:MultiZone:Component:HorizontalOpening", () => new IdfObject("AirflowNetwork:MultiZone:Component:HorizontalOpening",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SurfaceAirflowLeakageNames"},new List<string>{},new List<string>{}),new IdfField(true,"kg/s-m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Mass Flow Coefficient When Opening is Closed",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0.5,1,".65",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Mass Flow Exponent When Opening is Closed",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,90,"90",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sloping Plane Angle",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Discharge Coefficient",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"AirflowNetwork:MultiZone:Component:ZoneExhaustFan", () => new IdfObject("AirflowNetwork:MultiZone:Component:ZoneExhaustFan",false,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SurfaceAirflowLeakageNames"},new List<string>{},new List<string>{"FansZoneExhaust"}),new IdfField(true,"kg/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Mass Flow Coefficient When the Zone Exhaust Fan is Off at Reference Conditions",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0.5,1,"0.65",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Mass Flow Exponent When the Zone Exhaust Fan is Off",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Crack Conditions",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ReferenceCrackConditions"})},false,4 ) },
            {"AirflowNetwork:MultiZone:ExternalNode", () => new IdfObject("AirflowNetwork:MultiZone:ExternalNode",false,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ExternalNodeNames"},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"External Node Height",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Pressure Coefficient Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WPCValueNames","UnivariateFunctions"}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Symmetric Wind Pressure Coefficient Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Absolute",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Absolute","Relative"},"Wind Angle Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"AirflowNetwork:MultiZone:WindPressureCoefficientArray", () => new IdfObject("AirflowNetwork:MultiZone:WindPressureCoefficientArray",false,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"WPCSetNames"},new List<string>{},new List<string>{}),new IdfField(true,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Direction 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Direction 2",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Direction 3",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Direction 4",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Direction 5",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Direction 6",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Direction 7",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Direction 8",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Direction 9",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Direction 10",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Direction 11",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Direction 12",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Direction 13",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Direction 14",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Direction 15",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Direction 16",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Direction 17",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Direction 18",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Direction 19",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Direction 20",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Direction 21",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Direction 22",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Direction 23",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Direction 24",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Direction 25",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Direction 26",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Direction 27",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Direction 28",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Direction 29",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Direction 30",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Direction 31",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Direction 32",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Direction 33",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Direction 34",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Direction 35",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,360,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Direction 36",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,37 ) },
            {"AirflowNetwork:MultiZone:WindPressureCoefficientValues", () => new IdfObject("AirflowNetwork:MultiZone:WindPressureCoefficientValues",false,IdfObjectFormat.NotSpecified,false,4,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"WPCValueNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"AirflowNetwork:MultiZone:WindPressureCoefficientArray Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WPCSetNames"}),new IdfField(true,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Pressure Coefficient Value 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Pressure Coefficient Value 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Pressure Coefficient Value 3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Pressure Coefficient Value 4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Pressure Coefficient Value 5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Pressure Coefficient Value 6",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Pressure Coefficient Value 7",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Pressure Coefficient Value 8",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Pressure Coefficient Value 9",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Pressure Coefficient Value 10",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Pressure Coefficient Value 11",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Pressure Coefficient Value 12",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Pressure Coefficient Value 13",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Pressure Coefficient Value 14",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Pressure Coefficient Value 15",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Pressure Coefficient Value 16",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Pressure Coefficient Value 17",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Pressure Coefficient Value 18",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Pressure Coefficient Value 19",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Pressure Coefficient Value 20",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Pressure Coefficient Value 21",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Pressure Coefficient Value 22",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Pressure Coefficient Value 23",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Pressure Coefficient Value 24",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Pressure Coefficient Value 25",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Pressure Coefficient Value 26",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Pressure Coefficient Value 27",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Pressure Coefficient Value 28",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Pressure Coefficient Value 29",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Pressure Coefficient Value 30",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Pressure Coefficient Value 31",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Pressure Coefficient Value 32",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Pressure Coefficient Value 33",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Pressure Coefficient Value 34",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Pressure Coefficient Value 35",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Pressure Coefficient Value 36",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,38 ) },
            {"AirflowNetwork:ZoneControl:PressureController", () => new IdfObject("AirflowNetwork:ZoneControl:PressureController",true,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AirflowNetworkZoneControlPressureControllerNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"AirflowNetwork:MultiZone:Component:ZoneExhaustFan","AirflowNetwork:Distribution:Component:ReliefAirFlow"},"Control Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AFNReliefAirFlowNames","FansZoneExhaust"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pressure Control Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pressure Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,6 ) },
            {"AirflowNetwork:Distribution:Node", () => new IdfObject("AirflowNetwork:Distribution:Node",false,IdfObjectFormat.NotSpecified,false,4,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AirflowNetworkNodeAndZoneNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component Name or Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Other",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"AirLoopHVAC:ZoneMixer","AirLoopHVAC:ZoneSplitter","AirLoopHVAC:OutdoorAirSystem","OAMixerOutdoorAirStreamNode","OutdoorAir:NodeList","OutdoorAir:Node","Other"},"Component Object Type or Node Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Node Height",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,4 ) },
            {"AirflowNetwork:Distribution:Component:Leak", () => new IdfObject("AirflowNetwork:Distribution:Component:Leak",false,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AirflowNetworkComponentNames"},new List<string>{},new List<string>{}),new IdfField(true,"kg/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Mass Flow Coefficient",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0.5,1,"0.65",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Mass Flow Exponent",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,3 ) },
            {"AirflowNetwork:Distribution:Component:LeakageRatio", () => new IdfObject("AirflowNetwork:Distribution:Component:LeakageRatio",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AirflowNetworkComponentNames"},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Effective Leakage Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"Pa",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Pressure Difference",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0.5,1,"0.65",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Mass Flow Exponent",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"AirflowNetwork:Distribution:Component:Duct", () => new IdfObject("AirflowNetwork:Distribution:Component:Duct",false,IdfObjectFormat.NotSpecified,false,8,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AirflowNetworkComponentNames"},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Duct Length",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hydraulic Diameter",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cross Section Area",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.0009",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface Roughness",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient for Local Dynamic Loss Due to Fitting",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2-K",0,0,"0.943",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Transmittance Coefficient (U-Factor) for Duct Wall Construction",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m2",0,0,"0.001",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Overall Moisture Transmittance Coefficient from Air to Air",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outside Convection Coefficient",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inside Convection Coefficient",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,10 ) },
            {"AirflowNetwork:Distribution:Component:Fan", () => new IdfObject("AirflowNetwork:Distribution:Component:Fan",false,IdfObjectFormat.NotSpecified,false,2,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AirflowNetworkComponentNames"},new List<string>{},new List<string>{"Fans"}),new IdfField(false,"",0,0,"Fan:ConstantVolume",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fan:OnOff","Fan:ConstantVolume","Fan:VariableVolume","Fan:SystemModel"},"Supply Fan Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,2 ) },
            {"AirflowNetwork:Distribution:Component:Coil", () => new IdfObject("AirflowNetwork:Distribution:Component:Coil",false,IdfObjectFormat.NotSpecified,false,4,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AirflowNetworkComponentNames"},new List<string>{},new List<string>{"AFNCoilNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Cooling:DX:SingleSpeed","Coil:Cooling:DX:TwoSpeed","Coil:Heating:Fuel","Coil:Heating:Electric","Coil:Heating:DX:SingleSpeed","Coil:Cooling:Water","Coil:Heating:Water","Coil:Cooling:Water:DetailedGeometry","Coil:Cooling:DX:TwoStageWithHumidityControlMode","Coil:Cooling:DX:MultiSpeed","Coil:Heating:DX:MultiSpeed","Coil:Heating:Desuperheater"},"Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Path Length",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Path Hydraulic Diameter",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,4 ) },
            {"AirflowNetwork:Distribution:Component:HeatExchanger", () => new IdfObject("AirflowNetwork:Distribution:Component:HeatExchanger",false,IdfObjectFormat.NotSpecified,false,4,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"HeatExchanger Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AirflowNetworkComponentNames"},new List<string>{},new List<string>{"AFNHeatExchangerNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HeatExchanger:AirToAir:FlatPlate","HeatExchanger:AirToAir:SensibleAndLatent","HeatExchanger:Desiccant:BalancedFlow"},"HeatExchanger Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Path Length",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Path Hydraulic Diameter",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,4 ) },
            {"AirflowNetwork:Distribution:Component:TerminalUnit", () => new IdfObject("AirflowNetwork:Distribution:Component:TerminalUnit",false,IdfObjectFormat.NotSpecified,false,4,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Terminal Unit Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AirflowNetworkComponentNames"},new List<string>{},new List<string>{"AFNTerminalUnitNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"AirTerminal:SingleDuct:ConstantVolume:Reheat","AirTerminal:SingleDuct:VAV:Reheat"},"Terminal Unit Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Path Length",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Path Hydraulic Diameter",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,4 ) },
            {"AirflowNetwork:Distribution:Component:ConstantPressureDrop", () => new IdfObject("AirflowNetwork:Distribution:Component:ConstantPressureDrop",false,IdfObjectFormat.NotSpecified,false,2,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AirflowNetworkComponentNames"},new List<string>{},new List<string>{}),new IdfField(true,"Pa",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pressure Difference Across the Component",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,2 ) },
            {"AirflowNetwork:Distribution:Component:OutdoorAirFlow", () => new IdfObject("AirflowNetwork:Distribution:Component:OutdoorAirFlow",false,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AFNOutdoorAirFlowNames","AirflowNetworkComponentNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Mixer Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"OutdoorAirMixers"}),new IdfField(true,"kg/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Mass Flow Coefficient When No Outdoor Air Flow at Reference Conditions",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0.5,1,"0.65",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Mass Flow Exponent When No Outdoor Air Flow",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Crack Conditions",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ReferenceCrackConditions"})},false,5 ) },
            {"AirflowNetwork:Distribution:Component:ReliefAirFlow", () => new IdfObject("AirflowNetwork:Distribution:Component:ReliefAirFlow",false,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AFNReliefAirFlowNames","AirflowNetworkComponentNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Mixer Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"OutdoorAirMixers"}),new IdfField(true,"kg/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Mass Flow Coefficient When No Outdoor Air Flow at Reference Conditions",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0.5,1,"0.65",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Mass Flow Exponent When No Outdoor Air Flow",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Crack Conditions",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ReferenceCrackConditions"})},false,5 ) },
            {"AirflowNetwork:Distribution:Linkage", () => new IdfObject("AirflowNetwork:Distribution:Linkage",false,IdfObjectFormat.NotSpecified,false,4,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Node 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AirflowNetworkNodeAndZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Node 2 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AirflowNetworkNodeAndZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AirflowNetworkComponentNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"})},false,5 ) },
            {"AirflowNetwork:Distribution:DuctViewFactors", () => new IdfObject("AirflowNetwork:Distribution:DuctViewFactors",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Linkage Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Duct Surface Exposure Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Duct Surface Emittance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 1 View Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},true,43 ) },
            {"AirflowNetwork:OccupantVentilationControl", () => new IdfObject("AirflowNetwork:OccupantVentilationControl",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AirflowNetworkOccupantVentilationControlNames"},new List<string>{},new List<string>{}),new IdfField(false,"minutes",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Opening Time",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"minutes",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Closing Time",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Comfort Low Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"C",0,0,"10.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Comfort Temperature Boundary Point",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Comfort High Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"percent",0,100,"10.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Threshold for Persons Dissatisfied PPD",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Occupancy Check",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Opening Probability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Closing Probability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,10 ) },
            {"AirflowNetwork:IntraZone:Node", () => new IdfObject("AirflowNetwork:IntraZone:Node",false,IdfObjectFormat.NotSpecified,false,2,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AirflowNetworkNodeNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"RoomAir:Node:AirflowNetwork Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"RoomAirflowNetworkNodes"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AirFlowNetworkMultizoneZones"}),new IdfField(false,"m",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Node Height",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,4 ) },
            {"AirflowNetwork:IntraZone:Linkage", () => new IdfObject("AirflowNetwork:IntraZone:Linkage",false,IdfObjectFormat.NotSpecified,false,4,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AirflowNetwork LinkageNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Node 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AirflowNetworkNodeNames","ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Node 2 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AirflowNetworkNodeNames","ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AirflowNetworkComponentNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"AirflowNetwork:MultiZone:Surface Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SurfAndSubSurfNames"})},false,5 ) },
            {"Exterior:Lights", () => new IdfObject("Exterior:Lights",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ExteriorLightsNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Level",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ScheduleNameOnly","AstronomicalClock"},"Control Option",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"Exterior:FuelEquipment", () => new IdfObject("Exterior:FuelEquipment",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Electricity","Water","NaturalGas","PropaneGas","FuelOil#1","FuelOil#2","Diesel","Gasoline","Coal","OtherFuel1","OtherFuel2","Steam","DistrictHeating","DistrictCooling"},"Fuel Use Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Level",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"Exterior:WaterEquipment", () => new IdfObject("Exterior:WaterEquipment",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Water",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Water"},"Fuel Use Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Level",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"HVACTemplate:Thermostat", () => new IdfObject("HVACTemplate:Thermostat",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"CompactHVACThermostats"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Constant Heating Setpoint",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Constant Cooling Setpoint",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"HVACTemplate:Zone:IdealLoadsAirSystem", () => new IdfObject("HVACTemplate:Zone:IdealLoadsAirSystem",false,IdfObjectFormat.NotSpecified,false,26,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Template Thermostat Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CompactHVACThermostats"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"System Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",0,100,"50",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Heating Supply Air Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",-100,50,"13",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Cooling Supply Air Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kgWater/kgDryAir",0,0,"0.0156",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Heating Supply Air Humidity Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kgWater/kgDryAir",0,0,"0.0077",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Cooling Supply Air Humidity Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"NoLimit",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"NoLimit","LimitFlowRate","LimitCapacity","LimitFlowRateAndCapacity"},"Heating Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Heating Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Sensible Heating Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"NoLimit",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"NoLimit","LimitFlowRate","LimitCapacity","LimitFlowRateAndCapacity"},"Cooling Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Cooling Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Total Cooling Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"ConstantSensibleHeatRatio",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ConstantSensibleHeatRatio","Humidistat","None","ConstantSupplyHumidityRatio"},"Dehumidification Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Sensible Heat Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent",0,100,"60.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dehumidification Setpoint",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","Humidistat","ConstantSupplyHumidityRatio"},"Humidification Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent",0,100,"30.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidification Setpoint",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","Flow/Person","Flow/Zone","Flow/Area","Sum","Maximum","DetailedSpecification"},"Outdoor Air Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.00944",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate per Person",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-m2",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate per Zone Floor Area",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate per Zone",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Outdoor Air Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationOutdoorAirNames"}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","OccupancySchedule","CO2Setpoint"},"Demand Controlled Ventilation Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"NoEconomizer",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"NoEconomizer","DifferentialDryBulb","DifferentialEnthalpy"},"Outdoor Air Economizer Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","Sensible","Enthalpy"},"Heat Recovery Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.70",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sensible Heat Recovery Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.65",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Latent Heat Recovery Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,30 ) },
            {"HVACTemplate:Zone:BaseboardHeat", () => new IdfObject("HVACTemplate:Zone:BaseboardHeat",false,IdfObjectFormat.NotSpecified,false,11,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Template Thermostat Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CompactHVACThermostats"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Heating Sizing Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"HotWater",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HotWater","Electric"},"Baseboard Heating Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Baseboard Heating Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Baseboard Heating Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dedicated Outdoor Air System Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HVACTemplateDOASSystems"}),new IdfField(false,"",0,0,"Flow/Person",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Flow/Person","Flow/Zone","Flow/Area","Sum","Maximum","DetailedSpecification"},"Outdoor Air Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.00944",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate per Person",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-m2",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate per Zone Floor Area",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate per Zone",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Outdoor Air Object name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationOutdoorAirNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Zone Air Distribution Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationZoneAirDistributionNames"})},false,13 ) },
            {"HVACTemplate:Zone:FanCoil", () => new IdfObject("HVACTemplate:Zone:FanCoil",false,IdfObjectFormat.NotSpecified,false,34,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Template Thermostat Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CompactHVACThermostats"}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Maximum Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Heating Sizing Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Cooling Sizing Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Flow/Person",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Flow/Person","Flow/Zone","Flow/Area","Sum","Maximum","DetailedSpecification"},"Outdoor Air Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.00944",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate per Person",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-m2",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate per Zone Floor Area",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate per Zone",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"System Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,1,"0.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Total Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"75",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Delta Pressure",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Motor Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Motor in Air Stream Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ChilledWater",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ChilledWater","ChilledWaterDetailedFlatModel","HeatExchangerAssistedChilledWater"},"Cooling Coil Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",0,0,"14.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Design Setpoint",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"HotWater",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HotWater","Electric"},"Heating Coil Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",0,0,"50.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Design Setpoint",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dedicated Outdoor Air System Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HVACTemplateDOASSystems"}),new IdfField(false,"",0,0,"SupplyAirTemperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SupplyAirTemperature","TemperatureDifference"},"Zone Cooling Design Supply Air Temperature Input Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"11.11",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Cooling Design Supply Air Temperature Difference",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SupplyAirTemperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SupplyAirTemperature","TemperatureDifference"},"Zone Heating Design Supply Air Temperature Input Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"30.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Heating Design Supply Air Temperature Difference",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Outdoor Air Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationOutdoorAirNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Zone Air Distribution Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationZoneAirDistributionNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ConstantFanVariableFlow","CyclingFan","VariableFanVariableFlow","VariableFanConstantFlow","MultiSpeedFan","ASHRAE90VariableFan"},"Capacity Control Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.33",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Speed Supply Air Flow Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.66",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Medium Speed Supply Air Flow Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HotWater","Electric","None"},"Baseboard Heating Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Baseboard Heating Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Baseboard Heating Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,34 ) },
            {"HVACTemplate:Zone:PTAC", () => new IdfObject("HVACTemplate:Zone:PTAC",false,IdfObjectFormat.NotSpecified,false,40,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Template Thermostat Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CompactHVACThermostats"}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"No Load Supply Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Heating Sizing Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Cooling Sizing Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Flow/Person",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Flow/Person","Flow/Zone","Flow/Area","Sum","Maximum","DetailedSpecification"},"Outdoor Air Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.00944",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate per Person",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-m2",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate per Zone Floor Area",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate per Zone",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"System Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Operating Mode Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"DrawThrough",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"BlowThrough","DrawThrough"},"Supply Fan Placement",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Total Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"75",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Delta Pressure",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Motor Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SingleSpeedDX",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SingleSpeedDX"},"Cooling Coil Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Gross Rated Total Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0.5,1,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Gross Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Gross Rated Cooling COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Electric",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Electric","HotWater","Gas"},"Heating Coil Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gas Heating Coil Efficiency",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gas Heating Coil Parasitic Electric Load",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dedicated Outdoor Air System Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HVACTemplateDOASSystems"}),new IdfField(false,"",0,0,"SupplyAirTemperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SupplyAirTemperature","TemperatureDifference"},"Zone Cooling Design Supply Air Temperature Input Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"14.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Cooling Design Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"11.11",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Cooling Design Supply Air Temperature Difference",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SupplyAirTemperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SupplyAirTemperature","TemperatureDifference"},"Zone Heating Design Supply Air Temperature Input Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"50.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Heating Design Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"30.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Heating Design Supply Air Temperature Difference",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Outdoor Air Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationOutdoorAirNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Zone Air Distribution Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationZoneAirDistributionNames"}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HotWater","Electric","None"},"Baseboard Heating Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Baseboard Heating Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Baseboard Heating Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","SingleZoneVAV"},"Capacity Control Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,40 ) },
            {"HVACTemplate:Zone:PTHP", () => new IdfObject("HVACTemplate:Zone:PTHP",false,IdfObjectFormat.NotSpecified,false,50,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Template Thermostat Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CompactHVACThermostats"}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"No Load Supply Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Heating Sizing Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Cooling Sizing Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Flow/Person",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Flow/Person","Flow/Zone","Flow/Area","Sum","Maximum","DetailedSpecification"},"Outdoor Air Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.00944",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate per Person",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-m2",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate per Zone Floor Area",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate per Zone",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"System Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Operating Mode Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"DrawThrough",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"BlowThrough","DrawThrough"},"Supply Fan Placement",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Total Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"75",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Delta Pressure",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Motor Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SingleSpeedDX",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SingleSpeedDX"},"Cooling Coil Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Gross Rated Total Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0.5,1,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Gross Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Gross Rated COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SingleSpeedDXHeatPump",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SingleSpeedDXHeatPump"},"Heat Pump Heating Coil Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Pump Heating Coil Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Pump Heating Coil Gross Rated Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"2.75",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Pump Heating Coil Gross Rated COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",-20,0,"-8.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Pump Heating Minimum Outdoor Dry-Bulb Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,7.22,"5.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Pump Defrost Maximum Outdoor Dry-Bulb Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ReverseCycle",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ReverseCycle","Resistive"},"Heat Pump Defrost Strategy",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Timed",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Timed","OnDemand"},"Heat Pump Defrost Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.058333",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Pump Defrost Time Period Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Electric",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Electric","Gas","HotWater"},"Supplemental Heating Coil Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supplemental Heating Coil Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supplemental Heating Coil Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,21,"21.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supplemental Heating Coil Maximum Outdoor Dry-Bulb Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supplemental Gas Heating Coil Efficiency",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supplemental Gas Heating Coil Parasitic Electric Load",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dedicated Outdoor Air System Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HVACTemplateDOASSystems"}),new IdfField(false,"",0,0,"SupplyAirTemperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SupplyAirTemperature","TemperatureDifference"},"Zone Cooling Design Supply Air Temperature Input Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"14.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Cooling Design Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"11.11",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Cooling Design Supply Air Temperature Difference",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SupplyAirTemperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SupplyAirTemperature","TemperatureDifference"},"Zone Heating Design Supply Air Temperature Input Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"50.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Heating Design Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"30.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Heating Design Supply Air Temperature Difference",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Outdoor Air Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationOutdoorAirNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Zone Air Distribution Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationZoneAirDistributionNames"}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HotWater","Electric","None"},"Baseboard Heating Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Baseboard Heating Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Baseboard Heating Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","SingleZoneVAV"},"Capacity Control Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,50 ) },
            {"HVACTemplate:Zone:WaterToAirHeatPump", () => new IdfObject("HVACTemplate:Zone:WaterToAirHeatPump",false,IdfObjectFormat.NotSpecified,false,44,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Template Thermostat Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CompactHVACThermostats"}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"No Load Supply Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Heating Sizing Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Cooling Sizing Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Flow/Person",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Flow/Person","Flow/Zone","Flow/Area","Sum","Maximum","DetailedSpecification"},"Outdoor Air Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.00944",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate per Person",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-m2",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate per Zone Floor Area",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate per Zone",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"System Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Operating Mode Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"DrawThrough",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"BlowThrough","DrawThrough"},"Supply Fan Placement",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Total Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"75",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Delta Pressure",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Motor Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Coil:Cooling:WaterToAirHeatPump:EquationFit",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Cooling:WaterToAirHeatPump:EquationFit"},"Cooling Coil Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Gross Rated Total Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0.5,1,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Gross Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Gross Rated COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Coil:Heating:WaterToAirHeatPump:EquationFit",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:WaterToAirHeatPump:EquationFit"},"Heat Pump Heating Coil Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Pump Heating Coil Gross Rated Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"4.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Pump Heating Coil Gross Rated COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supplemental Heating Coil Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supplemental Heating Coil Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"cycles/hr",0,5,"2.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Cycling Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"s",0,500,"60.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Pump Time Constant",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0.05,"0.01",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of On-Cycle Power Use",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"s",0,0,"60",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Pump Fan Delay Time",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dedicated Outdoor Air System Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HVACTemplateDOASSystems"}),new IdfField(false,"",0,0,"Electric",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Electric","HotWater"},"Supplemental Heating Coil Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SupplyAirTemperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SupplyAirTemperature","TemperatureDifference"},"Zone Cooling Design Supply Air Temperature Input Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"14.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Cooling Design Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"11.11",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Cooling Design Supply Air Temperature Difference",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SupplyAirTemperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SupplyAirTemperature","TemperatureDifference"},"Zone Heating Design Supply Air Temperature Input Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"50.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Heating Design Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"30.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Heating Design Supply Air Temperature Difference",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Cycling",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Constant","Cycling","ConstantOnDemand"},"Heat Pump Coil Water Flow Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Outdoor Air Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationOutdoorAirNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Zone Air Distribution Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationZoneAirDistributionNames"}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HotWater","Electric","None"},"Baseboard Heating Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Baseboard Heating Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Baseboard Heating Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,44 ) },
            {"HVACTemplate:Zone:VRF", () => new IdfObject("HVACTemplate:Zone:VRF",false,IdfObjectFormat.NotSpecified,false,44,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Template VRF System Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CompactHVACSystemVRF"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Template Thermostat Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CompactHVACThermostats"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Heating Sizing Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Cooling Sizing Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",1,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Total Heating Capacity Sizing Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"No Cooling Supply Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"No Heating Supply Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Outdoor Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Outdoor Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"No Load Outdoor Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Flow/Person",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Flow/Person","Flow/Zone","Flow/Area","Sum","Maximum","DetailedSpecification"},"Outdoor Air Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.00944",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate per Person",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-m2",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate per Zone Floor Area",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate per Zone",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Outdoor Air Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationOutdoorAirNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Zone Air Distribution Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationZoneAirDistributionNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"System Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Operating Mode Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"BlowThrough",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"BlowThrough","DrawThrough"},"Supply Air Fan placement",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Total Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"75",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Delta Pressure",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Motor Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"VariableRefrigerantFlowDX",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"VariableRefrigerantFlowDX","None"},"Cooling Coil Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Gross Rated Total Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0.5,1,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Gross Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"VariableRefrigerantFlowDX",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"VariableRefrigerantFlowDX","None"},"Heat Pump Heating Coil Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Pump Heating Coil Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Pump Heating Coil Gross Rated Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Terminal Unit On Parasitic Electric Energy Use",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Terminal Unit Off Parasitic Electric Energy Use",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dedicated Outdoor Air System Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HVACTemplateDOASSystems"}),new IdfField(false,"",0,0,"SupplyAirTemperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SupplyAirTemperature","TemperatureDifference"},"Zone Cooling Design Supply Air Temperature Input Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"14.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Cooling Design Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"11.11",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Cooling Design Supply Air Temperature Difference",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SupplyAirTemperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SupplyAirTemperature","TemperatureDifference"},"Zone Heating Design Supply Air Temperature Input Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"50.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Heating Design Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"30.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Heating Design Supply Air Temperature Difference",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HotWater","Electric","None"},"Baseboard Heating Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Baseboard Heating Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Baseboard Heating Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,44 ) },
            {"HVACTemplate:Zone:Unitary", () => new IdfObject("HVACTemplate:Zone:Unitary",false,IdfObjectFormat.NotSpecified,false,21,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Template Unitary System Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CompactHVACSystemUnitary"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Template Thermostat Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CompactHVACThermostats"}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Maximum Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Heating Sizing Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Cooling Sizing Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Flow/Person",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Flow/Person","Flow/Zone","Flow/Area","Sum","Maximum","DetailedSpecification"},"Outdoor Air Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.00944",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate per Person",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-m2",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate per Zone Floor Area",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate per Zone",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Plenum Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Plenum Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HotWater","Electric","None"},"Baseboard Heating Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Baseboard Heating Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Baseboard Heating Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SystemSupplyAirTemperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SupplyAirTemperature","TemperatureDifference","SystemSupplyAirTemperature"},"Zone Cooling Design Supply Air Temperature Input Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"12.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Cooling Design Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"11.11",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Cooling Design Supply Air Temperature Difference",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SystemSupplyAirTemperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SupplyAirTemperature","TemperatureDifference","SystemSupplyAirTemperature"},"Zone Heating Design Supply Air Temperature Input Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"50.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Heating Design Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"30.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Heating Design Supply Air Temperature Difference",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Outdoor Air Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationOutdoorAirNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Zone Air Distribution Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationZoneAirDistributionNames"})},false,23 ) },
            {"HVACTemplate:Zone:VAV", () => new IdfObject("HVACTemplate:Zone:VAV",false,IdfObjectFormat.NotSpecified,false,32,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Template VAV System Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CompactHVACSystemVAV"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Template Thermostat Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CompactHVACThermostats"}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Maximum Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Heating Sizing Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Cooling Sizing Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Constant",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Constant","FixedFlowRate","Scheduled"},"Zone Minimum Air Flow Input Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Constant Minimum Air Flow Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fixed Minimum Air Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Air Flow Fraction Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"Flow/Person",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Flow/Person","Flow/Zone","Flow/Area","Sum","Maximum","DetailedSpecification"},"Outdoor Air Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.00944",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate per Person",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-m2",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate per Zone Floor Area",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate per Zone",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HotWater","Electric","Gas","None"},"Reheat Coil Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reheat Coil Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"Reverse",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Normal","Reverse"},"Damper Heating Action",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-m2",0,0,null,true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Flow per Zone Floor Area During Reheat",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Flow Fraction During Reheat",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Reheat Air Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Outdoor Air Object Name for Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationOutdoorAirNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Plenum Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Plenum Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HotWater","Electric","None"},"Baseboard Heating Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Baseboard Heating Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Baseboard Heating Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SystemSupplyAirTemperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SupplyAirTemperature","TemperatureDifference","SystemSupplyAirTemperature"},"Zone Cooling Design Supply Air Temperature Input Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"12.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Cooling Design Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"11.11",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Cooling Design Supply Air Temperature Difference",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SupplyAirTemperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SupplyAirTemperature","TemperatureDifference"},"Zone Heating Design Supply Air Temperature Input Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"50.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Heating Design Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"30.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Heating Design Supply Air Temperature Difference",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Outdoor Air Object Name for Sizing",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationOutdoorAirNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Zone Air Distribution Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationZoneAirDistributionNames"})},false,34 ) },
            {"HVACTemplate:Zone:VAV:FanPowered", () => new IdfObject("HVACTemplate:Zone:VAV:FanPowered",false,IdfObjectFormat.NotSpecified,false,31,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Template VAV System Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CompactHVACSystemVAV"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Template Thermostat Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CompactHVACThermostats"}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Primary Supply Air Maximum Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Heating Sizing Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Cooling Sizing Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Primary Supply Air Minimum Flow Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Secondary Supply Air Maximum Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Parallel",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Series","Parallel","SeriesFromPlenum","ParallelFromPlenum"},"Flow Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Parallel Fan On Flow Fraction",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Flow/Person",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Flow/Person","Flow/Zone","Flow/Area","Sum","Maximum","DetailedSpecification"},"Outdoor Air Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.00944",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate per Person",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-m2",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate per Zone Floor Area",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate per Zone",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Electric",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HotWater","Electric","Gas"},"Reheat Coil Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reheat Coil Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,1,"0.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Total Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"1000",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Delta Pressure",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Motor Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Plenum Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Plenum Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HotWater","Electric","None"},"Baseboard Heating Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Baseboard Heating Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Baseboard Heating Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SystemSupplyAirTemperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SupplyAirTemperature","TemperatureDifference","SystemSupplyAirTemperature"},"Zone Cooling Design Supply Air Temperature Input Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"12.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Cooling Design Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"11.11",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Cooling Design Supply Air Temperature Difference",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SupplyAirTemperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SupplyAirTemperature","TemperatureDifference"},"Zone Heating Design Supply Air Temperature Input Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"50.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Heating Design Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"30.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Heating Design Supply Air Temperature Difference",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone PIU Fan Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Outdoor Air Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationOutdoorAirNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Zone Air Distribution Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationZoneAirDistributionNames"})},false,33 ) },
            {"HVACTemplate:Zone:VAV:HeatAndCool", () => new IdfObject("HVACTemplate:Zone:VAV:HeatAndCool",false,IdfObjectFormat.NotSpecified,false,27,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Template VAV System Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CompactHVACSystemVAV"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Template Thermostat Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CompactHVACThermostats"}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Maximum Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Heating Sizing Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Cooling Sizing Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Constant Minimum Air Flow Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Flow/Person",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Flow/Person","Flow/Zone","Flow/Area","Sum","Maximum","DetailedSpecification"},"Outdoor Air Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.00944",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate per Person",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-m2",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate per Zone Floor Area",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate per Zone",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Outdoor Air Object Name for Sizing",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationOutdoorAirNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Zone Air Distribution Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationZoneAirDistributionNames"}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HotWater","Electric","Gas","None"},"Reheat Coil Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reheat Coil Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Reheat Air Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Plenum Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Plenum Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HotWater","Electric","None"},"Baseboard Heating Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Baseboard Heating Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Baseboard Heating Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SystemSupplyAirTemperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SupplyAirTemperature","TemperatureDifference","SystemSupplyAirTemperature"},"Zone Cooling Design Supply Air Temperature Input Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"12.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Cooling Design Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"11.11",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Cooling Design Supply Air Temperature Difference",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SupplyAirTemperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SupplyAirTemperature","TemperatureDifference"},"Zone Heating Design Supply Air Temperature Input Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"50.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Heating Design Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"30.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Heating Design Supply Air Temperature Difference",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,27 ) },
            {"HVACTemplate:Zone:ConstantVolume", () => new IdfObject("HVACTemplate:Zone:ConstantVolume",false,IdfObjectFormat.NotSpecified,false,24,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"HVACTemplateConstantVolumeZones"},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Template Constant Volume System Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CompactHVACSystemConstantVolume"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Template Thermostat Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CompactHVACThermostats"}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Maximum Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Heating Sizing Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Cooling Sizing Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Flow/Person",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Flow/Person","Flow/Zone","Flow/Area","Sum","Maximum","DetailedSpecification"},"Outdoor Air Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.00944",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate per Person",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-m2",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate per Zone Floor Area",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate per Zone",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Outdoor Air Object name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationOutdoorAirNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Zone Air Distribution Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationZoneAirDistributionNames"}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HotWater","Electric","Gas","None"},"Reheat Coil Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reheat Coil Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Reheat Air Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Plenum Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Plenum Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HotWater","Electric","None"},"Baseboard Heating Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Baseboard Heating Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Baseboard Heating Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SystemSupplyAirTemperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SupplyAirTemperature","TemperatureDifference","SystemSupplyAirTemperature"},"Zone Cooling Design Supply Air Temperature Input Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"12.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Cooling Design Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"11.11",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Cooling Design Supply Air Temperature Difference",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SupplyAirTemperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SupplyAirTemperature","TemperatureDifference"},"Zone Heating Design Supply Air Temperature Input Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"50.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Heating Design Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"30.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Heating Design Supply Air Temperature Difference",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,26 ) },
            {"HVACTemplate:Zone:DualDuct", () => new IdfObject("HVACTemplate:Zone:DualDuct",false,IdfObjectFormat.NotSpecified,false,26,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Template Dual Duct System Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CompactHVACSystemDualDuct"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Template Thermostat Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CompactHVACThermostats"}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Maximum Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Heating Sizing Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Cooling Sizing Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Minimum Air Flow Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Flow/Person",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Flow/Person","Flow/Zone","Flow/Area","Sum","Maximum","DetailedSpecification"},"Outdoor Air Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.00944",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate per Person",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-m2",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate per Zone Floor Area",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate per Zone",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Outdoor Air Object Name for Sizing",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationOutdoorAirNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Zone Air Distribution Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationZoneAirDistributionNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Outdoor Air Object Name for Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationOutdoorAirNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cold Supply Plenum Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hot Supply Plenum Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Plenum Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HotWater","Electric","None"},"Baseboard Heating Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Baseboard Heating Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Baseboard Heating Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SystemSupplyAirTemperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SupplyAirTemperature","TemperatureDifference","SystemSupplyAirTemperature"},"Zone Cooling Design Supply Air Temperature Input Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"12.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Cooling Design Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"11.11",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Cooling Design Supply Air Temperature Difference",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SystemSupplyAirTemperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SupplyAirTemperature","TemperatureDifference","SystemSupplyAirTemperature"},"Zone Heating Design Supply Air Temperature Input Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"50.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Heating Design Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"30.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Heating Design Supply Air Temperature Difference",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,26 ) },
            {"HVACTemplate:System:VRF", () => new IdfObject("HVACTemplate:System:VRF",false,IdfObjectFormat.NotSpecified,false,39,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"CompactHVACSystemVRF","HVACTemplateSystems"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"System Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gross Rated Total Cooling Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.3",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gross Rated Cooling COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"-6.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Temperature in Cooling Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"43.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Temperature in Cooling Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gross Rated Heating Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",1,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Heating Capacity Sizing Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.4",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gross Rated Heating COP",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"-20.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Temperature in Heating Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"16.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Temperature in Heating Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"0.15",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Heat Pump Part-Load Ratio",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name for Master Thermostat Location",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,"MasterThermostatPriority",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"LoadPriority","ZonePriority","ThermostatOffsetPriority","MasterThermostatPriority","Scheduled"},"Master Thermostat Priority Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermostat Priority Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"No","Yes"},"Heat Pump Waste Heat Recovery",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"30.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equivalent Piping Length used for Piping Correction Factor in Cooling Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"10.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Vertical Height used for Piping Correction Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"30.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equivalent Piping Length used for Piping Correction Factor in Heating Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"33.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Crankcase Heater Power per Compressor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Compressors",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"0.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ratio of Compressor Size to Total Compressor Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"5.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Dry-bulb Temperature for Crankcase Heater",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Resistive",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ReverseCycle","Resistive"},"Defrost Strategy",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Timed",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Timed","OnDemand"},"Defrost Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"0.058333",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Defrost Time Period Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Resistive Defrost Heater Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"5.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Dry-bulb Temperature for Defrost Operation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"AirCooled",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"AirCooled","EvaporativelyCooled","WaterCooled"},"Condenser Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Condenser Volume Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporative Condenser Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporative Condenser Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporative Condenser Pump Rated Power Consumption",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",2,0,"2.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Setpoint Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Operating Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"Electricity",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Electricity","NaturalGas","PropaneGas","Diesel","Gasoline","FuelOil#1","FuelOil#2","OtherFuel1","OtherFuel2"},"Fuel Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"-15",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Temperature in Heat Recovery Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"45",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Temperature in Heat Recovery Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,39 ) },
            {"HVACTemplate:System:Unitary", () => new IdfObject("HVACTemplate:System:Unitary",false,IdfObjectFormat.NotSpecified,false,51,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"CompactHVACSystemUnitary","HVACTemplateSystems"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"System Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Zone or Thermostat Location Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Maximum Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Operating Mode Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,1,"0.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Total Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"600",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Delta Pressure",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Motor Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Motor in Air Stream Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SingleSpeedDX",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SingleSpeedDX","None"},"Cooling Coil Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",0,0,"12.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Design Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Gross Rated Total Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0.5,1,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Gross Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Gross Rated COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Electric","Gas","HotWater"},"Heating Coil Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",0,0,"50.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Design Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gas Heating Coil Efficiency",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gas Heating Coil Parasitic Electric Load",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Air Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"NoEconomizer",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"FixedDryBulb","FixedEnthalpy","DifferentialDryBulb","DifferentialEnthalpy","FixedDewPointAndDryBulb","ElectronicEnthalpy","DifferentialDryBulbAndEnthalpy","NoEconomizer"},"Economizer Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"NoLockout",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"NoLockout","LockoutWithHeating","LockoutWithCompressor"},"Economizer Lockout",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Economizer Upper Temperature Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Economizer Lower Temperature Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Economizer Upper Enthalpy Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Economizer Maximum Limit Dewpoint Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Plenum Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Plenum Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,"BlowThrough",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"BlowThrough","DrawThrough"},"Supply Fan Placement",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"StayOff",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"StayOff","CycleOnAny","CycleOnControlZone"},"Night Cycle Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Night Cycle Control Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","Sensible","Enthalpy"},"Heat Recovery Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.70",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sensible Heat Recovery Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.65",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Latent Heat Recovery Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","CoolReheatHeatingCoil","CoolReheatDesuperheater"},"Dehumidification Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent",0,100,"60.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dehumidification Setpoint",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","ElectricSteam"},"Humidifier Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"m3/s",0,0,"0.000001",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Rated Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Rated Electric Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Control Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"percent",0,100,"30.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Setpoint",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Return Fan",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Fan Total Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"500",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Fan Delta Pressure",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Fan Motor Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Fan Motor in Air Stream Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,51 ) },
            {"HVACTemplate:System:UnitaryHeatPump:AirToAir", () => new IdfObject("HVACTemplate:System:UnitaryHeatPump:AirToAir",false,IdfObjectFormat.NotSpecified,false,61,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"CompactHVACSystemUnitary","HVACTemplateSystems"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"System Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Zone or Thermostat Location Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"No Load Supply Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Operating Mode Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"BlowThrough",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"BlowThrough","DrawThrough"},"Supply Fan Placement",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Total Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"600",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Delta Pressure",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Motor Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Motor in Air Stream Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SingleSpeedDX",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SingleSpeedDX"},"Cooling Coil Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",0,0,"12.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Design Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Gross Rated Total Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0.5,1,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Gross Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Gross Rated COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SingleSpeedDXHeatPump",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SingleSpeedDXHeatPump"},"Heat Pump Heating Coil Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Pump Heating Coil Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",0,0,"50.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Design Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Pump Heating Coil Gross Rated Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"2.75",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Pump Heating Coil Rated COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",-20,0,"-8.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Pump Heating Minimum Outdoor Dry-Bulb Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,7.22,"5.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Pump Defrost Maximum Outdoor Dry-Bulb Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ReverseCycle",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ReverseCycle","Resistive"},"Heat Pump Defrost Strategy",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Timed",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Timed","OnDemand"},"Heat Pump Defrost Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.058333",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Pump Defrost Time Period Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Electric",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Electric","Gas","HotWater"},"Supplemental Heating Coil Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supplemental Heating Coil Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supplemental Heating Coil Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,21,"21.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supplemental Heating Coil Maximum Outdoor Dry-Bulb Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supplemental Gas Heating Coil Efficiency",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supplemental Gas Heating Coil Parasitic Electric Load",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Air Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"NoEconomizer",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"FixedDryBulb","FixedEnthalpy","DifferentialDryBulb","DifferentialEnthalpy","FixedDewPointAndDryBulb","ElectronicEnthalpy","DifferentialDryBulbAndEnthalpy","NoEconomizer"},"Economizer Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"NoLockout",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"NoLockout","LockoutWithHeating","LockoutWithCompressor"},"Economizer Lockout",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Economizer Maximum Limit Dry-Bulb Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Economizer Maximum Limit Enthalpy",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Economizer Maximum Limit Dewpoint Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Economizer Minimum Limit Dry-Bulb Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Plenum Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Plenum Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,"StayOff",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"StayOff","CycleOnAny","CycleOnControlZone"},"Night Cycle Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Night Cycle Control Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","Sensible","Enthalpy"},"Heat Recovery Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.70",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sensible Heat Recovery Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.65",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Latent Heat Recovery Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","ElectricSteam"},"Humidifier Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"m3/s",0,0,"0.000001",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Rated Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Rated Electric Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Control Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"percent",0,100,"30.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Setpoint",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Return Fan",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Fan Total Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"500",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Fan Delta Pressure",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Fan Motor Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Fan Motor in Air Stream Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,61 ) },
            {"HVACTemplate:System:UnitarySystem", () => new IdfObject("HVACTemplate:System:UnitarySystem",false,IdfObjectFormat.NotSpecified,false,71,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"CompactHVACSystemUnitary","HVACTemplateSystems"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"System Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"Load",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Load","SetPoint"},"Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Zone or Thermostat Location Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"No Load Supply Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Operating Mode Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"BlowThrough",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"BlowThrough","DrawThrough"},"Supply Fan Placement",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Total Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"600",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Delta Pressure",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Motor Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Motor in Air Stream Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SingleSpeedDX",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SingleSpeedDX","TwoSpeedDX","MultiSpeedDX","TwoStageDX","TwoStageHumidityControlDX","HeatExchangerAssistedDX","SingleSpeedDXWaterCooled","ChilledWater","ChilledWaterDetailedFlatModel","HeatExchangerAssistedChilledWater","None"},"Cooling Coil Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,4,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Speeds for Cooling",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",0,0,"12.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Design Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"DX Cooling Coil Gross Rated Total Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0.5,1,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"DX Cooling Coil Gross Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"DX Cooling Coil Gross Rated COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Gas",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Electric","Gas","HotWater","SingleSpeedDXHeatPumpAirSource","MultiSpeedDXHeatPumpAirSource","SingleSpeedDXHeatPumpWaterSource","MultiStageElectric","MultiStageGas","None"},"Heating Coil Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,4,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Speeds or Stages for Heating",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",0,0,"50.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Design Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Gross Rated Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gas Heating Coil Efficiency",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gas Heating Coil Parasitic Electric Load",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"2.75",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Pump Heating Coil Gross Rated COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",-20,0,"-8.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Pump Heating Minimum Outdoor Dry-Bulb Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,7.22,"5.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Pump Defrost Maximum Outdoor Dry-Bulb Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ReverseCycle",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ReverseCycle","Resistive"},"Heat Pump Defrost Strategy",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Timed",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Timed","OnDemand"},"Heat Pump Defrost Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.058333",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Pump Defrost Time Period Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Electric","Gas","HotWater","DesuperHeater","None"},"Supplemental Heating or Reheat Coil Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supplemental Heating or Reheat Coil Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supplemental Heating or Reheat Coil Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,21,"21.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supplemental Heating or Reheat Coil Maximum Outdoor Dry-Bulb Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supplemental Gas Heating or Reheat Coil Efficiency",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supplemental Gas Heating or Reheat Coil Parasitic Electric Load",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Air Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"NoEconomizer",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"FixedDryBulb","FixedEnthalpy","DifferentialDryBulb","DifferentialEnthalpy","FixedDewPointAndDryBulb","ElectronicEnthalpy","DifferentialDryBulbAndEnthalpy","NoEconomizer"},"Economizer Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"NoLockout",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"NoLockout","LockoutWithHeating","LockoutWithCompressor"},"Economizer Lockout",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Economizer Maximum Limit Dry-Bulb Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Economizer Maximum Limit Enthalpy",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Economizer Maximum Limit Dewpoint Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Economizer Minimum Limit Dry-Bulb Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Plenum Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Plenum Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","Sensible","Enthalpy"},"Heat Recovery Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.70",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sensible Heat Recovery Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.65",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Latent Heat Recovery Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Plate",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Plate","Rotary"},"Heat Recovery Heat Exchanger Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","ExhaustAirRecirculation","ExhaustOnly","MinimumExhaustTemperature"},"Heat Recovery Frost Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","CoolReheat","Multimode"},"Dehumidification Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent",0,100,"60.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dehumidification Relative Humidity Setpoint",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dehumidification Relative Humidity Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","ElectricSteam"},"Humidifier Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"m3/s",0,0,"0.000001",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Rated Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Rated Electric Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Control Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"percent",0,100,"30.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Relative Humidity Setpoint",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Relative Humidity Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"NonCoincident",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coincident","NonCoincident"},"Sizing Option",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Return Fan",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Fan Total Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"300",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Fan Delta Pressure",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Fan Motor Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Fan Motor in Air Stream Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,71 ) },
            {"HVACTemplate:System:VAV", () => new IdfObject("HVACTemplate:System:VAV",false,IdfObjectFormat.NotSpecified,false,61,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"CompactHVACSystemVAV","HVACTemplateSystems"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"System Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Maximum Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Minimum Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Total Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"1000",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Delta Pressure",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Motor Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Motor in Air Stream Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ChilledWater",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ChilledWater","ChilledWaterDetailedFlatModel"},"Cooling Coil Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",0,0,"12.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Design Setpoint",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HotWater","Electric","Gas","None"},"Heating Coil Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",0,0,"10.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Design Setpoint",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gas Heating Coil Efficiency",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gas Heating Coil Parasitic Electric Load",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HotWater","Electric","Gas","None"},"Preheat Coil Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Preheat Coil Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Preheat Coil Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",0,0,"7.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Preheat Coil Design Setpoint",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gas Preheat Coil Efficiency",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gas Preheat Coil Parasitic Electric Load",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ProportionalMinimum",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"FixedMinimum","ProportionalMinimum"},"Minimum Outdoor Air Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Air Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"NoEconomizer",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"FixedDryBulb","FixedEnthalpy","DifferentialDryBulb","DifferentialEnthalpy","FixedDewPointAndDryBulb","ElectronicEnthalpy","DifferentialDryBulbAndEnthalpy","NoEconomizer"},"Economizer Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"NoLockout",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"NoLockout"},"Economizer Lockout",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Economizer Upper Temperature Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Economizer Lower Temperature Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Economizer Upper Enthalpy Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Economizer Maximum Limit Dewpoint Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Plenum Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Plenum Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,"DrawThrough",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"DrawThrough","BlowThrough"},"Supply Fan Placement",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"InletVaneDampers",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"InletVaneDampers","OutletDampers","VariableSpeedMotor","ASHRAE90.1-2004AppendixG","VariableSpeedMotorPressureReset"},"Supply Fan Part-Load Power Coefficients",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"StayOff",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"StayOff","CycleOnAny","CycleOnControlZone","CycleOnAnyZoneFansOnly"},"Night Cycle Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Night Cycle Control Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","Sensible","Enthalpy"},"Heat Recovery Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.70",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sensible Heat Recovery Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.65",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Latent Heat Recovery Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","Warmest","OutdoorAirTemperatureReset","WarmestTemperatureFirst"},"Cooling Coil Setpoint Reset Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","OutdoorAirTemperatureReset"},"Heating Coil Setpoint Reset Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","CoolReheat"},"Dehumidification Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dehumidification Control Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"percent",0,100,"60.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dehumidification Setpoint",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","ElectricSteam"},"Humidifier Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"m3/s",0,0,"0.000001",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Rated Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Rated Electric Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Control Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"percent",0,100,"30.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Setpoint",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"NonCoincident",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coincident","NonCoincident"},"Sizing Option",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Return Fan",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Fan Total Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"500",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Fan Delta Pressure",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Fan Motor Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Fan Motor in Air Stream Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"InletVaneDampers",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"InletVaneDampers","OutletDampers","VariableSpeedMotor","ASHRAE90.1-2004AppendixG","VariableSpeedMotorPressureReset"},"Return Fan Part-Load Power Coefficients",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,61 ) },
            {"HVACTemplate:System:PackagedVAV", () => new IdfObject("HVACTemplate:System:PackagedVAV",false,IdfObjectFormat.NotSpecified,false,59,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"CompactHVACSystemVAV","HVACTemplateSystems"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"System Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Maximum Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Minimum Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"DrawThrough",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"DrawThrough","BlowThrough"},"Supply Fan Placement",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Total Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"1000",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Delta Pressure",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Motor Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Motor in Air Stream Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"TwoSpeedDX",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"TwoSpeedDX","TwoSpeedHumidControlDX"},"Cooling Coil Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",0,0,"12.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Design Setpoint",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Gross Rated Total Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0.5,1,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Gross Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Gross Rated COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HotWater","Electric","Gas","None"},"Heating Coil Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",0,0,"10.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Design Setpoint",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gas Heating Coil Efficiency",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gas Heating Coil Parasitic Electric Load",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ProportionalMinimum",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"FixedMinimum","ProportionalMinimum"},"Minimum Outdoor Air Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Air Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"NoEconomizer",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"FixedDryBulb","FixedEnthalpy","DifferentialDryBulb","DifferentialEnthalpy","FixedDewPointAndDryBulb","ElectronicEnthalpy","DifferentialDryBulbAndEnthalpy","NoEconomizer"},"Economizer Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"NoLockout",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"NoLockout","LockoutWithHeating","LockoutWithCompressor"},"Economizer Lockout",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Economizer Maximum Limit Dry-Bulb Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Economizer Maximum Limit Enthalpy",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Economizer Maximum Limit Dewpoint Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Economizer Minimum Limit Dry-Bulb Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Plenum Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Plenum Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,"InletVaneDampers",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"InletVaneDampers","OutletDampers","VariableSpeedMotor","ASHRAE90.1-2004AppendixG","VariableSpeedMotorPressureReset"},"Supply Fan Part-Load Power Coefficients",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"StayOff",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"StayOff","CycleOnAny","CycleOnControlZone","CycleOnAnyZoneFansOnly"},"Night Cycle Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Night Cycle Control Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","Sensible","Enthalpy"},"Heat Recovery Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.70",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sensible Heat Recovery Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.65",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Latent Heat Recovery Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","Warmest","OutdoorAirTemperatureReset","WarmestTemperatureFirst"},"Cooling Coil Setpoint Reset Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","OutdoorAirTemperatureReset"},"Heating Coil Setpoint Reset Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","CoolReheat"},"Dehumidification Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dehumidification Control Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"percent",0,100,"60.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dehumidification Setpoint",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","ElectricSteam"},"Humidifier Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"m3/s",0,0,"0.000001",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Rated Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Rated Electric Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Control Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"percent",0,100,"30.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Setpoint",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"NonCoincident",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coincident","NonCoincident"},"Sizing Option",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Return Fan",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Fan Total Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"500",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Fan Delta Pressure",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Fan Motor Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Fan Motor in Air Stream Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"InletVaneDampers",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"InletVaneDampers","OutletDampers","VariableSpeedMotor","ASHRAE90.1-2004AppendixG","VariableSpeedMotorPressureReset"},"Return Fan Part-Load Power Coefficients",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,59 ) },
            {"HVACTemplate:System:ConstantVolume", () => new IdfObject("HVACTemplate:System:ConstantVolume",false,IdfObjectFormat.NotSpecified,false,70,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"CompactHVACSystemConstantVolume","HVACTemplateSystems"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"System Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Maximum Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Total Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"600",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Delta Pressure",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Motor Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Motor in Air Stream Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"DrawThrough",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"DrawThrough","BlowThrough"},"Supply Fan Placement",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ChilledWater",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ChilledWater","ChilledWaterDetailedFlatModel","HeatExchangerAssistedChilledWater","None"},"Cooling Coil Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"FixedSetpoint",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"FixedSetpoint","Scheduled","OutdoorAirTemperatureReset","Warmest","ControlZone"},"Cooling Coil Setpoint Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Control Zone name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HVACTemplateConstantVolumeZones"}),new IdfField(false,"C",0,0,"12.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Design Setpoint Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",0,0,"15.6",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Setpoint at Outdoor Dry-Bulb Low",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"15.6",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Reset Outdoor Dry-Bulb Low",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"12.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Setpoint at Outdoor Dry-Bulb High",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"23.3",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Reset Outdoor Dry-Bulb High",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"HotWater",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HotWater","Electric","Gas","None"},"Heating Coil Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"FixedSetpoint",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"FixedSetpoint","Scheduled","OutdoorAirTemperatureReset","ControlZone"},"Heating Coil Setpoint Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Control Zone name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HVACTemplateConstantVolumeZones"}),new IdfField(false,"C",0,0,"10.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Design Setpoint",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",0,0,"15.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Setpoint at Outdoor Dry-Bulb Low",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"7.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Reset Outdoor Dry-Bulb Low",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"12.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Setpoint at Outdoor Dry-Bulb High",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"12.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Reset Outdoor Dry-Bulb High",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gas Heating Coil Efficiency",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gas Heating Coil Parasitic Electric Load",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HotWater","Electric","Gas","None"},"Preheat Coil Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Preheat Coil Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",0,0,"7.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Preheat Coil Design Setpoint",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Preheat Coil Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,1,"0.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gas Preheat Coil Efficiency",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gas Preheat Coil Parasitic Electric Load",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Air Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"NoEconomizer",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"FixedDryBulb","FixedEnthalpy","DifferentialDryBulb","DifferentialEnthalpy","FixedDewPointAndDryBulb","ElectronicEnthalpy","DifferentialDryBulbAndEnthalpy","NoEconomizer"},"Economizer Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Economizer Upper Temperature Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Economizer Lower Temperature Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Economizer Upper Enthalpy Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Economizer Maximum Limit Dewpoint Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Plenum Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Plenum Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,"StayOff",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"StayOff","CycleOnAny","CycleOnControlZone","CycleOnAnyZoneFansOnly"},"Night Cycle Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Night Cycle Control Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","Sensible","Enthalpy"},"Heat Recovery Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.70",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sensible Heat Recovery Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.65",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Latent Heat Recovery Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Plate",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Plate","Rotary"},"Heat Recovery Heat Exchanger Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","ExhaustAirRecirculation","ExhaustOnly","MinimumExhaustTemperature"},"Heat Recovery Frost Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","CoolReheat"},"Dehumidification Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dehumidification Control Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"percent",0,100,"60.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dehumidification Relative Humidity Setpoint",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dehumidification Relative Humidity Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","ElectricSteam"},"Humidifier Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"m3/s",0,0,"0.000001",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Rated Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Rated Electric Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Control Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"percent",0,100,"30.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Relative Humidity Setpoint",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Relative Humidity Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Return Fan",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Fan Total Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"300",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Fan Delta Pressure",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Fan Motor Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Fan Motor in Air Stream Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,70 ) },
            {"HVACTemplate:System:DualDuct", () => new IdfObject("HVACTemplate:System:DualDuct",false,IdfObjectFormat.NotSpecified,false,91,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"CompactHVACSystemDualDuct","HVACTemplateSystems"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"System Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"SingleFanConstantVolume",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SingleFanConstantVolume","DualFanConstantVolume","SingleFanVariableVolume","DualFanVariableVolume"},"System Configuration Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Main Supply Fan Maximum Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Main Supply Fan Minimum Flow Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Main Supply Fan Total Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"1000",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Main Supply Fan Delta Pressure",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Main Supply Fan Motor Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Main Supply Fan Motor in Air Stream Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"InletVaneDampers",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"InletVaneDampers","OutletDampers","VariableSpeedMotor","ASHRAE90.1-2004AppendixG","VariableSpeedMotorPressureReset"},"Main Supply Fan Part-Load Power Coefficients",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cold Duct Supply Fan Maximum Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cold Duct Supply Fan Minimum Flow Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cold Duct Supply Fan Total Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"1000",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cold Duct Supply Fan Delta Pressure",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cold Duct Supply Fan Motor Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cold Duct Supply Fan Motor in Air Stream Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"InletVaneDampers",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"InletVaneDampers","OutletDampers","VariableSpeedMotor","ASHRAE90.1-2004AppendixG","VariableSpeedMotorPressureReset"},"Cold Duct Supply Fan Part-Load Power Coefficients",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"DrawThrough",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"BlowThrough","DrawThrough"},"Cold Duct Supply Fan Placement",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hot Duct Supply Fan Maximum Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hot Duct Supply Fan Minimum Flow Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hot Duct Supply Fan Total Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"1000",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hot Duct Supply Fan Delta Pressure",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hot Duct Supply Fan Motor Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hot Duct Supply Fan Motor in Air Stream Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"InletVaneDampers",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"InletVaneDampers","OutletDampers","VariableSpeedMotor","ASHRAE90.1-2004AppendixG","VariableSpeedMotorPressureReset"},"Hot Duct Supply Fan Part-Load Power Coefficients",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"DrawThrough",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"BlowThrough","DrawThrough"},"Hot Duct Supply Fan Placement",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ChilledWater",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ChilledWater","ChilledWaterDetailedFlatModel","None"},"Cooling Coil Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"FixedSetpoint",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"FixedSetpoint","Scheduled","OutdoorAirTemperatureReset","Warmest"},"Cooling Coil Setpoint Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"12.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Design Setpoint Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",0,0,"15.6",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Setpoint at Outdoor Dry-Bulb Low",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"15.6",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Reset Outdoor Dry-Bulb Low",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"12.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Setpoint at Outdoor Dry-Bulb High",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"23.3",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Reset Outdoor Dry-Bulb High",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"HotWater",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HotWater","Electric","Gas","None"},"Heating Coil Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"FixedSetpoint",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"FixedSetpoint","Scheduled","OutdoorAirTemperatureReset","Coldest"},"Heating Coil Setpoint Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"50.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Design Setpoint",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",0,0,"50.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Setpoint at Outdoor Dry-Bulb Low",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"7.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Reset Outdoor Dry-Bulb Low",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"20.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Setpoint at Outdoor Dry-Bulb High",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"12.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Reset Outdoor Dry-Bulb High",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gas Heating Coil Efficiency",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gas Heating Coil Parasitic Electric Load",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HotWater","Electric","Gas","None"},"Preheat Coil Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Preheat Coil Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",0,0,"7.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Preheat Coil Design Setpoint",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Preheat Coil Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,1,"0.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gas Preheat Coil Efficiency",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gas Preheat Coil Parasitic Electric Load",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ProportionalMinimum",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"FixedMinimum","ProportionalMinimum"},"Minimum Outdoor Air Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Air Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"NoEconomizer",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"FixedDryBulb","FixedEnthalpy","DifferentialDryBulb","DifferentialEnthalpy","FixedDewPointAndDryBulb","ElectronicEnthalpy","DifferentialDryBulbAndEnthalpy","NoEconomizer"},"Economizer Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"NoLockout",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"NoLockout"},"Economizer Lockout",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Economizer Upper Temperature Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Economizer Lower Temperature Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Economizer Upper Enthalpy Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Economizer Maximum Limit Dewpoint Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cold Supply Plenum Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hot Supply Plenum Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Plenum Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,"StayOff",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"StayOff","CycleOnAny","CycleOnControlZone"},"Night Cycle Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Night Cycle Control Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","Sensible","Enthalpy"},"Heat Recovery Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.70",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sensible Heat Recovery Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.65",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Latent Heat Recovery Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Plate",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Plate","Rotary"},"Heat Recovery Heat Exchanger Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","ExhaustAirRecirculation","ExhaustOnly","MinimumExhaustTemperature"},"Heat Recovery Frost Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","CoolReheat"},"Dehumidification Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dehumidification Control Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"percent",0,100,"60.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dehumidification Relative Humidity Setpoint",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dehumidification Relative Humidity Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","ElectricSteam"},"Humidifier Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"m3/s",0,0,"0.000001",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Rated Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Rated Electric Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Control Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"percent",0,100,"30.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Relative Humidity Setpoint",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Relative Humidity Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"NonCoincident",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coincident","NonCoincident"},"Sizing Option",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Return Fan",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Fan Total Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"500",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Fan Delta Pressure",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Fan Motor Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Fan Motor in Air Stream Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"InletVaneDampers",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"InletVaneDampers","OutletDampers","VariableSpeedMotor","ASHRAE90.1-2004AppendixG","VariableSpeedMotorPressureReset"},"Return Fan Part-Load Power Coefficients",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,91 ) },
            {"HVACTemplate:System:DedicatedOutdoorAir", () => new IdfObject("HVACTemplate:System:DedicatedOutdoorAir",false,IdfObjectFormat.NotSpecified,false,46,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"HVACTemplateDOASSystems","HVACTemplateSystems"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"System Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"DirectIntoZone",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"DirectIntoZone"},"Air Outlet Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Total Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"1000",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Delta Pressure",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Motor Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Motor in Air Stream Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"DrawThrough",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"DrawThrough","BlowThrough"},"Supply Fan Placement",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ChilledWater",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ChilledWater","ChilledWaterDetailedFlatModel","TwoSpeedDX","TwoStageDX","TwoStageHumidityControlDX","HeatExchangerAssistedChilledWater","HeatExchangerAssistedDX","None"},"Cooling Coil Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"FixedSetpoint",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"FixedSetpoint","Scheduled","OutdoorAirTemperatureReset"},"Cooling Coil Setpoint Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"12.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Design Setpoint",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",0,0,"15.6",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Setpoint at Outdoor Dry-Bulb Low",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"15.6",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Reset Outdoor Dry-Bulb Low",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"12.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Setpoint at Outdoor Dry-Bulb High",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"23.3",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Reset Outdoor Dry-Bulb High",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"DX Cooling Coil Gross Rated Total Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0.5,1,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"DX Cooling Coil Gross Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"DX Cooling Coil Gross Rated COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"HotWater",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HotWater","Electric","Gas","None"},"Heating Coil Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"FixedSetpoint",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"FixedSetpoint","Scheduled","OutdoorAirTemperatureReset"},"Heating Coil Setpoint Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"12.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Design Setpoint",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",0,0,"15.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Setpoint at Outdoor Dry-Bulb Low",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"7.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Reset Outdoor Dry-Bulb Low",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"12.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Setpoint at Outdoor Dry-Bulb High",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"12.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Reset Outdoor Dry-Bulb High",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gas Heating Coil Efficiency",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gas Heating Coil Parasitic Electric Load",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","Sensible","Enthalpy"},"Heat Recovery Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.70",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Sensible Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.65",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Latent Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Plate",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Plate","Rotary"},"Heat Recovery Heat Exchanger Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","ExhaustAirRecirculation","ExhaustOnly","MinimumExhaustTemperature"},"Heat Recovery Frost Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","CoolReheatHeatingCoil","CoolReheatDesuperheater","Multimode"},"Dehumidification Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kgWater/kgDryAir",0,1,"0.00924",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dehumidification Setpoint",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","ElectricSteam"},"Humidifier Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"m3/s",0,0,"0.000001",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Rated Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Rated Electric Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kgWater/kgDryAir",0,1,"0.003",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Constant Setpoint",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dehumidification Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifier Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,46 ) },
            {"HVACTemplate:Plant:ChilledWaterLoop", () => new IdfObject("HVACTemplate:Plant:ChilledWaterLoop",true,IdfObjectFormat.NotSpecified,false,21,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pump Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"Intermittent",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Intermittent","Continuous"},"Pump Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Default",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Default","UserDefined"},"Chiller Plant Operation Scheme Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Plant Equipment Operation Schemes Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"PlantOperationSchemes"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chilled Water Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",0,0,"7.22",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chilled Water Design Setpoint",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ConstantPrimaryNoSecondary",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ConstantPrimaryNoSecondary","VariablePrimaryNoSecondary","ConstantPrimaryVariableSecondary"},"Chilled Water Pump Configuration",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"179352",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Primary Chilled Water Pump Rated Head",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"179352",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Secondary Chilled Water Pump Rated Head",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Default",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Default","UserDefined"},"Condenser Plant Operation Scheme Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Equipment Operation Schemes Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserOperationSchemes"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"OutdoorWetBulbTemperature","SpecifiedSetpoint"},"Condenser Water Temperature Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Water Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",0,0,"29.4",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Water Design Setpoint",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"179352",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Water Pump Rated Head",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","OutdoorAirTemperatureReset"},"Chilled Water Setpoint Reset Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"12.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chilled Water Setpoint at Outdoor Dry-Bulb Low",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"15.6",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chilled Water Reset Outdoor Dry-Bulb Low",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"6.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chilled Water Setpoint at Outdoor Dry-Bulb High",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"26.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chilled Water Reset Outdoor Dry-Bulb High",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SinglePump",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SinglePump","PumpPerChiller","TwoHeaderedPumps","ThreeHeaderedPumps","FourHeaderedPumps","FiveHeaderedPumps"},"Chilled Water Primary Pump Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SinglePump",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SinglePump","TwoHeaderedPumps","ThreeHeaderedPumps","FourHeaderedPumps","FiveHeaderedPumps"},"Chilled Water Secondary Pump Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SinglePump",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SinglePump","PumpPerTower","TwoHeaderedPumps","ThreeHeaderedPumps","FourHeaderedPumps","FiveHeaderedPumps"},"Condenser Water Pump Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Yes",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Chilled Water Supply Side Bypass Pipe",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Yes",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Chilled Water Demand Side Bypass Pipe",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Yes",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Condenser Water Supply Side Bypass Pipe",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Yes",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Condenser Water Demand Side Bypass Pipe",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Water",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Water","EthyleneGlycol30","EthyleneGlycol40","EthyleneGlycol50","EthyleneGlycol60","PropyleneGlycol30","PropyleneGlycol40","PropyleneGlycol50","PropyleneGlycol60"},"Fluid Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"6.67",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Loop Design Delta Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Dry Bulb Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SequentialLoad",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Optimal","SequentialLoad","UniformLoad","UniformPLR","SequentialUniformPLR"},"Chilled Water Load Distribution Scheme",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SequentialLoad",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Optimal","SequentialLoad","UniformLoad","UniformPLR","SequentialUniformPLR"},"Condenser Water Load Distribution Scheme",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,33 ) },
            {"HVACTemplate:Plant:Chiller", () => new IdfObject("HVACTemplate:Plant:Chiller",false,IdfObjectFormat.NotSpecified,false,7,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"DistrictChilledWater","ElectricCentrifugalChiller","ElectricScrewChiller","ElectricReciprocatingChiller"},"Chiller Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W/W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"WaterCooled",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"AirCooled","WaterCooled","EvaporativelyCooled"},"Condenser Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Priority",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Part Load Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Part Load Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Optimum Part Load Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.25",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Unloading Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"5.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Leaving Chilled Water Lower Temperature Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,12 ) },
            {"HVACTemplate:Plant:Chiller:ObjectReference", () => new IdfObject("HVACTemplate:Plant:Chiller:ObjectReference",false,IdfObjectFormat.NotSpecified,false,4,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Chiller:Electric:EIR",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Chiller:Electric:EIR","Chiller:Electric:ReformulatedEIR"},"Chiller Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"Chillers"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Priority",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,4 ) },
            {"HVACTemplate:Plant:Tower", () => new IdfObject("HVACTemplate:Plant:Tower",false,IdfObjectFormat.NotSpecified,false,9,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SingleSpeed","TwoSpeed"},"Tower Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"High Speed Nominal Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"High Speed Fan Power",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Speed Nominal Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Speed Fan Power",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Free Convection Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Priority",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ChilledWater","MixedWater"},"Template Plant Loop Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,10 ) },
            {"HVACTemplate:Plant:Tower:ObjectReference", () => new IdfObject("HVACTemplate:Plant:Tower:ObjectReference",false,IdfObjectFormat.NotSpecified,false,4,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"CoolingTower:SingleSpeed",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"CoolingTower:SingleSpeed","CoolingTower:TwoSpeed","CoolingTower:VariableSpeed"},"Cooling Tower Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Tower Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CoolingTowers"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Priority",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ChilledWater","MixedWater"},"Template Plant Loop Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"HVACTemplate:Plant:HotWaterLoop", () => new IdfObject("HVACTemplate:Plant:HotWaterLoop",true,IdfObjectFormat.NotSpecified,false,14,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pump Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"Intermittent",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Intermittent","Continuous"},"Pump Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Default",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Default","UserDefined"},"Hot Water Plant Operation Scheme Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hot Water Plant Equipment Operation Schemes Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"PlantOperationSchemes"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hot Water Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",0,0,"82.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hot Water Design Setpoint",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ConstantFlow",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"VariableFlow","ConstantFlow"},"Hot Water Pump Configuration",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"179352",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hot Water Pump Rated Head",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","OutdoorAirTemperatureReset"},"Hot Water Setpoint Reset Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"82.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hot Water Setpoint at Outdoor Dry-Bulb Low",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"-6.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hot Water Reset Outdoor Dry-Bulb Low",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"65.6",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hot Water Setpoint at Outdoor Dry-Bulb High",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"10.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hot Water Reset Outdoor Dry-Bulb High",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SinglePump",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SinglePump","PumpPerBoiler","TwoHeaderedPumps","ThreeHeaderedPumps","FourHeaderedPumps","FiveHeaderedPumps"},"Hot Water Pump Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Yes",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Supply Side Bypass Pipe",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Yes",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Demand Side Bypass Pipe",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Water",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Water","EthyleneGlycol30","EthyleneGlycol40","EthyleneGlycol50","EthyleneGlycol60","PropyleneGlycol30","PropyleneGlycol40","PropyleneGlycol50","PropyleneGlycol60"},"Fluid Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"11.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Loop Design Delta Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Dry Bulb Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SequentialLoad",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Optimal","SequentialLoad","UniformLoad","UniformPLR","SequentialUniformPLR"},"Load Distribution Scheme",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,21 ) },
            {"HVACTemplate:Plant:Boiler", () => new IdfObject("HVACTemplate:Plant:Boiler",false,IdfObjectFormat.NotSpecified,false,7,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"DistrictHotWater","HotWaterBoiler","CondensingHotWaterBoiler"},"Boiler Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Efficiency",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Electricity","NaturalGas","PropaneGas","FuelOil#1","FuelOil#2","Coal","Diesel","Gasoline","OtherFuel1","OtherFuel2"},"Fuel Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Priority",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Part Load Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Part Load Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Optimum Part Load Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"100.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Outlet Upper Temperature Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HotWater","MixedWater"},"Template Plant Loop Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,12 ) },
            {"HVACTemplate:Plant:Boiler:ObjectReference", () => new IdfObject("HVACTemplate:Plant:Boiler:ObjectReference",false,IdfObjectFormat.NotSpecified,false,4,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Boiler:HotWater",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Boiler:HotWater"},"Boiler Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Boiler Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"Boilers"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Priority",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HotWater","MixedWater"},"Template Plant Loop Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"HVACTemplate:Plant:MixedWaterLoop", () => new IdfObject("HVACTemplate:Plant:MixedWaterLoop",true,IdfObjectFormat.NotSpecified,false,11,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pump Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"Intermittent",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Intermittent","Continuous"},"Pump Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Default",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Default","UserDefined"},"Operation Scheme Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment Operation Schemes Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"PlantOperationSchemes"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"High Temperature Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",0,0,"33.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"High Temperature Design Setpoint",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Temperature Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",0,0,"20.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Temperature Design Setpoint",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ConstantFlow",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"VariableFlow","ConstantFlow"},"Water Pump Configuration",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"179352",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Pump Rated Head",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SinglePump",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SinglePump","PumpPerTowerOrBoiler","TwoHeaderedPumps","ThreeHeaderedPumps","FourHeaderedPumps","FiveHeaderedPumps"},"Water Pump Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Yes",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Supply Side Bypass Pipe",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Yes",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Demand Side Bypass Pipe",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Water",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Water","EthyleneGlycol30","EthyleneGlycol40","EthyleneGlycol50","EthyleneGlycol60","PropyleneGlycol30","PropyleneGlycol40","PropyleneGlycol50","PropyleneGlycol60"},"Fluid Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"5.6",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Loop Design Delta Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SequentialLoad",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Optimal","SequentialLoad","UniformLoad","UniformPLR","SequentialUniformPLR"},"Load Distribution Scheme",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,17 ) },
            {"DesignSpecification:OutdoorAir", () => new IdfObject("DesignSpecification:OutdoorAir",false,IdfObjectFormat.NotSpecified,false,1,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"DesignSpecificationOutdoorAirNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Flow/Person",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Flow/Person","Flow/Area","Flow/Zone","AirChanges/Hour","Sum","Maximum","IndoorAirQualityProcedure","ProportionalControlBasedOnDesignOccupancy","ProportionalControlBasedonOccupancySchedule"},"Outdoor Air Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-person",0,0,"0.00944",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow per Person",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-m2",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow per Zone Floor Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow per Zone",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"1/hr",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Air Changes per Hour",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Proportional Control Minimum Outdoor Air Flow Rate Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,8 ) },
            {"DesignSpecification:ZoneAirDistribution", () => new IdfObject("DesignSpecification:ZoneAirDistribution",false,IdfObjectFormat.NotSpecified,false,1,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"DesignSpecificationZoneAirDistributionNames"},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Air Distribution Effectiveness in Cooling Mode",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Air Distribution Effectiveness in Heating Mode",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Air Distribution Effectiveness Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"dimensionless",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Secondary Recirculation Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Zone Ventilation Efficiency",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,6 ) },
            {"Sizing:Parameters", () => new IdfObject("Sizing:Parameters",true,IdfObjectFormat.NotSpecified,false,1,false,new List<IdfField> {new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Timesteps in Averaging Window",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,3 ) },
            {"Sizing:Zone", () => new IdfObject("Sizing:Zone",false,IdfObjectFormat.NotSpecified,false,18,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone or ZoneList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneAndZoneListNames"}),new IdfField(false,"",0,0,"SupplyAirTemperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SupplyAirTemperature","TemperatureDifference"},"Zone Cooling Design Supply Air Temperature Input Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Cooling Design Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Cooling Design Supply Air Temperature Difference",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SupplyAirTemperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SupplyAirTemperature","TemperatureDifference"},"Zone Heating Design Supply Air Temperature Input Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Heating Design Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Heating Design Supply Air Temperature Difference",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"kgWater/kgDryAir",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Cooling Design Supply Air Humidity Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"kgWater/kgDryAir",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Heating Design Supply Air Humidity Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Outdoor Air Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationOutdoorAirNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Heating Sizing Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Cooling Sizing Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"DesignDay",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Flow/Zone","DesignDay","DesignDayWithLimit"},"Cooling Design Air Flow Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Design Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-m2",0,0,".000762",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Minimum Air Flow per Zone Floor Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Minimum Air Flow",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Minimum Air Flow Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"DesignDay",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Flow/Zone","DesignDay","DesignDayWithLimit"},"Heating Design Air Flow Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Design Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-m2",0,0,".002032",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Maximum Air Flow per Zone Floor Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,".1415762",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Maximum Air Flow",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.3",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Maximum Air Flow Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Zone Air Distribution Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationZoneAirDistributionNames"}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Account for Dedicated Outdoor Air System",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"NeutralSupplyAir",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"NeutralSupplyAir","NeutralDehumidifiedSupplyAir","ColdSupplyAir"},"Dedicated Outdoor Air System Control Strategy",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dedicated Outdoor Air Low Setpoint Temperature for Design",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dedicated Outdoor Air High Setpoint Temperature for Design",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,27 ) },
            {"DesignSpecification:ZoneHVAC:Sizing", () => new IdfObject("DesignSpecification:ZoneHVAC:Sizing",false,IdfObjectFormat.NotSpecified,false,1,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"DesignSpecificationZoneHVACSizingName"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SupplyAirFlowRate",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","SupplyAirFlowRate","FlowPerFloorArea","FractionOfAutosizedCoolingAirflow","FlowPerCoolingCapacity"},"Cooling Supply Air Flow Rate Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Supply Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Supply Air Flow Rate Per Floor Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Fraction of Autosized Cooling Supply Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Supply Air Flow Rate Per Unit Cooling Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SupplyAirFlowRate",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","SupplyAirFlowRate","FlowPerFloorArea","FractionOfAutosizedCoolingAirflow","FractionOfAutosizedHeatingAirflow"},"No Load Supply Air Flow Rate Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"No Load Supply Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"No Load Supply Air Flow Rate Per Floor Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"No Load Fraction of Cooling Supply Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"No Load Fraction of Heating Supply Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SupplyAirFlowRate",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","SupplyAirFlowRate","FlowPerFloorArea","FractionOfAutosizedHeatingAirflow","FlowPerHeatingCapacity"},"Heating Supply Air Flow Rate Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Supply Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Supply Air Flow Rate Per Floor Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Fraction of Heating Supply Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Supply Air Flow Rate Per Unit Heating Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","CoolingDesignCapacity","CapacityPerFloorArea","FractionOfAutosizedCoolingCapacity"},"Cooling Design Capacity Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Design Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Design Capacity Per Floor Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Autosized Cooling Design Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","HeatingDesignCapacity","CapacityPerFloorArea","FractionOfAutosizedHeatingCapacity"},"Heating Design Capacity Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Design Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Design Capacity Per Floor Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Autosized Heating Design Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,24 ) },
            {"DesignSpecification:AirTerminal:Sizing", () => new IdfObject("DesignSpecification:AirTerminal:Sizing",false,IdfObjectFormat.NotSpecified,false,1,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"DesignSpecificationAirTerminalSizingName"},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Design Cooling Load",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Design Supply Air Temperature Difference Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Design Heating Load",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Design Supply Air Temperature Difference Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Minimum Outdoor Air Flow",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,6 ) },
            {"Sizing:System", () => new IdfObject("Sizing:System",false,IdfObjectFormat.NotSpecified,false,37,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"AirLoop Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AirPrimaryLoops"}),new IdfField(false,"",0,0,"Sensible",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Sensible","Total","VentilationRequirement"},"Type of Load to Size On",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Outdoor Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Central Heating Maximum System Air Flow Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Preheat Design Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"kgWater/kgDryAir",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Preheat Design Humidity Ratio",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Precool Design Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"kgWater/kgDryAir",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Precool Design Humidity Ratio",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Central Cooling Design Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Central Heating Design Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"NonCoincident",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coincident","NonCoincident"},"Type of Zone Sum to Use",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"100% Outdoor Air in Cooling",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"100% Outdoor Air in Heating",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kgWater/kgDryAir",0,0,"0.008",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Central Cooling Design Supply Air Humidity Ratio",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kgWater/kgDryAir",0,0,"0.008",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Central Heating Design Supply Air Humidity Ratio",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"DesignDay",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Flow/System","DesignDay","FlowPerFloorArea","FractionOfAutosizedCoolingAirflow","FlowPerCoolingCapacity"},"Cooling Supply Air Flow Rate Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Supply Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Supply Air Flow Rate Per Floor Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Fraction of Autosized Cooling Supply Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Supply Air Flow Rate Per Unit Cooling Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"DesignDay",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Flow/System","DesignDay","FlowPerFloorArea","FractionOfAutosizedHeatingAirflow","FractionOfAutosizedCoolingAirflow","FlowPerHeatingCapacity"},"Heating Supply Air Flow Rate Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Supply Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Supply Air Flow Rate Per Floor Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Fraction of Autosized Heating Supply Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Fraction of Autosized Cooling Supply Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Supply Air Flow Rate Per Unit Heating Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ZoneSum",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ZoneSum","VentilationRateProcedure"},"System Outdoor Air Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Maximum Outdoor Air Fraction",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"CoolingDesignCapacity",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","CoolingDesignCapacity","CapacityPerFloorArea","FractionOfAutosizedCoolingCapacity"},"Cooling Design Capacity Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Design Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Design Capacity Per Floor Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Autosized Cooling Design Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"HeatingDesignCapacity",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","HeatingDesignCapacity","CapacityPerFloorArea","FractionOfAutosizedHeatingCapacity"},"Heating Design Capacity Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Design Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Design Capacity Per Floor Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Autosized Heating Design Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"OnOff",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"VAV","Bypass","VT","OnOff"},"Central Cooling Capacity Control Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,37 ) },
            {"Sizing:Plant", () => new IdfObject("Sizing:Plant",false,IdfObjectFormat.NotSpecified,false,4,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plant or Condenser Loop Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"PlantLoops"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Heating","Cooling","Condenser","Steam"},"Loop Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Loop Exit Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Loop Design Temperature Difference",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"NonCoincident",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coincident","NonCoincident"},"Sizing Option",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Timesteps in Averaging Window",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","GlobalHeatingSizingFactor","GlobalCoolingSizingFactor","LoopComponentSizingFactor"},"Coincident Sizing Factor Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,7 ) },
            {"OutputControl:Sizing:Style", () => new IdfObject("OutputControl:Sizing:Style",true,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Comma","Tab","Fixed"},"Column Separator",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,1 ) },
            {"ZoneControl:Humidistat", () => new IdfObject("ZoneControl:Humidistat",false,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ZoneControlHumidistatNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidifying Relative Humidity Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dehumidifying Relative Humidity Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,4 ) },
            {"ZoneControl:Thermostat", () => new IdfObject("ZoneControl:Thermostat",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ZoneControlThermostaticNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone or ZoneList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneAndZoneListNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Type Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ThermostatSetpoint:SingleHeating","ThermostatSetpoint:SingleCooling","ThermostatSetpoint:SingleHeatingOrCooling","ThermostatSetpoint:DualSetpoint"},"Control 1 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ControlTypeNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ThermostatSetpoint:SingleHeating","ThermostatSetpoint:SingleCooling","ThermostatSetpoint:SingleHeatingOrCooling","ThermostatSetpoint:DualSetpoint"},"Control 2 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control 2 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ControlTypeNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ThermostatSetpoint:SingleHeating","ThermostatSetpoint:SingleCooling","ThermostatSetpoint:SingleHeatingOrCooling","ThermostatSetpoint:DualSetpoint"},"Control 3 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control 3 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ControlTypeNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ThermostatSetpoint:SingleHeating","ThermostatSetpoint:SingleCooling","ThermostatSetpoint:SingleHeatingOrCooling","ThermostatSetpoint:DualSetpoint"},"Control 4 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control 4 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ControlTypeNames"}),new IdfField(false,"deltaC",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Difference Between Cutout And Setpoint",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,12 ) },
            {"ZoneControl:Thermostat:OperativeTemperature", () => new IdfObject("ZoneControl:Thermostat:OperativeTemperature",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermostat Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneControlThermostaticNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Constant","Scheduled"},"Radiative Fraction Input Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0.9,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fixed Radiative Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Radiative Fraction Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","AdaptiveASH55CentralLine","AdaptiveASH5580PercentUpperLine","AdaptiveASH5590PercentUpperLine","AdaptiveCEN15251CentralLine","AdaptiveCEN15251CategoryIUpperLine","AdaptiveCEN15251CategoryIIUpperLine","AdaptiveCEN15251CategoryIIIUpperLine"},"Adaptive Comfort Model Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"ZoneControl:Thermostat:ThermalComfort", () => new IdfObject("ZoneControl:Thermostat:ThermalComfort",false,IdfObjectFormat.NotSpecified,false,9,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone or ZoneList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneAndZoneListNames"}),new IdfField(false,"",0,0,"PeopleAverage",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SpecificObject","ObjectAverage","PeopleAverage"},"Averaging Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Specific People Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"PeopleNames"}),new IdfField(false,"C",0,50,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Dry-Bulb Temperature Setpoint",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,50,"50",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Dry-Bulb Temperature Setpoint",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Comfort Control Type Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ThermostatSetpoint:ThermalComfort:Fanger:SingleHeating","ThermostatSetpoint:ThermalComfort:Fanger:SingleCooling","ThermostatSetpoint:ThermalComfort:Fanger:SingleHeatingOrCooling","ThermostatSetpoint:ThermalComfort:Fanger:DualSetpoint"},"Thermal Comfort Control 1 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Comfort Control 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ThermalComfortControlTypeNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ThermostatSetpoint:ThermalComfort:Fanger:SingleHeating","ThermostatSetpoint:ThermalComfort:Fanger:SingleCooling","ThermostatSetpoint:ThermalComfort:Fanger:SingleHeatingOrCooling","ThermostatSetpoint:ThermalComfort:Fanger:DualSetpoint"},"Thermal Comfort Control 2 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Comfort Control 2 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ThermalComfortControlTypeNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ThermostatSetpoint:ThermalComfort:Fanger:SingleHeating","ThermostatSetpoint:ThermalComfort:Fanger:SingleCooling","ThermostatSetpoint:ThermalComfort:Fanger:SingleHeatingOrCooling","ThermostatSetpoint:ThermalComfort:Fanger:DualSetpoint"},"Thermal Comfort Control 3 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Comfort Control 3 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ThermalComfortControlTypeNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ThermostatSetpoint:ThermalComfort:Fanger:SingleHeating","ThermostatSetpoint:ThermalComfort:Fanger:SingleCooling","ThermostatSetpoint:ThermalComfort:Fanger:SingleHeatingOrCooling","ThermostatSetpoint:ThermalComfort:Fanger:DualSetpoint"},"Thermal Comfort Control 4 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Comfort Control 4 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ThermalComfortControlTypeNames"})},false,15 ) },
            {"ZoneControl:Thermostat:TemperatureAndHumidity", () => new IdfObject("ZoneControl:Thermostat:TemperatureAndHumidity",false,IdfObjectFormat.NotSpecified,false,2,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermostat Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneControlThermostaticNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dehumidifying Relative Humidity Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"Overcool",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Overcool","None"},"Dehumidification Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Constant",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Constant","Scheduled"},"Overcool Range Input Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,3,"1.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Overcool Constant Range",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Overcool Range Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"percent/K",0,0,"3.6",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Overcool Control Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,7 ) },
            {"ThermostatSetpoint:SingleHeating", () => new IdfObject("ThermostatSetpoint:SingleHeating",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ControlTypeNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,2 ) },
            {"ThermostatSetpoint:SingleCooling", () => new IdfObject("ThermostatSetpoint:SingleCooling",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ControlTypeNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,2 ) },
            {"ThermostatSetpoint:SingleHeatingOrCooling", () => new IdfObject("ThermostatSetpoint:SingleHeatingOrCooling",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ControlTypeNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,2 ) },
            {"ThermostatSetpoint:DualSetpoint", () => new IdfObject("ThermostatSetpoint:DualSetpoint",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ControlTypeNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Setpoint Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Setpoint Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,3 ) },
            {"ThermostatSetpoint:ThermalComfort:Fanger:SingleHeating", () => new IdfObject("ThermostatSetpoint:ThermalComfort:Fanger:SingleHeating",false,IdfObjectFormat.NotSpecified,false,2,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ThermalComfortControlTypeNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fanger Thermal Comfort Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,2 ) },
            {"ThermostatSetpoint:ThermalComfort:Fanger:SingleCooling", () => new IdfObject("ThermostatSetpoint:ThermalComfort:Fanger:SingleCooling",false,IdfObjectFormat.NotSpecified,false,2,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ThermalComfortControlTypeNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fanger Thermal Comfort Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,2 ) },
            {"ThermostatSetpoint:ThermalComfort:Fanger:SingleHeatingOrCooling", () => new IdfObject("ThermostatSetpoint:ThermalComfort:Fanger:SingleHeatingOrCooling",false,IdfObjectFormat.NotSpecified,false,2,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ThermalComfortControlTypeNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fanger Thermal Comfort Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,2 ) },
            {"ThermostatSetpoint:ThermalComfort:Fanger:DualSetpoint", () => new IdfObject("ThermostatSetpoint:ThermalComfort:Fanger:DualSetpoint",false,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ThermalComfortControlTypeNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fanger Thermal Comfort Heating Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fanger Thermal Comfort Cooling Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,3 ) },
            {"ZoneControl:Thermostat:StagedDualSetpoint", () => new IdfObject("ZoneControl:Thermostat:StagedDualSetpoint",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ZoneControlThermostaticNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone or ZoneList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneAndZoneListNames"}),new IdfField(true,"",1,4,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Heating Stages",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Temperature Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"deltaC",0,0,"1.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Throttling Temperature Range",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stage 1 Heating Temperature Offset",IdfFieldMinMaxType.None,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stage 2 Heating Temperature Offset",IdfFieldMinMaxType.None,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stage 3 Heating Temperature Offset",IdfFieldMinMaxType.None,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stage 4 Heating Temperature Offset",IdfFieldMinMaxType.None,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",1,4,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Cooling Stages",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Temperature Setpoint Base Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"deltaC",0,0,"1.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Throttling Temperature Range",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stage 1 Cooling Temperature Offset",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stage 2 Cooling Temperature Offset",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stage 3 Cooling Temperature Offset",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stage 4 Cooling Temperature Offset",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,16 ) },
            {"ZoneControl:ContaminantController", () => new IdfObject("ZoneControl:ContaminantController",false,IdfObjectFormat.NotSpecified,false,4,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Carbon Dioxide Control Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Carbon Dioxide Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Carbon Dioxide Concentration Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Carbon Dioxide Concentration Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Generic Contaminant Control Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Generic Contaminant Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,8 ) },
            {"ZoneHVAC:IdealLoadsAirSystem", () => new IdfObject("ZoneHVAC:IdealLoadsAirSystem",false,IdfObjectFormat.NotSpecified,false,27,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ZoneEquipmentNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Supply Air Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Exhaust Air Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"System Inlet Air Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,100,"50",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Heating Supply Air Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",-100,50,"13",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Cooling Supply Air Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kgWater/kgDryAir",0,0,"0.0156",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Heating Supply Air Humidity Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kgWater/kgDryAir",0,0,"0.0077",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Cooling Supply Air Humidity Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"NoLimit",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"NoLimit","LimitFlowRate","LimitCapacity","LimitFlowRateAndCapacity"},"Heating Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Heating Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Sensible Heating Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"NoLimit",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"NoLimit","LimitFlowRate","LimitCapacity","LimitFlowRateAndCapacity"},"Cooling Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Cooling Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Total Cooling Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"ConstantSensibleHeatRatio",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ConstantSensibleHeatRatio","Humidistat","None","ConstantSupplyHumidityRatio"},"Dehumidification Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Sensible Heat Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","Humidistat","ConstantSupplyHumidityRatio"},"Humidification Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Outdoor Air Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationOutdoorAirNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","OccupancySchedule","CO2Setpoint"},"Demand Controlled Ventilation Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"NoEconomizer",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"NoEconomizer","DifferentialDryBulb","DifferentialEnthalpy"},"Outdoor Air Economizer Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","Sensible","Enthalpy"},"Heat Recovery Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.70",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sensible Heat Recovery Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.65",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Latent Heat Recovery Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification ZoneHVAC Sizing Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationZoneHVACSizingName"})},false,28 ) },
            {"ZoneHVAC:FourPipeFanCoil", () => new IdfObject("ZoneHVAC:FourPipeFanCoil",false,IdfObjectFormat.NotSpecified,false,24,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"DOAToZonalUnit","ZoneEquipmentNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ConstantFanVariableFlow","CyclingFan","VariableFanVariableFlow","VariableFanConstantFlow","MultiSpeedFan","ASHRAE90VariableFan"},"Capacity Control Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Supply Air Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.33",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Speed Supply Air Flow Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.66",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Medium Speed Supply Air Flow Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Air Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"OutdoorAir:Mixer"},"Outdoor Air Mixer Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Mixer Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"OutdoorAirMixers"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fan:OnOff","Fan:ConstantVolume","Fan:VariableVolume","Fan:SystemModel"},"Supply Air Fan Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Fan Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FansCVandOnOffandVAV"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Cooling:Water","Coil:Cooling:Water:DetailedGeometry","CoilSystem:Cooling:Water:HeatExchangerAssisted"},"Cooling Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CoolingCoilsWater"}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Cold Water Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Cold Water Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.001",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Convergence Tolerance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:Water","Coil:Heating:Electric"},"Heating Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatingCoilsWater","HeatingCoilsElectric"}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Hot Water Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Hot Water Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.001",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Convergence Tolerance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Manager List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SystemAvailabilityManagerLists"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification ZoneHVAC Sizing Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationZoneHVACSizingName"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Fan Operating Mode Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Supply Air Temperature in Cooling Mode",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Supply Air Temperature in Heating Mode",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,29 ) },
            {"ZoneHVAC:WindowAirConditioner", () => new IdfObject("ZoneHVAC:WindowAirConditioner",false,IdfObjectFormat.NotSpecified,false,15,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ZoneEquipmentNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Supply Air Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Air Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"OutdoorAir:Mixer"},"Outdoor Air Mixer Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Mixer Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"OutdoorAirMixers"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fan:SystemModel","Fan:OnOff","Fan:ConstantVolume"},"Supply Air Fan Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Fan Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FansCVandOnOff"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Cooling:DX:SingleSpeed","CoilSystem:Cooling:DX:HeatExchangerAssisted","Coil:Cooling:DX:VariableSpeed"},"Cooling Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"DX Cooling Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CoolingCoilsDXSingleSpeed","CoolingCoilsDXVariableSpeed"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Fan Operating Mode Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"BlowThrough","DrawThrough"},"Fan Placement",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.001",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Convergence Tolerance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Manager List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SystemAvailabilityManagerLists"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification ZoneHVAC Sizing Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationZoneHVACSizingName"})},false,17 ) },
            {"ZoneHVAC:PackagedTerminalAirConditioner", () => new IdfObject("ZoneHVAC:PackagedTerminalAirConditioner",false,IdfObjectFormat.NotSpecified,false,18,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"DOAToZonalUnit","ZoneEquipmentNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"OutdoorAir:Mixer"},"Outdoor Air Mixer Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Mixer Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"OutdoorAirMixers"}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"No Load Supply Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Outdoor Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Outdoor Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"No Load Outdoor Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fan:SystemModel","Fan:OnOff","Fan:ConstantVolume"},"Supply Air Fan Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Fan Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FansCVandOnOff"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:Fuel","Coil:Heating:Electric","Coil:Heating:Water","Coil:Heating:Steam"},"Heating Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatingCoilName"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Cooling:DX:SingleSpeed","Coil:Cooling:DX:VariableSpeed","CoilSystem:Cooling:DX:HeatExchangerAssisted"},"Cooling Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CoolingCoilsDXSingleSpeed","CoolingCoilsDXVariableSpeed"}),new IdfField(false,"",0,0,"DrawThrough",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"BlowThrough","DrawThrough"},"Fan Placement",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Fan Operating Mode Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Manager List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SystemAvailabilityManagerLists"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification ZoneHVAC Sizing Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationZoneHVACSizingName"}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","SingleZoneVAV"},"Capacity Control Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Supply Air Temperature in Cooling Mode",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Supply Air Temperature in Heating Mode",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,25 ) },
            {"ZoneHVAC:PackagedTerminalHeatPump", () => new IdfObject("ZoneHVAC:PackagedTerminalHeatPump",false,IdfObjectFormat.NotSpecified,false,26,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"DOAToZonalUnit","ZoneEquipmentNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"OutdoorAir:Mixer"},"Outdoor Air Mixer Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Mixer Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"OutdoorAirMixers"}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"No Load Supply Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Outdoor Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Outdoor Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"No Load Outdoor Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fan:SystemModel","Fan:OnOff","Fan:ConstantVolume"},"Supply Air Fan Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Fan Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FansCVandOnOff"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:DX:SingleSpeed","Coil:Heating:DX:VariableSpeed"},"Heating Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatingCoilsDXSingleSpeed","HeatingCoilsDXVariableSpeed"}),new IdfField(false,"dimensionless",0,0,"0.001",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Convergence Tolerance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Cooling:DX:SingleSpeed","Coil:Cooling:DX:VariableSpeed","CoilSystem:Cooling:DX:HeatExchangerAssisted"},"Cooling Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CoolingCoilsDXSingleSpeed","CoolingCoilsDXVariableSpeed"}),new IdfField(false,"dimensionless",0,0,"0.001",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Convergence Tolerance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:Fuel","Coil:Heating:Electric","Coil:Heating:Water","Coil:Heating:Steam"},"Supplemental Heating Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supplemental Heating Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatingCoilName"}),new IdfField(true,"C",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Supply Air Temperature from Supplemental Heater",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,21,"21.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Dry-Bulb Temperature for Supplemental Heater Operation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"DrawThrough",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"BlowThrough","DrawThrough"},"Fan Placement",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Fan Operating Mode Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Manager List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SystemAvailabilityManagerLists"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification ZoneHVAC Sizing Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationZoneHVACSizingName"}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","SingleZoneVAV"},"Capacity Control Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Supply Air Temperature in Cooling Mode",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Supply Air Temperature in Heating Mode",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,31 ) },
            {"ZoneHVAC:WaterToAirHeatPump", () => new IdfObject("ZoneHVAC:WaterToAirHeatPump",false,IdfObjectFormat.NotSpecified,false,25,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"DOAToZonalUnit","ZoneEquipmentNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"OutdoorAir:Mixer"},"Outdoor Air Mixer Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Mixer Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"OutdoorAirMixers"}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"No Load Supply Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Outdoor Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Outdoor Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"No Load Outdoor Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fan:SystemModel","Fan:OnOff"},"Supply Air Fan Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Fan Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FansOnOff"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:WaterToAirHeatPump:EquationFit","Coil:Heating:WaterToAirHeatPump:VariableSpeedEquationFit"},"Heating Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatingCoilsWaterToAirHP","HeatingCoilsWaterToAirVSHP"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Cooling:WaterToAirHeatPump:EquationFit","Coil:Cooling:WaterToAirHeatPump:VariableSpeedEquationFit"},"Cooling Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CoolingCoilsWaterToAirHP","CoolingCoilsWaterToAirVSHP"}),new IdfField(false,"cycles/hr",0,5,"2.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Cycling Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"s",0,500,"60.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Pump Time Constant",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0.05,"0.01",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of On-Cycle Power Use",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"s",0,0,"60",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Pump Fan Delay Time",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:Fuel","Coil:Heating:Electric","Coil:Heating:Water","Coil:Heating:Steam"},"Supplemental Heating Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supplemental Heating Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatingCoilName"}),new IdfField(true,"C",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Supply Air Temperature from Supplemental Heater",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,21,"21.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Dry-Bulb Temperature for Supplemental Heater Operation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Dry-Bulb Temperature Sensor Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"BlowThrough",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"BlowThrough","DrawThrough"},"Fan Placement",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Fan Operating Mode Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Manager List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SystemAvailabilityManagerLists"}),new IdfField(false,"",0,0,"Cycling",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Constant","Cycling","ConstantOnDemand"},"Heat Pump Coil Water Flow Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification ZoneHVAC Sizing Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationZoneHVACSizingName"})},false,32 ) },
            {"ZoneHVAC:Dehumidifier:DX", () => new IdfObject("ZoneHVAC:Dehumidifier:DX",false,IdfObjectFormat.NotSpecified,false,13,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ZoneEquipmentNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"L/day",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Water Removal",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"L/kWh",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Energy Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Removal Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Energy Factor Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Part Load Fraction Correlation Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"C",0,0,"10.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Dry-Bulb Temperature for Dehumidifier Operation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"35.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Dry-Bulb Temperature for Dehumidifier Operation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Off-Cycle Parasitic Electric Load",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condensate Collection Water Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"})},false,14 ) },
            {"ZoneHVAC:EnergyRecoveryVentilator", () => new IdfObject("ZoneHVAC:EnergyRecoveryVentilator",false,IdfObjectFormat.NotSpecified,false,7,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ZoneEquipmentNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Exchanger Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HXAirToAirSensibleAndLatentNames"}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Exhaust Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Fan Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FansOnOff"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Exhaust Air Fan Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FansOnOff"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Controller Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ControllerStandAloneEnergyRecoveryVentilator"}),new IdfField(false,"m3/s-m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ventilation Rate per Unit Floor Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-person",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ventilation Rate per Occupant",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Manager List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SystemAvailabilityManagerLists"})},false,11 ) },
            {"ZoneHVAC:EnergyRecoveryVentilator:Controller", () => new IdfObject("ZoneHVAC:EnergyRecoveryVentilator:Controller",false,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ControllerStandAloneEnergyRecoveryVentilator"},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature High Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Low Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Enthalpy High Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Electronic Enthalpy Limit Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,"NoExhaustAirTemperatureLimit",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ExhaustAirTemperatureLimit","NoExhaustAirTemperatureLimit"},"Exhaust Air Temperature Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"NoExhaustAirEnthalpyLimit",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ExhaustAirEnthalpyLimit","NoExhaustAirEnthalpyLimit"},"Exhaust Air Enthalpy Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Time of Day Economizer Flow Control Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"High Humidity Control Flag",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidistat Control Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"High Humidity Outdoor Air Flow Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Yes",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Control High Indoor Humidity Based on Outdoor Humidity Ratio",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,13 ) },
            {"ZoneHVAC:UnitVentilator", () => new IdfObject("ZoneHVAC:UnitVentilator",false,IdfObjectFormat.NotSpecified,false,16,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"DOAToZonalUnit","ZoneEquipmentNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"FixedAmount","VariablePercent","FixedTemperature"},"Outdoor Air Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Air Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Air Fraction or Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Exhaust Air Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mixed Air Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fan:OnOff","Fan:ConstantVolume","Fan:VariableVolume","Fan:SystemModel"},"Supply Air Fan Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Fan Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FansCVandVAV"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","Heating","Cooling","HeatingAndCooling"},"Coil Option",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Fan Operating Mode Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:Water","Coil:Heating:Electric","Coil:Heating:Fuel","Coil:Heating:Steam"},"Heating Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatingCoilName"}),new IdfField(false,"",0,0,"0.001",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Convergence Tolerance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Cooling:Water","Coil:Cooling:Water:DetailedGeometry","CoilSystem:Cooling:Water:HeatExchangerAssisted"},"Cooling Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CoolingCoilsWater"}),new IdfField(false,"",0,0,"0.001",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Convergence Tolerance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Manager List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SystemAvailabilityManagerLists"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification ZoneHVAC Sizing Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationZoneHVACSizingName"})},false,25 ) },
            {"ZoneHVAC:UnitHeater", () => new IdfObject("ZoneHVAC:UnitHeater",false,IdfObjectFormat.NotSpecified,false,11,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ZoneEquipmentNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fan:OnOff","Fan:ConstantVolume","Fan:VariableVolume","Fan:SystemModel"},"Supply Air Fan Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Fan Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FansCVandVAV"}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:Water","Coil:Heating:Electric","Coil:Heating:Fuel","Coil:Heating:Steam"},"Heating Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatingCoilName"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Fan Operating Mode Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Supply Air Fan Operation During No Heating",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Hot Water or Steam Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Hot Water or Steam Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.001",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Convergence Tolerance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Manager List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SystemAvailabilityManagerLists"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification ZoneHVAC Sizing Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationZoneHVACSizingName"})},false,16 ) },
            {"ZoneHVAC:EvaporativeCoolerUnit", () => new IdfObject("ZoneHVAC:EvaporativeCoolerUnit",false,IdfObjectFormat.NotSpecified,false,15,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ZoneEquipmentNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Manager List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SystemAvailabilityManagerLists"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooler Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Relief Air Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fan:SystemModel","Fan:ComponentModel","Fan:ConstantVolume","Fan:OnOff","Fan:VariableVolume"},"Supply Air Fan Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Fan Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"Fans"}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"BlowThrough","DrawThrough"},"Fan Placement",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ZoneTemperatureDeadbandOnOffCycling","ZoneCoolingLoadOnOffCycling","ZoneCoolingLoadVariableSpeedFan"},"Cooler Unit Control Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Throttling Range Temperature Difference",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"100.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Load Control Threshold Heat Transfer Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"EvaporativeCooler:Direct:CelDekPad","EvaporativeCooler:Direct:ResearchSpecial","EvaporativeCooler:Indirect:CelDekPad","EvaporativeCooler:Indirect:WetCoil","EvaporativeCooler:Indirect:ResearchSpecial"},"First Evaporative Cooler Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"First Evaporative Cooler Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"EvapCoolerNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"EvaporativeCooler:Direct:CelDekPad","EvaporativeCooler:Direct:ResearchSpecial","EvaporativeCooler:Indirect:CelDekPad","EvaporativeCooler:Indirect:WetCoil","EvaporativeCooler:Indirect:ResearchSpecial"},"Second Evaporative Cooler Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Second Evaporative Cooler Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"EvapCoolerNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification ZoneHVAC Sizing Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationZoneHVACSizingName"})},false,18 ) },
            {"ZoneHVAC:HybridUnitaryHVAC", () => new IdfObject("ZoneHVAC:HybridUnitaryHVAC",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ZoneEquipmentNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Manager List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SystemAvailabilityManagerLists"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Supply Air Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Supply Air Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Supply Air Humidity Ratio Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Supply Air Humidity Ratio Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"Automatic",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Automatic","User Defined"},"Method to Choose Controlled Inputs and Part Runtime Fraction",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Air Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relief Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"System Maximum Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"External Static Pressure at System Maximum Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Scaling Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,26,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Operating Modes",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"minutes",1,0,"10",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Time Between Mode Change",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Electricity",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","Electricity","NaturalGas","PropaneGas","FuelOil#1","FuelOil#2","Diesel","Gasoline","Coal","OtherFuel1","OtherFuel2","Steam","DistrictHeating","DistrictCooling"},"First Fuel Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","Electricity","NaturalGas","PropaneGas","FuelOil#1","FuelOil#2","Diesel","Gasoline","Coal","OtherFuel1","OtherFuel2","Steam","DistrictHeating","DistrictCooling"},"Second Fuel Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","Electricity","NaturalGas","PropaneGas","FuelOil#1","FuelOil#2","Diesel","Gasoline","Coal","OtherFuel1","OtherFuel2","Steam","DistrictHeating","DistrictCooling"},"Third Fuel Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Electricity Use",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Electricity Use","Second Fuel Use","Third Fuel Use","Water Use"},"Objective Function to Minimize",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Outdoor Air Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationOutdoorAirNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mode 0 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mode 0 Supply Air Temperature Lookup Table Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MultivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mode 0 Supply Air Humidity Ratio Lookup Table Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MultivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mode 0 System Electric Power Lookup Table Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MultivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mode 0 Supply Fan Electric Power Lookup Table Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MultivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mode 0 External Static Pressure Lookup Table Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MultivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mode 0 System Second Fuel Consumption Lookup Table Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MultivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mode 0 System Third Fuel Consumption Lookup Table Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MultivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mode 0 System Water Use Lookup Table Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MultivariateFunctions"}),new IdfField(false,"",0,1,"0.00",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mode 0 Outdoor Air Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.00",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mode 0 Supply Air Mass Flow Rate Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mode 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mode 1 Supply Air Temperature Lookup Table Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MultivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mode 1 Supply Air Humidity Ratio Lookup Table Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MultivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mode 1 System Electric Power Lookup Table Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MultivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mode 1 Supply Fan Electric Power Lookup Table Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MultivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mode 1 External Static Pressure Lookup Table Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MultivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mode 1 System Second Fuel Consumption Lookup Table Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MultivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mode 1 System Third Fuel Consumption Lookup Table Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MultivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mode 1 System Water Use Lookup Table Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MultivariateFunctions"}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mode 1 Minimum Outdoor Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mode 1 Maximum Outdoor Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kgWater/kgDryAir",0,0.1,"0.00",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mode 1 Minimum Outdoor Air Humidity Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kgWater/kgDryAir",0,0.1,"0.10",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mode 1 Maximum Outdoor Air Humidity Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent",0,100,"0.00",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mode 1 Minimum Outdoor Air Relative Humidity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent",0,100,"100.00",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mode 1 Maximum Outdoor Air Relative Humidity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mode 1 Minimum Return Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mode 1 Maximum Return Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kgWater/kgDryAir",0,0.1,"0.00",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mode 1 Minimum Return Air Humidity Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kgWater/kgDryAir",0,0.1,"0.10",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mode 1 Maximum Return Air Humidity Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent",0,100,"0.00",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mode 1 Minimum Return Air Relative Humidity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent",0,100,"100.00",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mode 1 Maximum Return Air Relative Humidity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.10",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mode 1 Minimum Outdoor Air Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.00",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mode 1 Maximum Outdoor Air Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.10",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mode 1 Minimum Supply Air Mass Flow Rate Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.00",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mode 1 Maximum Supply Air Mass Flow Rate Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},true,657 ) },
            {"ZoneHVAC:OutdoorAirUnit", () => new IdfObject("ZoneHVAC:OutdoorAirUnit",false,IdfObjectFormat.NotSpecified,false,18,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ZoneEquipmentNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FansCVandVAV"}),new IdfField(false,"",0,0,"DrawThrough",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"BlowThrough","DrawThrough"},"Supply Fan Placement",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Exhaust Fan Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FansCVandVAV"}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Exhaust Air Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Exhaust Air Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"NeutralControl",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"NeutralControl","TemperatureControl"},"Unit Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"High Air Control Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Air Control Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"AirOutlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"AirInlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply FanOutlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Unit List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"OutdoorAirUnitEquipmentLists"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Manager List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SystemAvailabilityManagerLists"})},false,19 ) },
            {"ZoneHVAC:OutdoorAirUnit:EquipmentList", () => new IdfObject("ZoneHVAC:OutdoorAirUnit:EquipmentList",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"OutdoorAirUnitEquipmentLists"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:Electric","Coil:Heating:Fuel","Coil:Heating:Steam","Coil:Heating:Water","Coil:Cooling:Water","Coil:Cooling:Water:DetailedGeometry","CoilSystem:Cooling:Water:HeatexchangerAssisted","CoilSystem:Cooling:DX","CoilSystem:Heating:DX","HeatExchanger:AirToAir:FlatPlate","HeatExchanger:AirToAir:SensibleAndLatent","Dehumidifier:Desiccant:NoFans","AirLoopHVAC:UnitarySystem"},"Component 1 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:Electric","Coil:Heating:Fuel","Coil:Heating:Steam","Coil:Heating:Water","Coil:Cooling:Water","Coil:Cooling:Water:DetailedGeometry","CoilSystem:Cooling:Water:HeatexchangerAssisted","CoilSystem:Cooling:DX","CoilSystem:Heating:DX","HeatExchanger:AirToAir:FlatPlate","HeatExchanger:AirToAir:SensibleAndLatent","Dehumidifier:Desiccant:NoFans","AirLoopHVAC:UnitarySystem"},"Component 2 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 2 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:Electric","Coil:Heating:Fuel","Coil:Heating:Steam","Coil:Heating:Water","Coil:Cooling:Water","Coil:Cooling:Water:DetailedGeometry","CoilSystem:Cooling:Water:HeatexchangerAssisted","CoilSystem:Cooling:DX","CoilSystem:Heating:DX","HeatExchanger:AirToAir:FlatPlate","HeatExchanger:AirToAir:SensibleAndLatent","Dehumidifier:Desiccant:NoFans","AirLoopHVAC:UnitarySystem"},"Component 3 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 3 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:Electric","Coil:Heating:Fuel","Coil:Heating:Steam","Coil:Heating:Water","Coil:Cooling:Water","Coil:Cooling:Water:DetailedGeometry","CoilSystem:Cooling:Water:HeatexchangerAssisted","CoilSystem:Cooling:DX","CoilSystem:Heating:DX","HeatExchanger:AirToAir:FlatPlate","HeatExchanger:AirToAir:SensibleAndLatent","Dehumidifier:Desiccant:NoFans","AirLoopHVAC:UnitarySystem"},"Component 4 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 4 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:Electric","Coil:Heating:Fuel","Coil:Heating:Steam","Coil:Heating:Water","Coil:Cooling:Water","Coil:Cooling:Water:DetailedGeometry","CoilSystem:Cooling:Water:HeatexchangerAssisted","CoilSystem:Cooling:DX","CoilSystem:Heating:DX","HeatExchanger:AirToAir:FlatPlate","HeatExchanger:AirToAir:SensibleAndLatent","Dehumidifier:Desiccant:NoFans","AirLoopHVAC:UnitarySystem"},"Component 5 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 5 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:Electric","Coil:Heating:Fuel","Coil:Heating:Steam","Coil:Heating:Water","Coil:Cooling:Water","Coil:Cooling:Water:DetailedGeometry","CoilSystem:Cooling:Water:HeatexchangerAssisted","CoilSystem:Cooling:DX","CoilSystem:Heating:DX","HeatExchanger:AirToAir:FlatPlate","HeatExchanger:AirToAir:SensibleAndLatent","Dehumidifier:Desiccant:NoFans","AirLoopHVAC:UnitarySystem"},"Component 6 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 6 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:Electric","Coil:Heating:Fuel","Coil:Heating:Steam","Coil:Heating:Water","Coil:Cooling:Water","Coil:Cooling:Water:DetailedGeometry","CoilSystem:Cooling:Water:HeatexchangerAssisted","CoilSystem:Cooling:DX","CoilSystem:Heating:DX","HeatExchanger:AirToAir:FlatPlate","HeatExchanger:AirToAir:SensibleAndLatent","Dehumidifier:Desiccant:NoFans","AirLoopHVAC:UnitarySystem"},"Component 7 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 7 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:Electric","Coil:Heating:Fuel","Coil:Heating:Steam","Coil:Heating:Water","Coil:Cooling:Water","Coil:Cooling:Water:DetailedGeometry","CoilSystem:Cooling:Water:HeatexchangerAssisted","CoilSystem:Cooling:DX","CoilSystem:Heating:DX","HeatExchanger:AirToAir:FlatPlate","HeatExchanger:AirToAir:SensibleAndLatent","Dehumidifier:Desiccant:NoFans","AirLoopHVAC:UnitarySystem"},"Component 8 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 8 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,17 ) },
            {"ZoneHVAC:TerminalUnit:VariableRefrigerantFlow", () => new IdfObject("ZoneHVAC:TerminalUnit:VariableRefrigerantFlow",false,IdfObjectFormat.NotSpecified,false,19,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Terminal Unit Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ZoneTerminalUnitNames","DOAToZonalUnit","ZoneEquipmentNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Terminal Unit Availability Schedule",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Terminal Unit Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Terminal Unit Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"No Cooling Supply Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"No Heating Supply Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Outdoor Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Outdoor Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"No Load Outdoor Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Fan Operating Mode Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"BlowThrough",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"BlowThrough","DrawThrough"},"Supply Air Fan Placement",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Fan:ConstantVolume",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fan:SystemModel","Fan:OnOff","Fan:ConstantVolume","Fan:VariableVolume"},"Supply Air Fan Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Fan Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FansCVandOnOffandVAV"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"OutdoorAir:Mixer"},"Outside Air Mixer Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outside Air Mixer Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"OutdoorAirMixers"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Cooling:DX:VariableRefrigerantFlow","Coil:Cooling:DX:VariableRefrigerantFlow:FluidTemperatureControl"},"Cooling Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CoolingCoilsDXVarRefrigFlow","CoolingCoilsDXVarRefrigFlowFluidTemperatureControl"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:DX:VariableRefrigerantFlow","Coil:Heating:DX:VariableRefrigerantFlow:FluidTemperatureControl"},"Heating Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatingCoilsDXVarRefrigFlow","HeatingCoilsDXVarRefrigFlowFluidTemperatureControl"}),new IdfField(false,"W",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Terminal Unit On Parasitic Electric Energy Use",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Terminal Unit Off Parasitic Electric Energy Use",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",1,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Heating Capacity Sizing Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Manager List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SystemAvailabilityManagerLists"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification ZoneHVAC Sizing Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationZoneHVACSizingName"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:Fuel","Coil:Heating:Electric","Coil:Heating:Water","Coil:Heating:Steam"},"Supplemental Heating Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supplemental Heating Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatingCoilName"}),new IdfField(true,"C",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Supply Air Temperature from Supplemental Heater",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,21,"21.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Dry-Bulb Temperature for Supplemental Heater Operation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,30 ) },
            {"ZoneHVAC:Baseboard:RadiantConvective:Water", () => new IdfObject("ZoneHVAC:Baseboard:RadiantConvective:Water",false,IdfObjectFormat.NotSpecified,false,12,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validBranchEquipmentNames","ZoneEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",20,150,"87.78",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Average Water Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/s",0,10,"0.063",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Water Mass Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"HeatingDesignCapacity",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HeatingDesignCapacity","CapacityPerFloorArea","FractionOfAutosizedHeatingCapacity"},"Heating Design Capacity Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Design Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Design Capacity Per Floor Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Autosized Heating Design Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Water Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.001",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Convergence Tolerance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction Radiant",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Radiant Energy Incident on People",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Radiant Energy to Surface 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},true,214 ) },
            {"ZoneHVAC:Baseboard:RadiantConvective:Steam", () => new IdfObject("ZoneHVAC:Baseboard:RadiantConvective:Steam",false,IdfObjectFormat.NotSpecified,false,11,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validBranchEquipmentNames","ZoneEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"HeatingDesignCapacity",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HeatingDesignCapacity","CapacityPerFloorArea","FractionOfAutosizedHeatingCapacity"},"Heating Design Capacity Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Design Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Design Capacity Per Floor Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Autosized Heating Design Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",1,0,"5.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Degree of SubCooling",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Steam Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.001",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Convergence Tolerance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction Radiant",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Radiant Energy Incident on People",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Radiant Energy to Surface 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},true,213 ) },
            {"ZoneHVAC:Baseboard:RadiantConvective:Electric", () => new IdfObject("ZoneHVAC:Baseboard:RadiantConvective:Electric",false,IdfObjectFormat.NotSpecified,false,8,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ZoneEquipmentNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"HeatingDesignCapacity",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HeatingDesignCapacity","CapacityPerFloorArea","FractionOfAutosizedHeatingCapacity"},"Heating Design Capacity Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Design Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Design Capacity Per Floor Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Autosized Heating Design Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction Radiant",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Radiant Energy Incident on People",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Radiant Energy to Surface 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},true,209 ) },
            {"ZoneHVAC:CoolingPanel:RadiantConvective:Water", () => new IdfObject("ZoneHVAC:CoolingPanel:RadiantConvective:Water",false,IdfObjectFormat.NotSpecified,false,18,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ZoneEquipmentNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"5.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Inlet Water Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"24.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Inlet Space Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/s",0,0,"0.063",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Water Mass Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"CoolingDesignCapacity",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","CoolingDesignCapacity","CapacityPerFloorArea","FractionOfAutosizedCoolingCapacity"},"Cooling Design Capacity Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Design Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Design Capacity Per Floor Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Autosized Cooling Design Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Chilled Water Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"MeanAirTemperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"MeanAirTemperature","MeanRadiantTemperature","OperativeTemperature","OutdoorDryBulbTemperature","OutdoorWetBulbTemperature"},"Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0.5,0,"0.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Control Throttling Range",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Control Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"SimpleOff",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Off","SimpleOff","VariableOff"},"Condensation Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condensation Control Dewpoint Offset",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction Radiant",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Radiant Energy Incident on People",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Radiant Energy to Surface 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},true,219 ) },
            {"ZoneHVAC:Baseboard:Convective:Water", () => new IdfObject("ZoneHVAC:Baseboard:Convective:Water",false,IdfObjectFormat.NotSpecified,false,10,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validBranchEquipmentNames","ZoneEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"HeatingDesignCapacity",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HeatingDesignCapacity","CapacityPerFloorArea","FractionOfAutosizedHeatingCapacity"},"Heating Design Capacity Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Design Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Design Capacity Per Floor Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Autosized Heating Design Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W/K",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"U-Factor Times Area Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Water Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.001",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Convergence Tolerance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,11 ) },
            {"ZoneHVAC:Baseboard:Convective:Electric", () => new IdfObject("ZoneHVAC:Baseboard:Convective:Electric",false,IdfObjectFormat.NotSpecified,false,7,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ZoneEquipmentNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"HeatingDesignCapacity",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HeatingDesignCapacity","CapacityPerFloorArea","FractionOfAutosizedHeatingCapacity"},"Heating Design Capacity Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Design Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Design Capacity Per Floor Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Autosized Heating Design Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Efficiency",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,7 ) },
            {"ZoneHVAC:LowTemperatureRadiant:VariableFlow", () => new IdfObject("ZoneHVAC:LowTemperatureRadiant:VariableFlow",false,IdfObjectFormat.NotSpecified,false,29,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validBranchEquipmentNames","ZoneEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface Name or Radiant Surface Group Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"RadiantSurfaceNames","RadiantGroupNames"}),new IdfField(false,"m",0,0,"0.013",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hydronic Tubing Inside Diameter",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hydronic Tubing Length",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"MeanAirTemperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"MeanAirTemperature","MeanRadiantTemperature","OperativeTemperature","OutdoorDryBulbTemperature","OutdoorWetBulbTemperature"},"Temperature Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"HeatingDesignCapacity",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HeatingDesignCapacity","CapacityPerFloorArea","FractionOfAutosizedHeatingCapacity"},"Heating Design Capacity Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Design Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Design Capacity Per Floor Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Autosized Heating Design Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Hot Water Flow",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0.5,0,"0.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Control Throttling Range",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Control Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"CoolingDesignCapacity",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","CoolingDesignCapacity","CapacityPerFloorArea","FractionOfAutosizedCoolingCapacity"},"Cooling Design Capacity Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Design Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Design Capacity Per Floor Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Autosized Cooling Design Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Cold Water Flow",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0.5,0,"0.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Control Throttling Range",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Control Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"SimpleOff",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Off","SimpleOff","VariableOff"},"Condensation Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condensation Control Dewpoint Offset",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"OnePerSurface",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"OnePerSurface","CalculateFromCircuitLength"},"Number of Circuits",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"106.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Circuit Length",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,29 ) },
            {"ZoneHVAC:LowTemperatureRadiant:ConstantFlow", () => new IdfObject("ZoneHVAC:LowTemperatureRadiant:ConstantFlow",false,IdfObjectFormat.NotSpecified,false,29,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validBranchEquipmentNames","ZoneEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface Name or Radiant Surface Group Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"RadiantSurfaceNames","RadiantGroupNames"}),new IdfField(false,"m",0,0,"0.013",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hydronic Tubing Inside Diameter",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hydronic Tubing Length",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"MeanAirTemperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"MeanAirTemperature","MeanRadiantTemperature","OperativeTemperature","OutdoorDryBulbTemperature","OutdoorWetBulbTemperature"},"Temperature Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pump Flow Rate Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"Pa",0,0,"179352",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Pump Head",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Power Consumption",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Motor Efficiency",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Motor Inefficiencies to Fluid Stream",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating High Water Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Low Water Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating High Control Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Low Control Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling High Water Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Low Water Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling High Control Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Low Control Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"SimpleOff",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Off","SimpleOff","VariableOff"},"Condensation Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condensation Control Dewpoint Offset",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"OnePerSurface",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"OnePerSurface","CalculateFromCircuitLength"},"Number of Circuits",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"106.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Circuit Length",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,29 ) },
            {"ZoneHVAC:LowTemperatureRadiant:Electric", () => new IdfObject("ZoneHVAC:LowTemperatureRadiant:Electric",false,IdfObjectFormat.NotSpecified,false,11,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ZoneEquipmentNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface Name or Radiant Surface Group Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"RadiantSurfaceNames","RadiantGroupNames"}),new IdfField(false,"",0,0,"HeatingDesignCapacity",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HeatingDesignCapacity","CapacityPerFloorArea","FractionOfAutosizedHeatingCapacity"},"Heating Design Capacity Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Design Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Design Capacity Per Floor Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Autosized Heating Design Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"MeanAirTemperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"MeanAirTemperature","MeanRadiantTemperature","OperativeTemperature","OutdoorDryBulbTemperature","OutdoorWetBulbTemperature"},"Temperature Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Throttling Range",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Setpoint Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,11 ) },
            {"ZoneHVAC:LowTemperatureRadiant:SurfaceGroup", () => new IdfObject("ZoneHVAC:LowTemperatureRadiant:SurfaceGroup",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"RadiantGroupNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"RadiantSurfaceNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Flow Fraction for Surface 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,201 ) },
            {"ZoneHVAC:HighTemperatureRadiant", () => new IdfObject("ZoneHVAC:HighTemperatureRadiant",false,IdfObjectFormat.NotSpecified,false,14,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ZoneEquipmentNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,"HeatingDesignCapacity",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HeatingDesignCapacity","CapacityPerFloorArea","FractionOfAutosizedHeatingCapacity"},"Heating Design Capacity Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Design Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Design Capacity Per Floor Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Autosized Heating Design Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"NaturalGas","Electricity"},"Fuel Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Combustion Efficiency",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Input Converted to Radiant Energy",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Input Converted to Latent Energy",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Input that Is Lost",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"OperativeTemperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"MeanAirTemperature","MeanRadiantTemperature","OperativeTemperature","MeanAirTemperatureSetpoint","MeanRadiantTemperatureSetpoint","OperativeTemperatureSetpoint"},"Temperature Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"2.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Throttling Range",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Setpoint Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Radiant Energy Incident on People",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllHeatTranSurfNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Radiant Energy to Surface 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},true,216 ) },
            {"ZoneHVAC:VentilatedSlab", () => new IdfObject("ZoneHVAC:VentilatedSlab",false,IdfObjectFormat.NotSpecified,false,32,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ZoneEquipmentNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface Name or Radiant Surface Group Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"RadiantSurfaceNames","VentSlabGroupNames"}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"VariablePercent","FixedTemperature","FixedAmount"},"Outdoor Air Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Air Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Air Fraction or Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"SlabOnly",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SlabOnly","SlabAndZone","SeriesSlabs"},"System Configuration Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.05",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hollow Core Inside Diameter",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hollow Core Length",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Cores",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"OutdoorDryBulbTemperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"MeanAirTemperature","MeanRadiantTemperature","OperativeTemperature","OutdoorDryBulbTemperature","OutdoorWetBulbTemperature","SurfaceTemperature","ZoneAirDewPointTemperature"},"Temperature Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating High Air Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Low Air Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating High Control Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Low Control Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling High Air Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Low Air Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling High Control Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Low Control Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Air Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Slab In Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Supply Air Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relief Air Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Mixer Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FansCV"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","Heating","Cooling","HeatingAndCooling"},"Coil Option Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:Water","Coil:Heating:Electric","Coil:Heating:Fuel","Coil:Heating:Steam"},"Heating Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatingCoilName"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hot Water or Steam Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Cooling:Water","Coil:Cooling:Water:DetailedGeometry","CoilSystem:Cooling:Water:HeatExchangerAssisted"},"Cooling Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CoolingCoilsWater"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cold Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Manager List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SystemAvailabilityManagerLists"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification ZoneHVAC Sizing Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationZoneHVACSizingName"})},false,40 ) },
            {"ZoneHVAC:VentilatedSlab:SlabGroup", () => new IdfObject("ZoneHVAC:VentilatedSlab:SlabGroup",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"VentSlabGroupNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"RadiantSurfaceNames"}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Core Diameter for Surface 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Core Length for Surface 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Core Numbers for Surface 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Slab Inlet Node Name for Surface 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Slab Outlet Node Name for Surface 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,71 ) },
            {"AirTerminal:SingleDuct:Uncontrolled", () => new IdfObject("AirTerminal:SingleDuct:Uncontrolled",false,IdfObjectFormat.NotSpecified,true,4,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ZoneEquipmentNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Supply Air Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Outdoor Air Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationOutdoorAirNames"}),new IdfField(false,"",0,0,"CurrentOccupancy",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"CurrentOccupancy","DesignOccupancy"},"Per Person Ventilation Rate Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Air Terminal Sizing Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationAirTerminalSizingName"})},false,7 ) },
            {"AirTerminal:SingleDuct:ConstantVolume:Reheat", () => new IdfObject("AirTerminal:SingleDuct:ConstantVolume:Reheat",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AirTerminalUnitNames","AFNTerminalUnitNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:Water","Coil:Heating:Electric","Coil:Heating:Fuel","Coil:Heating:Steam"},"Reheat Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reheat Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatingCoilName"}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Hot Water or Steam Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Hot Water or Steam Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.001",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Convergence Tolerance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Reheat Air Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,11 ) },
            {"AirTerminal:SingleDuct:ConstantVolume:NoReheat", () => new IdfObject("AirTerminal:SingleDuct:ConstantVolume:NoReheat",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AirTerminalUnitNames","AFNTerminalUnitNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Outdoor Air Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationOutdoorAirNames"}),new IdfField(false,"",0,0,"CurrentOccupancy",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"CurrentOccupancy","DesignOccupancy"},"Per Person Ventilation Rate Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,7 ) },
            {"AirTerminal:SingleDuct:VAV:NoReheat", () => new IdfObject("AirTerminal:SingleDuct:VAV:NoReheat",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AirTerminalUnitNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Constant",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Constant","FixedFlowRate","Scheduled"},"Zone Minimum Air Flow Input Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Constant Minimum Air Flow Fraction",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fixed Minimum Air Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Air Flow Fraction Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Outdoor Air Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationOutdoorAirNames"})},false,10 ) },
            {"AirTerminal:SingleDuct:VAV:Reheat", () => new IdfObject("AirTerminal:SingleDuct:VAV:Reheat",false,IdfObjectFormat.NotSpecified,false,18,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AirTerminalUnitNames","AFNTerminalUnitNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Damper Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Constant",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Constant","FixedFlowRate","Scheduled"},"Zone Minimum Air Flow Input Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Constant Minimum Air Flow Fraction",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fixed Minimum Air Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Air Flow Fraction Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:Water","Coil:Heating:Electric","Coil:Heating:Fuel","Coil:Heating:Steam"},"Reheat Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reheat Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatingCoilName"}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Hot Water or Steam Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Hot Water or Steam Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.001",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Convergence Tolerance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ReverseWithLimits",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Normal","Reverse","ReverseWithLimits"},"Damper Heating Action",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-m2",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Flow per Zone Floor Area During Reheat",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Flow Fraction During Reheat",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Reheat Air Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Outdoor Air Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationOutdoorAirNames"})},false,20 ) },
            {"AirTerminal:SingleDuct:VAV:Reheat:VariableSpeedFan", () => new IdfObject("AirTerminal:SingleDuct:VAV:Reheat:VariableSpeedFan",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AirTerminalUnitNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Cooling Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Heating Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Minimum Air Flow Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fan:SystemModel","Fan:VariableVolume"},"Fan Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FansVAV"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:Water","Coil:Heating:Electric","Coil:Heating:Fuel","Coil:Heating:Steam"},"Heating Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatingCoilName"}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Hot Water or Steam Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Hot Water or Steam Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.001",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Convergence Tolerance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,14 ) },
            {"AirTerminal:SingleDuct:VAV:HeatAndCool:NoReheat", () => new IdfObject("AirTerminal:SingleDuct:VAV:HeatAndCool:NoReheat",false,IdfObjectFormat.NotSpecified,false,6,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AirTerminalUnitNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Minimum Air Flow Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,6 ) },
            {"AirTerminal:SingleDuct:VAV:HeatAndCool:Reheat", () => new IdfObject("AirTerminal:SingleDuct:VAV:HeatAndCool:Reheat",false,IdfObjectFormat.NotSpecified,false,11,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AirTerminalUnitNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Damper Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Minimum Air Flow Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:Water","Coil:Heating:Electric","Coil:Heating:Fuel","Coil:Heating:Steam"},"Reheat Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reheat Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatingCoilName"}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Hot Water or Steam Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Hot Water or Steam Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.001",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Convergence Tolerance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Reheat Air Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,13 ) },
            {"AirTerminal:SingleDuct:SeriesPIU:Reheat", () => new IdfObject("AirTerminal:SingleDuct:SeriesPIU:Reheat",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AirTerminalUnitNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Primary Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,1,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Primary Air Flow Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Secondary Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reheat Coil Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Mixer Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneMixers"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FansCV"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:Water","Coil:Heating:Electric","Coil:Heating:Fuel","Coil:Heating:Steam"},"Reheat Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reheat Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatingCoilName"}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Hot Water or Steam Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Hot Water or Steam Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.001",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Convergence Tolerance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,16 ) },
            {"AirTerminal:SingleDuct:ParallelPIU:Reheat", () => new IdfObject("AirTerminal:SingleDuct:ParallelPIU:Reheat",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AirTerminalUnitNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Primary Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Secondary Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,1,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Primary Air Flow Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,1,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan On Flow Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Secondary Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reheat Coil Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Mixer Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneMixers"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FansCV"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:Water","Coil:Heating:Electric","Coil:Heating:Fuel","Coil:Heating:Steam"},"Reheat Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reheat Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatingCoilName"}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Hot Water or Steam Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Hot Water or Steam Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.001",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Convergence Tolerance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,17 ) },
            {"AirTerminal:SingleDuct:ConstantVolume:FourPipeInduction", () => new IdfObject("AirTerminal:SingleDuct:ConstantVolume:FourPipeInduction",false,IdfObjectFormat.NotSpecified,false,18,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AirTerminalUnitNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Total Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"2.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Induction Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Induced Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:Water"},"Heating Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatingCoilName"}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Hot Water Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Hot Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.001",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Convergence Tolerance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Cooling:Water","Coil:Cooling:Water:DetailedGeometry"},"Cooling Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CoolingCoilName"}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Cold Water Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Cold Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.001",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Convergence Tolerance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Mixer Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneMixers"})},false,18 ) },
            {"AirTerminal:SingleDuct:ConstantVolume:FourPipeBeam", () => new IdfObject("AirTerminal:SingleDuct:ConstantVolume:FourPipeBeam",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AirTerminalUnitNames","validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Primary Air Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Primary Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Primary Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chilled Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chilled Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hot Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hot Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Primary Air Volume Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Chilled Water Volume Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Hot Water Volume Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Total Beam Length",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-m",0,0,"0.035",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Primary Air Flow Rate per Beam Length",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m",0,0,"600.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Beam Rated Cooling Capacity per Beam Length",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"10.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Beam Rated Cooling Room Air Chilled Water Temperature Difference",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-m",0,0,"0.00005",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Beam Rated Chilled Water Volume Flow Rate per Beam Length",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Beam Cooling Capacity Temperature Difference Modification Factor Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Beam Cooling Capacity Air Flow Modification Factor Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Beam Cooling Capacity Chilled Water Flow Modification Factor Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W/m",0,0,"1500.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Beam Rated Heating Capacity per Beam Length",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"27.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Beam Rated Heating Room Air Hot Water Temperature Difference",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-m",0,0,"0.00005",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Beam Rated Hot Water Volume Flow Rate per Beam Length",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Beam Heating Capacity Temperature Difference Modification Factor Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Beam Heating Capacity Air Flow Modification Factor Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Beam Heating Capacity Hot Water Flow Modification Factor Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"})},false,27 ) },
            {"AirTerminal:SingleDuct:ConstantVolume:CooledBeam", () => new IdfObject("AirTerminal:SingleDuct:ConstantVolume:CooledBeam",false,IdfObjectFormat.NotSpecified,false,23,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AirTerminalUnitNames","validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Active","Passive"},"Cooled Beam Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chilled Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chilled Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Volumetric Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Total Chilled Water Volumetric Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Beams",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Beam Length",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"15.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Inlet Water Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"17.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Outlet Water Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/m",0,0,"5.422",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coil Surface Area per Coil Length",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"15.3",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Model Parameter a",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Model Parameter n1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.84",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Model Parameter n2",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.12",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Model Parameter n3",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2/m",0,0,"0.171",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Model Parameter a0",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.0057",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Model Parameter K1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.4",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Model Parameter n",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,4,"Autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient of Induction Kin",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.0145",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Leaving Pipe Inside Diameter",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,23 ) },
            {"AirTerminal:SingleDuct:Mixer", () => new IdfObject("AirTerminal:SingleDuct:Mixer",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AirTerminalUnitNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ZoneHVAC:FourPipeFanCoil","ZoneHVAC:WaterToAirHeatPump","ZoneHVAC:PackagedTerminalAirConditioner","ZoneHVAC:PackagedTerminalHeatPump","ZoneHVAC:TerminalUnit:VariableRefrigerantFlow","ZoneHVAC:UnitVentilator","AirLoopHVAC:UnitarySystem"},"ZoneHVAC Unit Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"ZoneHVAC Unit Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DOAToZonalUnit"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mixer Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mixer Primary Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mixer Secondary Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"InletSide","SupplySide"},"Mixer Connection Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Outdoor Air Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationOutdoorAirNames"}),new IdfField(false,"",0,0,"CurrentOccupancy",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"CurrentOccupancy","DesignOccupancy"},"Per Person Ventilation Rate Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,9 ) },
            {"AirTerminal:DualDuct:ConstantVolume", () => new IdfObject("AirTerminal:DualDuct:ConstantVolume",false,IdfObjectFormat.NotSpecified,false,6,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AirTerminalUnitNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hot Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cold Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,6 ) },
            {"AirTerminal:DualDuct:VAV", () => new IdfObject("AirTerminal:DualDuct:VAV",false,IdfObjectFormat.NotSpecified,false,7,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AirTerminalUnitNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hot Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cold Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Damper Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Minimum Air Flow Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Outdoor Air Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationOutdoorAirNames"})},false,8 ) },
            {"AirTerminal:DualDuct:VAV:OutdoorAir", () => new IdfObject("AirTerminal:DualDuct:VAV:OutdoorAir",false,IdfObjectFormat.NotSpecified,false,7,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AirTerminalUnitNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Recirculated Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Terminal Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Outdoor Air Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationOutdoorAirNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"CurrentOccupancy","DesignOccupancy"},"Per Person Ventilation Rate Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,8 ) },
            {"ZoneHVAC:AirDistributionUnit", () => new IdfObject("ZoneHVAC:AirDistributionUnit",false,IdfObjectFormat.NotSpecified,false,4,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ZoneEquipmentNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Distribution Unit Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"AirTerminal:DualDuct:ConstantVolume","AirTerminal:DualDuct:VAV","AirTerminal:SingleDuct:ConstantVolume:Reheat","AirTerminal:SingleDuct:ConstantVolume:NoReheat","AirTerminal:SingleDuct:ConstantVolume:FourPipeBeam","AirTerminal:SingleDuct:VAV:Reheat","AirTerminal:SingleDuct:VAV:NoReheat","AirTerminal:SingleDuct:SeriesPIU:Reheat","AirTerminal:SingleDuct:ParallelPIU:Reheat","AirTerminal:SingleDuct:ConstantVolume:FourPipeInduction","AirTerminal:SingleDuct:VAV:Reheat:VariableSpeedFan","AirTerminal:SingleDuct:VAV:HeatAndCool:Reheat","AirTerminal:SingleDuct:VAV:HeatAndCool:NoReheat","AirTerminal:SingleDuct:ConstantVolume:CooledBeam","AirTerminal:DualDuct:VAV:OutdoorAir","AirTerminal:SingleDuct:UserDefined","AirTerminal:SingleDuct:Mixer"},"Air Terminal Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Terminal Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AirTerminalUnitNames"}),new IdfField(false,"",0,0.3,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Upstream Leakage Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0.3,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Constant Downstream Leakage Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Air Terminal Sizing Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationAirTerminalSizingName"})},false,7 ) },
            {"ZoneHVAC:EquipmentList", () => new IdfObject("ZoneHVAC:EquipmentList",false,IdfObjectFormat.NotSpecified,false,8,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ZoneEquipmentLists"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SequentialLoad",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SequentialLoad","UniformLoad","UniformPLR","SequentialUniformPLR"},"Load Distribution Scheme",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ZoneHVAC:TerminalUnit:VariableRefrigerantFlow","ZoneHVAC:AirDistributionUnit","AirTerminal:SingleDuct:Uncontrolled","ZoneHVAC:EnergyRecoveryVentilator","ZoneHVAC:EvaporativeCoolerUnit","ZoneHVAC:HybridUnitaryHVAC","ZoneHVAC:ForcedAir:UserDefined","ZoneHVAC:FourPipeFanCoil","ZoneHVAC:OutdoorAirUnit","ZoneHVAC:PackagedTerminalAirConditioner","ZoneHVAC:PackagedTerminalHeatPump","ZoneHVAC:UnitHeater","ZoneHVAC:UnitVentilator","ZoneHVAC:VentilatedSlab","ZoneHVAC:WaterToAirHeatPump","ZoneHVAC:WindowAirConditioner","ZoneHVAC:Baseboard:RadiantConvective:Electric","ZoneHVAC:Baseboard:RadiantConvective:Water","ZoneHVAC:Baseboard:RadiantConvective:Steam","ZoneHVAC:CoolingPanel:RadiantConvective:Water","ZoneHVAC:Baseboard:Convective:Electric","ZoneHVAC:Baseboard:Convective:Water","ZoneHVAC:HighTemperatureRadiant","ZoneHVAC:LowTemperatureRadiant:VariableFlow","ZoneHVAC:LowTemperatureRadiant:ConstantFlow","ZoneHVAC:LowTemperatureRadiant:Electric","ZoneHVAC:Dehumidifier:DX","ZoneHVAC:IdealLoadsAirSystem","ZoneHVAC:RefrigerationChillerSet","Fan:ZoneExhaust","WaterHeater:HeatPump:PumpedCondenser","WaterHeater:HeatPump:WrappedCondenser","HeatExchanger:AirToAir:FlatPlate","AirLoopHVAC:UnitarySystem"},"Zone Equipment 1 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Equipment 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneEquipmentNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Equipment 1 Cooling Sequence",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Equipment 1 Heating or No-Load Sequence",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Equipment 1 Sequential Cooling Fraction Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Equipment 1 Sequential Heating Fraction Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},true,110 ) },
            {"ZoneHVAC:EquipmentConnections", () => new IdfObject("ZoneHVAC:EquipmentConnections",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Conditioning Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneEquipmentLists"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Air Inlet Node or NodeList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Air Exhaust Node or NodeList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Air Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Return Air Node or NodeList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Return Air Node 1 Flow Rate Fraction Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Return Air Node 1 Flow Rate Basis Node or NodeList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,8 ) },
            {"Fan:SystemModel", () => new IdfObject("Fan:SystemModel",false,IdfObjectFormat.NotSpecified,false,14,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"Fans","FansCV","FansCVandOnOff","FansVAV","FansCVandVAV","FansCVandOnOffandVAV","validBranchEquipmentNames","validOASysEquipmentNames"},new List<string>{"validBranchEquipmentTypes","validOASysEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Maximum Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Discrete",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Continuous","Discrete"},"Speed Control Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Electric Power Minimum Flow Rate Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"Pa",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Pressure Rise",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Motor Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Motor In Air Stream Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Electric Power Consumption",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"PowerPerFlowPerPressure",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"PowerPerFlow","PowerPerFlowPerPressure","TotalEfficiencyAndPressure"},"Design Power Sizing Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/(m3/s)",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Electric Power Per Unit Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/((m3/s)-Pa)",0,0,"1.66667",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Electric Power Per Unit Flow Rate Per Unit Pressure",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Total Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Electric Power Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"Pa",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Night Ventilation Mode Pressure Rise",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Night Ventilation Mode Flow Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Motor Loss Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Motor Loss Radiative Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Speeds",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Flow Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Electric Power Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},true,30 ) },
            {"Fan:ConstantVolume", () => new IdfObject("Fan:ConstantVolume",false,IdfObjectFormat.NotSpecified,false,9,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"Fans","FansCV","FansCVandOnOff","FansCVandVAV","FansCVandOnOffandVAV","validBranchEquipmentNames","validOASysEquipmentNames"},new List<string>{"validBranchEquipmentTypes","validOASysEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,1,"0.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Total Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"Pa",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pressure Rise",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Motor Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Motor In Airstream Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,10 ) },
            {"Fan:VariableVolume", () => new IdfObject("Fan:VariableVolume",false,IdfObjectFormat.NotSpecified,false,17,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"Fans","FansVAV","FansCVandVAV","FansOnOffandVAV","FansCVandOnOffandVAV","validBranchEquipmentNames","validOASysEquipmentNames"},new List<string>{"validBranchEquipmentTypes","validOASysEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,1,"0.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Total Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"Pa",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pressure Rise",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Fraction",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fraction","FixedFlowRate"},"Fan Power Minimum Flow Rate Input Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.25",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Power Minimum Flow Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Power Minimum Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Motor Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Motor In Airstream Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Power Coefficient 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Power Coefficient 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Power Coefficient 3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Power Coefficient 4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Power Coefficient 5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,18 ) },
            {"Fan:OnOff", () => new IdfObject("Fan:OnOff",false,IdfObjectFormat.NotSpecified,false,9,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"Fans","FansCVandOnOff","FansOnOff","FansOnOffandVAV","FansCVandOnOffandVAV"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,1,"0.6",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Total Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"Pa",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pressure Rise",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Motor Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Motor In Airstream Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Power Ratio Function of Speed Ratio Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Efficiency Ratio Function of Speed Ratio Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,12 ) },
            {"Fan:ZoneExhaust", () => new IdfObject("Fan:ZoneExhaust",false,IdfObjectFormat.NotSpecified,false,7,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"FansZoneExhaust","ZoneEquipmentNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,1,"0.6",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Total Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"Pa",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pressure Rise",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Flow Fraction Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"Coupled",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coupled","Decoupled"},"System Availability Manager Coupling Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Zone Temperature Limit Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Balanced Exhaust Fraction Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,12 ) },
            {"FanPerformance:NightVentilation", () => new IdfObject("FanPerformance:NightVentilation",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FansCVandVAV"}),new IdfField(true,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Total Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"Pa",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pressure Rise",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Motor Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Motor in Airstream Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,6 ) },
            {"Fan:ComponentModel", () => new IdfObject("Fan:ComponentModel",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"Fans","validBranchEquipmentNames","validOASysEquipmentNames"},new List<string>{"validBranchEquipmentTypes","validOASysEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Sizing Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Wheel Diameter",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Outlet Area",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Fan Static Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Euler Number at Maximum Fan Static Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Dimensionless Fan Airflow",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Motor Fan Pulley Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"N-m",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Belt Maximum Torque",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Belt Sizing Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.167",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Belt Fractional Torque Transition",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"rev/min",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Motor Maximum Speed",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Motor Output Power",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Motor Sizing Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Motor In Airstream Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Speed","Power"},"VFD Efficiency Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum VFD Output Power",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"VFD Sizing Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Pressure Rise Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Duct Static Pressure Reset Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Normalized Fan Static Efficiency Curve Name-Non-Stall Region",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Normalized Fan Static Efficiency Curve Name-Stall Region",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Normalized Dimensionless Airflow Curve Name-Non-Stall Region",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Normalized Dimensionless Airflow Curve Name-Stall Region",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Belt Efficiency Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Normalized Belt Efficiency Curve Name - Region 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Normalized Belt Efficiency Curve Name - Region 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Normalized Belt Efficiency Curve Name - Region 3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Motor Efficiency Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Normalized Motor Efficiency Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"VFD Efficiency Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,37 ) },
            {"Coil:Cooling:Water", () => new IdfObject("Coil:Cooling:Water",false,IdfObjectFormat.NotSpecified,false,15,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"CoolingCoilName","CoolingCoilsWater","CoolingCoilsWaterNoHX","AFNCoilNames","SimpleCoils","validBranchEquipmentNames","validOASysEquipmentNames"},new List<string>{"validBranchEquipmentTypes","validOASysEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Inlet Water Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Inlet Air Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Outlet Air Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kgWater/kgDryAir",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Inlet Air Humidity Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kgWater/kgDryAir",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Outlet Air Humidity Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SimpleAnalysis",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SimpleAnalysis","DetailedAnalysis"},"Type of Analysis",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"CounterFlow",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"CrossFlow","CounterFlow"},"Heat Exchanger Configuration",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condensate Collection Water Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Water Temperature Difference",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,17 ) },
            {"Coil:Cooling:Water:DetailedGeometry", () => new IdfObject("Coil:Cooling:Water:DetailedGeometry",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"CoolingCoilName","CoolingCoilsWater","CoolingCoilsWaterNoHX","AFNCoilNames","validBranchEquipmentNames","validOASysEquipmentNames"},new List<string>{"validBranchEquipmentTypes","validOASysEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Water Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tube Outside Surface Area",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Total Tube Inside Area",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fin Surface Area",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Airflow Area",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coil Depth",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fin Diameter",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,".0015",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fin Thickness",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,".01445",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tube Inside Diameter",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,".0159",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tube Outside Diameter",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",1,0,"386.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tube Thermal Conductivity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",1,0,"204.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fin Thermal Conductivity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,".0018",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fin Spacing",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,".026",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tube Depth Spacing",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"4",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Tube Rows",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Tubes per Row",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condensate Collection Water Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Water Temperature Difference",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,24 ) },
            {"Coil:Cooling:DX:SingleSpeed", () => new IdfObject("Coil:Cooling:DX:SingleSpeed",false,IdfObjectFormat.NotSpecified,false,14,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"CoolingCoilsDX","CoolingCoilsDXSingleSpeed","CoolingCoilsDXMultiModeOrSingleSpeed","DesuperHeatingCoilSources","AFNCoilNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gross Rated Total Cooling Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0.5,1,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gross Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gross Rated Cooling COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/(m3/s)",0,1250,"773.3",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Evaporator Fan Power Per Volume Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Total Cooling Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Total Cooling Capacity Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Energy Input Ratio Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Part Load Fraction Correlation Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"C",0,0,"-25.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Dry-Bulb Temperature for Compressor Operation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"s",0,3000,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Time for Condensate Removal to Begin",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,5,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ratio of Initial Moisture Evaporation Rate and Steady State Latent Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"cycles/hr",0,5,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Cycling Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"s",0,500,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Latent Capacity Time Constant",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"AirCooled",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"AirCooled","EvaporativelyCooled"},"Condenser Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporative Condenser Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporative Condenser Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporative Condenser Pump Rated Power Consumption",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Crankcase Heater Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"10.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Dry-Bulb Temperature for Crankcase Heater Operation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Water Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condensate Collection Water Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",2,0,"2.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Setpoint Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Operating Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sensible Heat Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sensible Heat Ratio Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Report ASHRAE Standard 127 Performance Ratings",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name for Condenser Placement",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"})},false,35 ) },
            {"Coil:Cooling:DX:TwoSpeed", () => new IdfObject("Coil:Cooling:DX:TwoSpeed",false,IdfObjectFormat.NotSpecified,false,20,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"CoolingCoilsDX","DesuperHeatingCoilSources","AFNCoilNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"High Speed Gross Rated Total Cooling Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0.5,1,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"High Speed Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"High Speed Gross Rated Cooling COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"High Speed Rated Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Unit Internal Static Air Pressure",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Total Cooling Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Total Cooling Capacity Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Energy Input Ratio Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Part Load Fraction Correlation Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Speed Gross Rated Total Cooling Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0.5,1,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Speed Gross Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Speed Gross Rated Cooling COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Speed Rated Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Speed Total Cooling Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Speed Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"AirCooled",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"AirCooled","EvaporativelyCooled"},"Condenser Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"-25.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Dry-Bulb Temperature for Compressor Operation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"High Speed Evaporative Condenser Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"High Speed Evaporative Condenser Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"High Speed Evaporative Condenser Pump Rated Power Consumption",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Speed Evaporative Condenser Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Speed Evaporative Condenser Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Speed Evaporative Condenser Pump Rated Power Consumption",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Water Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condensate Collection Water Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",2,0,"2.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Setpoint Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Operating Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sensible Heat Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sensible Heat Ratio Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Speed Sensible Heat Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Speed Sensible Heat Ratio Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name for Condenser Placement",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"})},false,39 ) },
            {"Coil:Cooling:DX:MultiSpeed", () => new IdfObject("Coil:Cooling:DX:MultiSpeed",false,IdfObjectFormat.NotSpecified,false,56,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"CoolingCoilsDXMultiSpeed","DesuperHeatingWaterOnlySources","AFNCoilNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"AirCooled",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"AirCooled","EvaporativelyCooled"},"Condenser Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"-25.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Dry-Bulb Temperature for Compressor Operation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Water Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condensate Collection Water Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Apply Part Load Fraction to Speeds Greater than 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Apply Latent Degradation to Speeds Greater than 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Crankcase Heater Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"10.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Dry-Bulb Temperature for Crankcase Heater Operation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",2,0,"2.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Setpoint Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Operating Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Electricity","NaturalGas","Propane","Diesel","Gasoline","FuelOil#1","FuelOil#2","OtherFuel1","OtherFuel2"},"Fuel Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",2,4,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Speeds",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Gross Rated Total Cooling Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0.5,1,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Gross Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Gross Rated Cooling COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Rated Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/(m3/s)",0,1250,"773.3",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Rated Evaporator Fan Power Per Volume Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Total Cooling Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Total Cooling Capacity Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Energy Input Ratio Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Part Load Fraction Correlation Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"s",0,3000,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Nominal Time for Condensate Removal to Begin",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,5,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Ratio of Initial Moisture Evaporation Rate and Steady State Latent Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"cycles/hr",0,5,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Maximum Cycling Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"s",0,500,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Latent Capacity Time Constant",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Rated Waste Heat Fraction of Power Input",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Waste Heat Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"dimensionless",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Evaporative Condenser Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Evaporative Condenser Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Rated Evaporative Condenser Pump Power Consumption",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Gross Rated Total Cooling Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0.5,1,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Gross Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Gross Rated Cooling COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Rated Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/(m3/s)",0,1250,"773.3",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Rated Evaporator Fan Power Per Volume Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Total Cooling Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Total Cooling Capacity Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Energy Input Ratio Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Part Load Fraction Correlation Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"s",0,3000,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Nominal Time for Condensate Removal to Begin",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,5,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Ratio of Initial Moisture Evaporation Rate and steady state Latent Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"cycles/hr",0,5,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Maximum Cycling Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"s",0,500,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Latent Capacity Time Constant",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Rated Waste Heat Fraction of Power Input",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Waste Heat Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"dimensionless",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Evaporative Condenser Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Evaporative Condenser Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Rated Evaporative Condenser Pump Power Consumption",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Gross Rated Total Cooling Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0.5,1,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Gross Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Gross Rated Cooling COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Rated Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/(m3/s)",0,1250,"773.3",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Rated Evaporator Fan Power Per Volume Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Total Cooling Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Total Cooling Capacity Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Energy Input Ratio Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Part Load Fraction Correlation Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"s",0,3000,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Nominal Time for Condensate Removal to Begin",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,5,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Ratio of Initial Moisture Evaporation Rate and steady state Latent Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"cycles/hr",0,5,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Maximum Cycling Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"s",0,500,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Latent Capacity Time Constant",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Rated Waste Heat Fraction of Power Input",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Waste Heat Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"dimensionless",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Evaporative Condenser Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Evaporative Condenser Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Rated Evaporative Condenser Pump Power Consumption",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Gross Rated Total Cooling Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0.5,1,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Gross Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Gross Rated Cooling COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Rated Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/(m3/s)",0,1250,"773.3",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Rated Evaporator Fan Power Per Volume Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Total Cooling Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Total Cooling Capacity Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Energy Input Ratio Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Part Load Fraction Correlation Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"s",0,3000,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Nominal Time for Condensate Removal to Begin",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,5,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Ratio of Initial Moisture Evaporation Rate and steady state Latent Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"cycles/hr",0,5,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Maximum Cycling Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"s",0,500,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Latent Capacity Time Constant",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Rated Waste Heat Fraction of Power Input",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Waste Heat Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"dimensionless",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Evaporative Condenser Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Evaporative Condenser Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Rated Evaporative Condenser Pump Power Consumption",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name for Condenser Placement",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"})},false,95 ) },
            {"Coil:Cooling:DX:VariableSpeed", () => new IdfObject("Coil:Cooling:DX:VariableSpeed",false,IdfObjectFormat.NotSpecified,false,31,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"CoolingCoilsDXVariableSpeed","DesuperHeatingCoilSources"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Indoor Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Indoor Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",1,10,"2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Speeds",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Speed Level",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gross Rated Total Cooling Capacity At Selected Nominal Speed Level",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Air Flow Rate At Selected Nominal Speed Level",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"s",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Time for Condensate to Begin Leaving the Coil",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Initial Moisture Evaporation Rate Divided by Steady-State AC Latent Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Energy Part Load Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"AirCooled",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"AirCooled","EvaporativelyCooled"},"Condenser Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporative Condenser Pump Rated Power Consumption",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Crankcase Heater Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"10.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Dry-Bulb Temperature for Crankcase Heater Operation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"-25.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Dry-Bulb Temperature for Compressor Operation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Water Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condensate Collection Water Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",2,0,"2.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Setpoint Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Operating Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Reference Unit Gross Rated Total Cooling Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Reference Unit Gross Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Reference Unit Gross Rated Cooling COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Reference Unit Rated Condenser Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Reference Unit Rated Pad Effectiveness of Evap Precooling",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Total Cooling Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Total Cooling Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Reference Unit Gross Rated Total Cooling Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Reference Unit Gross Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Reference Unit Gross Rated Cooling COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Reference Unit Rated Condenser Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Reference Unit Rated Pad Effectiveness of Evap Precooling",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Total Cooling Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Total Cooling Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Reference Unit Gross Rated Total Cooling Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Reference Unit Gross Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Reference Unit Gross Rated Cooling COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Reference Unit Rated Condenser Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Reference Unit Rated Pad Effectiveness of Evap Precooling",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Total Cooling Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Total Cooling Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Reference Unit Gross Rated Total Cooling Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Reference Unit Gross Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Reference Unit Gross Rated Cooling COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Reference Unit Rated Condenser Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Reference Unit Rated Pad Effectiveness of Evap Precooling",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Total Cooling Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Total Cooling Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Reference Unit Gross Rated Total Cooling Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Reference Unit Gross Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Reference Unit Gross Rated Cooling COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Reference Unit Rated Condenser Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Reference Unit Rated Pad Effectiveness of Evap Precooling",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Total Cooling Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Total Cooling Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Reference Unit Gross Rated Total Cooling Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Reference Unit Gross Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Reference Unit Gross Rated Cooling COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Reference Unit Condenser Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Reference Unit Rated Pad Effectiveness of Evap Precooling",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Total Cooling Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Total Cooling Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Reference Unit Gross Rated Total Cooling Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Reference Unit Gross Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Reference Unit Gross Rated Cooling COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Reference Unit Condenser Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Reference Unit Rated Pad Effectiveness of Evap Precooling",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Total Cooling Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Total Cooling Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Reference Unit Gross Rated Total Cooling Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Reference Unit Gross Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Reference Unit Gross Rated Cooling COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Reference Unit Condenser Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Reference Unit Rated Pad Effectiveness of Evap Precooling",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Total Cooling Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Total Cooling Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Reference Unit Gross Rated Total Cooling Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Reference Unit Gross Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Reference Unit Gross Rated Cooling COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Reference Unit Condenser Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Reference Unit Rated Pad Effectiveness of Evap Precooling",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Total Cooling Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Total Cooling Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Reference Unit Gross Rated Total Cooling Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Reference Unit Gross Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Reference Unit Gross Rated Cooling COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Reference Unit Condenser Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Reference Unit Rated Pad Effectiveness of Evap Precooling",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Total Cooling Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Total Cooling Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"})},false,121 ) },
            {"Coil:Cooling:DX:TwoStageWithHumidityControlMode", () => new IdfObject("Coil:Cooling:DX:TwoStageWithHumidityControlMode",false,IdfObjectFormat.NotSpecified,false,10,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"CoolingCoilsDX","CoolingCoilsDXMultiModeOrSingleSpeed","DesuperHeatingCoilSources","AFNCoilNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Crankcase Heater Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"10.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Dry-Bulb Temperature for Crankcase Heater Operation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,2,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Capacity Stages",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Enhanced Dehumidification Modes",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"CoilPerformance:DX:Cooling"},"Normal Mode Stage 1 Coil Performance Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Normal Mode Stage 1 Coil Performance Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CoilPerformanceDX"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"CoilPerformance:DX:Cooling"},"Normal Mode Stage 1+2 Coil Performance Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Normal Mode Stage 1+2 Coil Performance Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CoilPerformanceDX"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"CoilPerformance:DX:Cooling"},"Dehumidification Mode 1 Stage 1 Coil Performance Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dehumidification Mode 1 Stage 1 Coil Performance Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CoilPerformanceDX"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"CoilPerformance:DX:Cooling"},"Dehumidification Mode 1 Stage 1+2 Coil Performance Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dehumidification Mode 1 Stage 1+2 Coil Performance Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CoilPerformanceDX"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Water Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condensate Collection Water Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"C",0,0,"-25.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Dry-Bulb Temperature for Compressor Operation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",2,0,"2.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Setpoint Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Operating Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,22 ) },
            {"CoilPerformance:DX:Cooling", () => new IdfObject("CoilPerformance:DX:Cooling",false,IdfObjectFormat.NotSpecified,false,11,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"CoilPerformanceDX"},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gross Rated Total Cooling Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0.5,1,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gross Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gross Rated Cooling COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Air Flow Bypassed Around Coil",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Total Cooling Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Total Cooling Capacity Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Energy Input Ratio Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Part Load Fraction Correlation Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"s",0,3000,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Time for Condensate Removal to Begin",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,5,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ratio of Initial Moisture Evaporation Rate and Steady State Latent Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"cycles/hr",0,5,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Cycling Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"s",0,500,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Latent Capacity Time Constant",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"AirCooled",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"AirCooled","EvaporativelyCooled"},"Condenser Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporative Condenser Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporative Condenser Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporative Condenser Pump Rated Power Consumption",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sensible Heat Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sensible Heat Ratio Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"})},false,22 ) },
            {"Coil:Cooling:DX:VariableRefrigerantFlow", () => new IdfObject("Coil:Cooling:DX:VariableRefrigerantFlow",false,IdfObjectFormat.NotSpecified,false,9,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"CoolingCoilsDXVarRefrigFlow"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gross Rated Total Cooling Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gross Rated Sensible Heat Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Capacity Ratio Modifier Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions","BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Capacity Modifier Curve Function of Flow Fraction Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coil Air Inlet Node",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coil Air Outlet Node",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name of Water Storage Tank for Condensate Collection",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"})},false,10 ) },
            {"Coil:Heating:DX:VariableRefrigerantFlow", () => new IdfObject("Coil:Heating:DX:VariableRefrigerantFlow",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"HeatingCoilsDX","HeatingCoilsDXSingleSpeed","HeatingCoilsDXVarRefrigFlow"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gross Rated Heating Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coil Air Inlet Node",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coil Air Outlet Node",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Capacity Ratio Modifier Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions","BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Capacity Modifier Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"})},false,8 ) },
            {"Coil:Cooling:DX:VariableRefrigerantFlow:FluidTemperatureControl", () => new IdfObject("Coil:Cooling:DX:VariableRefrigerantFlow:FluidTemperatureControl",false,IdfObjectFormat.NotSpecified,false,6,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"CoolingCoilsDXVarRefrigFlowFluidTemperatureControl"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coil Air Inlet Node",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coil Air Outlet Node",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Total Cooling Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Sensible Heat Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"5.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Indoor Unit Reference Superheating",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Indoor Unit Evaporating Temperature Function of Superheating Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name of Water Storage Tank for Condensate Collection",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"})},false,9 ) },
            {"Coil:Heating:DX:VariableRefrigerantFlow:FluidTemperatureControl", () => new IdfObject("Coil:Heating:DX:VariableRefrigerantFlow:FluidTemperatureControl",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"HeatingCoilsDXVarRefrigFlowFluidTemperatureControl"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coil Air Inlet Node",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coil Air Outlet Node",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Total Heating Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"5.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Indoor Unit Reference Subcooling",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Indoor Unit Condensing Temperature Function of Subcooling Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"})},false,7 ) },
            {"Coil:Heating:Water", () => new IdfObject("Coil:Heating:Water",false,IdfObjectFormat.NotSpecified,false,15,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"HeatingCoilName","HeatingCoilsWater","AFNCoilNames","SimpleCoils","validBranchEquipmentNames","validOASysEquipmentNames"},new List<string>{"validBranchEquipmentTypes","validOASysEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"W/K",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"U-Factor Times Area Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Water Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"UFactorTimesAreaAndDesignWaterFlowRate",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"UFactorTimesAreaAndDesignWaterFlowRate","NominalCapacity"},"Performance Input Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"82.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Inlet Water Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"16.6",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Inlet Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"71.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Outlet Water Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"32.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Outlet Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Ratio for Air and Water Convection",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Water Temperature Difference",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,16 ) },
            {"Coil:Heating:Steam", () => new IdfObject("Coil:Heating:Steam",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"HeatingCoilName","validBranchEquipmentNames","validOASysEquipmentNames"},new List<string>{"validBranchEquipmentTypes","validOASysEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Steam Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",1,5,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Degree of SubCooling",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",10,0,"20.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Degree of Loop SubCooling",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"TemperatureSetpointControl","ZoneLoadControl"},"Coil Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Setpoint Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,11 ) },
            {"Coil:Heating:Electric", () => new IdfObject("Coil:Heating:Electric",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"HeatingCoilName","HeatingCoilsElectric","AFNCoilNames","validBranchEquipmentNames","validOASysEquipmentNames"},new List<string>{"validBranchEquipmentTypes","validOASysEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Setpoint Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,7 ) },
            {"Coil:Heating:Electric:MultiStage", () => new IdfObject("Coil:Heating:Electric:MultiStage",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"HeatingCoilsElectricMultiStage"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Setpoint Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",1,4,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Stages",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W/W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stage 1 Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stage 1 Nominal Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stage 2 Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stage 2 Nominal Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stage 3 Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stage 3 Nominal Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stage 4 Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stage 4 Nominal Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,14 ) },
            {"Coil:Heating:Fuel", () => new IdfObject("Coil:Heating:Fuel",false,IdfObjectFormat.NotSpecified,false,7,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"HeatingCoilName","AFNCoilNames","validBranchEquipmentNames","validOASysEquipmentNames"},new List<string>{"validBranchEquipmentTypes","validOASysEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"Gas",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Gas","NaturalGas","Propane","Diesel","Gasoline","FuelOil#1","FuelOil#2","OtherFuel1","OtherFuel2"},"Fuel Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Burner Efficiency",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Setpoint Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Parasitic Electric Load",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Part Load Fraction Correlation Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Parasitic Fuel Load",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,11 ) },
            {"Coil:Heating:Gas:MultiStage", () => new IdfObject("Coil:Heating:Gas:MultiStage",false,IdfObjectFormat.NotSpecified,false,8,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"HeatingCoilsGasMultiStage"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Setpoint Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Part Load Fraction Correlation Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Parasitic Gas Load",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",1,4,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Stages",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W/W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stage 1 Gas Burner Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stage 1 Nominal Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stage 1 Parasitic Electric Load",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stage 2 Gas Burner Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stage 2 Nominal Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stage 2 Parasitic Electric Load",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stage 3 Gas Burner Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stage 3 Nominal Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stage 3 Parasitic Electric Load",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stage 4 Gas Burner Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stage 4 Nominal Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stage 4 Parasitic Electric Load",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,20 ) },
            {"Coil:Heating:Desuperheater", () => new IdfObject("Coil:Heating:Desuperheater",false,IdfObjectFormat.NotSpecified,false,7,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"HeatingCoilsDesuperheater","AFNCoilNames","validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Reclaim Recovery Efficiency",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Cooling:DX:SingleSpeed","Coil:Cooling:DX:VariableSpeed","Coil:Cooling:DX:TwoSpeed","Coil:Cooling:DX:TwoStageWithHumidityControlMode","Refrigeration:CompressorRack","Refrigeration:Condenser:AirCooled","Refrigeration:Condenser:EvaporativeCooled","Refrigeration:Condenser:WaterCooled"},"Heating Source Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Source Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesuperHeatingCoilSources"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Setpoint Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Parasitic Electric Load",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,9 ) },
            {"Coil:Heating:DX:SingleSpeed", () => new IdfObject("Coil:Heating:DX:SingleSpeed",false,IdfObjectFormat.NotSpecified,false,21,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"HeatingCoilsDX","HeatingCoilsDXSingleSpeed","AFNCoilNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gross Rated Heating Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W/W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gross Rated Heating COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/(m3/s)",0,1250,"773.3",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Supply Fan Power Per Volume Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions","BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Capacity Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions","BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Energy Input Ratio Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Part Load Fraction Correlation Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Defrost Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"C",0,0,"-8.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Dry-Bulb Temperature for Compressor Operation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Dry-Bulb Temperature to Turn On Compressor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,7.22,"5.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Dry-Bulb Temperature for Defrost Operation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Crankcase Heater Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"10.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Dry-Bulb Temperature for Crankcase Heater Operation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ReverseCycle",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ReverseCycle","Resistive"},"Defrost Strategy",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Timed",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Timed","OnDemand"},"Defrost Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.058333",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Defrost Time Period Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Resistive Defrost Heater Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,6,"4",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Region number for calculating HSPF",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporator Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name for Evaporator Placement",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Secondary Coil Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"1.25",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Secondary Coil Fan Flow Scaling Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Sensible Heat Ratio of Secondary Coil",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sensible Heat Ratio Modifier Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sensible Heat Ratio Modifier Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"})},false,31 ) },
            {"Coil:Heating:DX:MultiSpeed", () => new IdfObject("Coil:Heating:DX:MultiSpeed",false,IdfObjectFormat.NotSpecified,false,40,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"HeatingCoilsDXMultiSpeed","AFNCoilNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"-8.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Dry-Bulb Temperature for Compressor Operation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Dry-Bulb Temperature to Turn On Compressor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Crankcase Heater Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"10.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Dry-Bulb Temperature for Crankcase Heater Operation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Defrost Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"C",0,7.22,"5.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Dry-Bulb Temperature for Defrost Operation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ReverseCycle",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ReverseCycle","Resistive"},"Defrost Strategy",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Timed",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Timed","OnDemand"},"Defrost Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.058333",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Defrost Time Period Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Resistive Defrost Heater Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Apply Part Load Fraction to Speeds Greater than 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Electricity","NaturalGas","Propane","Diesel","Gasoline","FuelOil#1","FuelOil#2","OtherFuel1","OtherFuel2"},"Fuel Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,6,"4",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Region number for Calculating HSPF",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",2,4,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Speeds",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Gross Rated Heating Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W/W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Gross Rated Heating COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Rated Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/(m3/s)",0,1250,"773.3",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Rated Supply Air Fan Power Per Volume Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Heating Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions","BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Heating Capacity Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions","BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Energy Input Ratio Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Part Load Fraction Correlation Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"dimensionless",0,1,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Rated Waste Heat Fraction of Power Input",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Waste Heat Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Gross Rated Heating Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W/W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Gross Rated Heating COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Rated Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/(m3/s)",0,1250,"773.3",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Rated Supply Air Fan Power Per Volume Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Heating Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions","BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Heating Capacity Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions","BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Energy Input Ratio Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Part Load Fraction Correlation Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"dimensionless",0,1,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Rated Waste Heat Fraction of Power Input",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Waste Heat Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Gross Rated Heating Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Gross Rated Heating COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Rated Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/(m3/s)",0,1250,"773.3",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Rated Supply Air Fan Power Per Volume Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Heating Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions","BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Heating Capacity Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions","BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Energy Input Ratio Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Part Load Fraction Correlation Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"dimensionless",0,1,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Rated Waste Heat Fraction of Power Input",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Waste Heat Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Gross Rated Heating Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Gross Rated Heating COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Rated Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/(m3/s)",0,1250,"773.3",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Rated Supply Air Fan Power Per Volume Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Heating Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions","BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Heating Capacity Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions","BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Energy Input Ratio Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Part Load Fraction Correlation Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"dimensionless",0,1,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Rated Waste Heat Fraction of Power Input",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Waste Heat Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name for Evaporator Placement",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Secondary Coil Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"1.25",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Secondary Coil Fan Flow Scaling Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Nominal Sensible Heat Ratio of Secondary Coil",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Sensible Heat Ratio Modifier Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Sensible Heat Ratio Modifier Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Secondary Coil Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"1.25",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Secondary Coil Fan Flow Scaling Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Nominal Sensible Heat Ratio of Secondary Coil",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Sensible Heat Ratio Modifier Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Sensible Heat Ratio Modifier Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Secondary Coil Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"1.25",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Secondary Coil Fan Flow Scaling Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Nominal Sensible Heat Ratio of Secondary Coil",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Sensible Heat Ratio Modifier Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Sensible Heat Ratio Modifier Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Secondary Coil Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"1.25",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Secondary Coil Fan Flow Scaling Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Nominal Sensible Heat Ratio of Secondary Coil",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Sensible Heat Ratio Modifier Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Sensible Heat Ratio Modifier Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"})},false,83 ) },
            {"Coil:Heating:DX:VariableSpeed", () => new IdfObject("Coil:Heating:DX:VariableSpeed",false,IdfObjectFormat.NotSpecified,false,25,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"HeatingCoilsDXVariableSpeed"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Indoor Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Indoor Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",1,10,"2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Speeds",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Speed Level",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Heating Capacity At Selected Nominal Speed Level",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Air Flow Rate At Selected Nominal Speed Level",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Energy Part Load Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Defrost Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"C",0,0,"-8.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Dry-Bulb Temperature for Compressor Operation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Dry-Bulb Temperature to Turn On Compressor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,7.22,"5.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Dry-Bulb Temperature for Defrost Operation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Crankcase Heater Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"10.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Dry-Bulb Temperature for Crankcase Heater Operation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ReverseCycle",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ReverseCycle","Resistive"},"Defrost Strategy",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Timed",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Timed","OnDemand"},"Defrost Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.058333",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Defrost Time Period Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Resistive Defrost Heater Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Reference Unit Gross Rated Heating Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Reference Unit Gross Rated Heating COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Heating Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Total  Heating Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Reference Unit Gross Rated Heating Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Reference Unit Gross Rated Heating COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Heating Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Total  Heating Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Reference Unit Gross Rated Heating Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Reference Unit Gross Rated Heating COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Heating Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions","BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Total  Heating Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Reference Unit Gross Rated Heating Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Reference Unit Gross Rated Heating COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Heating Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Heating Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Reference Unit Gross Rated Heating Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Reference Unit Gross Rated Heating COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Heating Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Heating Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Reference Unit Gross Rated Heating Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Reference Unit Gross Rated Heating COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Heating Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Heating Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Reference Unit Gross Rated Heating Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Reference Unit Gross Rated Heating COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Heating Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Heating Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Reference Unit Gross Rated Heating Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Reference Unit Gross Rated Heating COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Heating Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Heating Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Reference Unit Gross Rated Heating Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Reference Unit Gross Rated Heating COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Heating Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Heating Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Reference Unit Gross Rated Heating Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Reference Unit Gross Rated Heating COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Heating Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Heating Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"})},false,88 ) },
            {"Coil:Cooling:WaterToAirHeatPump:ParameterEstimation", () => new IdfObject("Coil:Cooling:WaterToAirHeatPump:ParameterEstimation",false,IdfObjectFormat.NotSpecified,false,18,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"CoolingCoilsWaterToAirHP","validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Reciprocating","Rotary","Scroll"},"Compressor Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"R22",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Refrigerant Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FluidNames"}),new IdfField(true,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Source Side Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Cooling Coil Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"s",0,3000,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Time for Condensate Removal to Begin",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,5,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ratio of Initial Moisture Evaporation Rate and Steady State Latent Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"Pa",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"High Pressure Cutoff",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"Pa",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Pressure Cutoff",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W/K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Side Total Heat Transfer Coefficient",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W/K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Side Outside Surface Heat Transfer Coefficient",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Superheat Temperature at the Evaporator Outlet",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compressor Power Losses",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compressor Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compressor Piston Displacement",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compressor Suction/Discharge Pressure Drop",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compressor Clearance Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Refrigerant Volume Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Volume Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Leak Rate Coefficient",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Heat Transfer Coefficient",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Heat Transfer Resistance1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Heat Transfer Resistance2",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,27 ) },
            {"Coil:Heating:WaterToAirHeatPump:ParameterEstimation", () => new IdfObject("Coil:Heating:WaterToAirHeatPump:ParameterEstimation",false,IdfObjectFormat.NotSpecified,false,15,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"HeatingCoilsWaterToAirHP","validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Reciprocating","Rotary","Scroll"},"Compressor Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"R22",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Refrigerant Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FluidNames"}),new IdfField(true,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Source Side Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gross Rated Heating Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"Pa",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"High Pressure Cutoff",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"Pa",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Pressure Cutoff",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W/K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Side Total Heat Transfer Coefficient",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Superheat Temperature at the Evaporator Outlet",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compressor Power Losses",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compressor Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compressor Piston Displacement",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compressor Suction/Discharge Pressure Drop",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compressor Clearance Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Refrigerant Volume Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Volume Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Leak Rate Coefficient",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Heat Transfer Coefficient",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Heat Transfer Resistance1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Heat Transfer Resistance2",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,24 ) },
            {"Coil:Cooling:WaterToAirHeatPump:EquationFit", () => new IdfObject("Coil:Cooling:WaterToAirHeatPump:EquationFit",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"CoolingCoilsWaterToAirHP","validBranchEquipmentNames","DesuperHeatingWaterOnlySources"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Water Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gross Rated Total Cooling Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gross Rated Sensible Cooling Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gross Rated Cooling COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Total Cooling Capacity Coefficient 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Total Cooling Capacity Coefficient 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Total Cooling Capacity Coefficient 3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Total Cooling Capacity Coefficient 4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Total Cooling Capacity Coefficient 5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sensible Cooling Capacity Coefficient 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sensible Cooling Capacity Coefficient 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sensible Cooling Capacity Coefficient 3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sensible Cooling Capacity Coefficient 4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sensible Cooling Capacity Coefficient 5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sensible Cooling Capacity Coefficient 6",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Power Consumption Coefficient 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Power Consumption Coefficient 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Power Consumption Coefficient 3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Power Consumption Coefficient 4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Power Consumption Coefficient 5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"s",0,3000,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Time for Condensate Removal to Begin",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,5,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ratio of Initial Moisture Evaporation Rate and Steady State Latent Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,28 ) },
            {"Coil:Cooling:WaterToAirHeatPump:VariableSpeedEquationFit", () => new IdfObject("Coil:Cooling:WaterToAirHeatPump:VariableSpeedEquationFit",false,IdfObjectFormat.NotSpecified,false,27,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"CoolingCoilsWaterToAirVSHP","validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water-to-Refrigerant HX Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water-to-Refrigerant HX Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Indoor Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Indoor Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",1,10,"2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Speeds",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Speed Level",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gross Rated Total Cooling Capacity At Selected Nominal Speed Level",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Air Flow Rate At Selected Nominal Speed Level",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Water Flow Rate At Selected Nominal Speed Level",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"s",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Time for Condensate to Begin Leaving the Coil",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Initial Moisture Evaporation Rate Divided by Steady-State AC Latent Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Flag for Using Hot Gas Reheat, 0 or 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Energy Part Load Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Reference Unit Gross Rated Total Cooling Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Reference Unit Gross Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Reference Unit Gross Rated Cooling COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Reference Unit Rated Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Total Cooling Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Total Cooling Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Total Cooling Capacity Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Energy Input Ratio Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Reference Unit Waste Heat Fraction of Input Power At Rated Conditions",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Waste Heat Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Reference Unit Gross Rated Total Cooling Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Reference Unit Gross Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Reference Unit Gross Rated Cooling COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Reference Unit Rated Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Total Cooling Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Total Cooling Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Total Cooling Capacity Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Energy Input Ratio Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Reference Unit Waste Heat Fraction of Input Power At Rated Conditions",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Waste Heat Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Reference Unit Gross Rated Total Cooling Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Reference Unit Gross Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Reference Unit Gross Rated Cooling COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Reference Unit Rated Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Total Cooling Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Total Cooling Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Total Cooling Capacity Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Energy Input Ratio Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Reference Unit Waste Heat Fraction of Input Power At Rated Conditions",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Waste Heat Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Reference Unit Gross Rated Total Cooling Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Reference Unit Gross Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Reference Unit Gross Rated Cooling COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Reference Unit Rated Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Total Cooling Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Total Cooling Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Total Cooling Capacity Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Energy Input Ratio Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Reference Unit Waste Heat Fraction of Input Power At Rated Conditions",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Waste Heat Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Reference Unit Gross Rated Total Cooling Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Reference Unit Gross Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Reference Unit Gross Rated Cooling COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Reference Unit Rated Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Total Cooling Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Total Cooling Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Total Cooling Capacity Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Energy Input Ratio Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Reference Unit Waste Heat Fraction of Input Power At Rated Conditions",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Waste Heat Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Reference Unit Gross Rated Total Cooling Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Reference Unit Gross Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Reference Unit Gross Rated Cooling COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Reference Unit Rated Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Total Cooling Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Total Cooling Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Total Cooling Capacity Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Energy Input Ratio Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Reference Unit Waste Heat Fraction of Input Power At Rated Conditions",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Waste Heat Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Reference Unit Gross Rated Total Cooling Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Reference Unit Gross Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Reference Unit Gross Rated Cooling COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Reference Unit Rated Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Total Cooling Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Total Cooling Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Total Cooling Capacity Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Energy Input Ratio Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Reference Unit Waste Heat Fraction of Input Power At Rated Conditions",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Waste Heat Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Reference Unit Gross Rated Total Cooling Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Reference Unit Gross Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Reference Unit Gross Rated Cooling COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Reference Unit Rated Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Total Cooling Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Total Cooling Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Total Cooling Capacity Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Energy Input Ratio Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Reference Unit Waste Heat Fraction of Input Power At Rated Conditions",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Waste Heat Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Reference Unit Gross Rated Total Cooling Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Reference Unit Gross Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Reference Unit Gross Rated Cooling COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Reference Unit Rated Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Total Cooling Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Total Cooling Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Total Cooling Capacity Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Energy Input Ratio Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Reference Unit Waste Heat Fraction of Input Power At Rated Conditions",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Waste Heat Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Reference Unit Gross Rated Total Cooling Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Reference Unit Gross Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Reference Unit Gross Rated Cooling COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Reference Unit Rated Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Total Cooling Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Total Cooling Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Total Cooling Capacity Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Energy Input Ratio Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Reference Unit Waste Heat Fraction of Input Power At Rated Conditions",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Waste Heat Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"})},false,144 ) },
            {"Coil:Heating:WaterToAirHeatPump:EquationFit", () => new IdfObject("Coil:Heating:WaterToAirHeatPump:EquationFit",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"HeatingCoilsWaterToAirHP","validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Water Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gross Rated Heating Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gross Rated Heating COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Capacity Coefficient 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Capacity Coefficient 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Capacity Coefficient 3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Capacity Coefficient 4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Capacity Coefficient 5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Power Consumption Coefficient 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Power Consumption Coefficient 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Power Consumption Coefficient 3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Power Consumption Coefficient 4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Power Consumption Coefficient 5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,19 ) },
            {"Coil:Heating:WaterToAirHeatPump:VariableSpeedEquationFit", () => new IdfObject("Coil:Heating:WaterToAirHeatPump:VariableSpeedEquationFit",false,IdfObjectFormat.NotSpecified,false,23,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"HeatingCoilsWaterToAirVSHP","validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water-to-Refrigerant HX Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water-to-Refrigerant HX Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Indoor Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Indoor Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",1,10,"2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Speeds",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Speed Level",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Heating Capacity At Selected Nominal Speed Level",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Air Flow Rate At Selected Nominal Speed Level",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Water Flow Rate At Selected Nominal Speed Level",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Energy Part Load Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Reference Unit Gross Rated Heating Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Reference Unit Gross Rated Heating COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Reference Unit Rated Air Flow",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Reference Unit Rated Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Heating Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Total  Heating Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Heating Capacity Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Energy Input Ratio Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Reference Unit Waste Heat Fraction of Input Power At Rated Conditions",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Waste Heat Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Reference Unit Gross Rated Heating Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Reference Unit Gross Rated Heating COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Reference Unit Rated Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Heating Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Total  Heating Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Heating Capacity Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Energy Input Ratio Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Reference Unit Waste Heat Fraction of Input Power At Rated Conditions",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Waste Heat Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Reference Unit Gross Rated Heating Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Reference Unit Gross Rated Heating COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Reference Unit Rated Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Heating Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Total  Heating Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Heating Capacity Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Energy Input Ratio Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Reference Unit Waste Heat Fraction of Input Power At Rated Conditions",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Waste Heat Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Reference Unit Gross Rated Heating Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Reference Unit Gross Rated Heating COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Reference Unit Rated Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Heating Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Total  Heating Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Heating Capacity Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Energy Input Ratio Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Reference Unit Waste Heat Fraction of Input Power At Rated Conditions",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Waste Heat Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Reference Unit Gross Rated Heating Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Reference Unit Gross Rated Heating COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Reference Unit Rated Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Heating Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Total  Heating Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Heating Capacity Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Energy Input Ratio Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Reference Unit Waste Heat Fraction of Input Power At Rated Conditions",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Waste Heat Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Reference Unit Gross Rated Heating Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Reference Unit Gross Rated Heating COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Reference Unit Rated Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Heating Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Total  Heating Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Heating Capacity Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Energy Input Ratio Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Reference Unit Waste Heat Fraction of Input Power At Rated Conditions",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Waste Heat Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Reference Unit Gross Rated Heating Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Reference Unit Gross Rated Heating COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Reference Unit Rated Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Heating Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Total  Heating Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Heating Capacity Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Energy Input Ratio Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Reference Unit Waste Heat Fraction of Input Power At Rated Conditions",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Waste Heat Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Reference Unit Gross Rated Heating Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Reference Unit Gross Rated Heating COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Reference Unit Rated Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Heating Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Total  Heating Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Heating Capacity Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Energy Input Ratio Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Reference Unit Waste Heat Fraction of Input Power At Rated Conditions",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Waste Heat Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Reference Unit Gross Rated Heating Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Reference Unit Gross Rated Heating COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Reference Unit Rated Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Heating Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Total  Heating Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Heating Capacity Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Energy Input Ratio Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Reference Unit Waste Heat Fraction of Input Power At Rated Conditions",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Waste Heat Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Reference Unit Gross Rated Heating Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Reference Unit Gross Rated Heating COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Reference Unit Rated Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Heating Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Total  Heating Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Heating Capacity Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Energy Input Ratio Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Energy Input Ratio Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Reference Unit Waste Heat Fraction of Input Power At Rated Conditions",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Waste Heat Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"})},false,131 ) },
            {"Coil:WaterHeating:AirToWaterHeatPump:Pumped", () => new IdfObject("Coil:WaterHeating:AirToWaterHeatPump:Pumped",false,IdfObjectFormat.NotSpecified,false,21,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"HeatPumpWaterHeaterDXCoilsPumped"},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Heating Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0.5,1,"0.85",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",5,0,"19.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Evaporator Inlet Air Dry-Bulb Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",5,0,"13.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Evaporator Inlet Air Wet-Bulb Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",25,0,"57.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Condenser Inlet Water Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Evaporator Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Condenser Water Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Yes",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Evaporator Fan Power Included in Rated COP",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Condenser Pump Power Included in Rated COP",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Condenser Pump Heat Included in Rated Heating Capacity and Rated COP",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Water Pump Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Condenser Pump Heat to Water",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporator Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporator Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Crankcase Heater Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"10",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Ambient Temperature for Crankcase Heater Operation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"WetBulbTemperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"DryBulbTemperature","WetBulbTemperature"},"Evaporator Air Temperature Type for Curve Objects",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions","BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Capacity Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating COP Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions","BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating COP Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating COP Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Part Load Fraction Correlation Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"})},false,28 ) },
            {"Coil:WaterHeating:AirToWaterHeatPump:Wrapped", () => new IdfObject("Coil:WaterHeating:AirToWaterHeatPump:Wrapped",false,IdfObjectFormat.NotSpecified,false,14,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"HeatPumpWaterHeaterDXCoilsWrapped"},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Heating Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0.5,1,"0.85",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",5,0,"19.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Evaporator Inlet Air Dry-Bulb Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",5,0,"13.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Evaporator Inlet Air Wet-Bulb Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",25,0,"57.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Condenser Water Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Evaporator Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Yes",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Evaporator Fan Power Included in Rated COP",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporator Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporator Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Crankcase Heater Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"10",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Ambient Temperature for Crankcase Heater Operation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"WetBulbTemperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"DryBulbTemperature","WetBulbTemperature"},"Evaporator Air Temperature Type for Curve Objects",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions","BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating COP Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions","BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating COP Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Part Load Fraction Correlation Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"})},false,19 ) },
            {"Coil:WaterHeating:AirToWaterHeatPump:VariableSpeed", () => new IdfObject("Coil:WaterHeating:AirToWaterHeatPump:VariableSpeed",false,IdfObjectFormat.NotSpecified,false,33,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"HeatPumpWaterHeaterDXCoilsVariableSpeed"},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",1,10,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Speeds",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Speed Level",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Water Heating Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",5,0,"19.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Evaporator Inlet Air Dry-Bulb Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",5,0,"13.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Evaporator Inlet Air Wet-Bulb Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",25,0,"57.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Condenser Inlet Water Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Evaporator Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Condenser Water Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Yes",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Evaporator Fan Power Included in Rated COP",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Condenser Pump Power Included in Rated COP",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Condenser Pump Heat Included in Rated Heating Capacity and Rated COP",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Condenser Pump Heat to Water",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporator Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporator Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Crankcase Heater Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"10",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Ambient Temperature for Crankcase Heater Operation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"WetBulbTemperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"DryBulbTemperature","WetBulbTemperature"},"Evaporator Air Temperature Type for Curve Objects",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Part Load Fraction Correlation Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Water Heating Capacity at Speed 1",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Water Heating COP at Speed 1",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0.5,1,"0.85",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Sensible Heat Ratio at Speed 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Reference Unit Rated Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Reference Unit Water Pump Input Power At Rated Conditions",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Total WH Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Total WH Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 Total WH Capacity Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 COP Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 COP Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 1 COP Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Water Heating Capacity at Speed 2",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Water Heating COP at Speed 2",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0.5,1,"0.85",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Sensible Heat Ratio at Speed 2",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Reference Unit Rated Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Reference Unit Water Pump Input Power At Rated Conditions",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Total WH Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Total WH Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 Total WH Capacity Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 COP Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 COP Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 2 COP Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Water Heating Capacity at speed 3",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Water Heating COP at Speed 3",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0.5,1,"0.85",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Sensible Heat Ratio at Speed 3",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Reference Unit Rated Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Reference Unit Water Pump Input Power At Rated Conditions",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Total WH Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Total WH Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 Total WH Capacity Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 COP Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 COP Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 3 COP Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Water Heating Capacity at Speed 4",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Water Heating COP at Speed 4",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0.5,1,"0.85",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Sensible Heat Ratio at Speed 4",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Reference Unit Rated Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Reference Unit Water Pump Input Power At Rated Conditions",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Total WH Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Total WH Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 Total WH Capacity Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 COP Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 COP Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 4 COP Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Water Heating Capacity at Speed 5",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Water Heating COP at Speed 5",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0.5,1,"0.85",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Sensible Heat Ratio at Speed 5",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Reference Unit Rated Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Reference Unit Water Pump Input Power At Rated Conditions",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Total WH Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Total WH Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 Total WH Capacity Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 COP Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 COP Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 5 COP Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Water Heating Capacity at Speed 6",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Water Heating COP at Speed 6",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0.5,1,"0.85",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Sensible Heat Ratio at Speed 6",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Reference Unit Rated Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Reference Unit Water Pump Input Power At Rated Conditions",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Total WH Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Total WH Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 Total WH Capacity Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 COP Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 COP Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 6 COP Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Water Heating Capacity at Speed 7",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Water Heating COP at Speed 7",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0.5,1,"0.85",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Sensible Heat Ratio at Speed 7",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Reference Unit Rated Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Reference Unit Water Pump Input Power At Rated Conditions",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Total WH Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Total WH Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 Total WH Capacity Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 COP Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 COP Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 7 COP Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Water Heating Capacity at Speed 8",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Water Heating COP at Speed 8",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0.5,1,"0.85",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Sensible Heat Ratio at Speed 8",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Reference Unit Rated Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Reference Unit Water Pump Input Power At Rated Conditions",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Total WH Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Total WH Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 Total WH Capacity Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 COP Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 COP Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 8 COP Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Water Heating Capacity at Speed 9",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Water Heating COP at Speed 9",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0.5,1,"0.85",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Sensible Heat Ratio at Speed 9",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Reference Unit Rated Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Reference Unit Water Pump Input Power At Rated Conditions",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Total WH Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Total WH Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 Total WH Capacity Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 COP Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 COP Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 9 COP Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Water Heating Capacity at Speed 10",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Water Heating COP at Speed 10",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0.5,1,"0.85",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Sensible Heat Ratio at Speed 10",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Reference Unit Rated Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Reference Unit Rated Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Reference Unit Water Pump Input Power At Rated Conditions",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Total WH Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Total WH Capacity Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 Total WH Capacity Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 COP Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 COP Function of Air Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Speed 10 COP Function of Water Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"})},false,141 ) },
            {"Coil:WaterHeating:Desuperheater", () => new IdfObject("Coil:WaterHeating:Desuperheater",false,IdfObjectFormat.NotSpecified,false,18,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"deltaC",0,20,"5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dead Band Temperature Difference",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Heat Reclaim Recovery Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Inlet Water Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Outdoor Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Inlet Water Temperature for Heat Reclaim",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Reclaim Efficiency Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"WaterHeater:Mixed",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"WaterHeater:Mixed","WaterHeater:Stratified"},"Tank Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterHeaterMixedNames","WaterHeaterStratifiedNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Cooling:DX:SingleSpeed","Coil:Cooling:DX:TwoSpeed","Coil:Cooling:DX:TwoStageWithHumidityControlMode","Coil:Cooling:DX:VariableSpeed","Coil:Cooling:DX:MultiSpeed","Coil:Cooling:WaterToAirHeatPump:EquationFit","Refrigeration:CompressorRack","Refrigeration:Condenser:AirCooled","Refrigeration:Condenser:EvaporativeCooled","Refrigeration:Condenser:WaterCooled"},"Heating Source Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Source Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesuperHeatingCoilSources","DesuperHeatingWaterOnlySources"}),new IdfField(true,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Pump Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Pump Heat to Water",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"On-Cycle Parasitic Electric Load",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Off-Cycle Parasitic Electric Load",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,20 ) },
            {"CoilSystem:Cooling:DX", () => new IdfObject("CoilSystem:Cooling:DX",false,IdfObjectFormat.NotSpecified,false,7,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"CoolingCoilSystemName","validBranchEquipmentNames","validOASysEquipmentNames"},new List<string>{"validBranchEquipmentTypes","validOASysEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"DX Cooling Coil System Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"DX Cooling Coil System Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"DX Cooling Coil System Sensor Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Cooling:DX:SingleSpeed","CoilSystem:Cooling:DX:HeatExchangerAssisted","Coil:Cooling:DX:TwoSpeed","Coil:Cooling:DX:TwoStageWithHumidityControlMode","Coil:Cooling:DX:VariableSpeed","Coil:Cooling:DX:SingleSpeed:ThermalStorage"},"Cooling Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CoolingCoilsDX","CoolingCoilsDXVariableSpeed"}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","Multimode","CoolReheat"},"Dehumidification Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Yes",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Run on Sensible Load",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Run on Latent Load",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Use Outdoor Air DX Cooling Coil",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,7.2,"2.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air DX Cooling Coil Leaving Minimum Air Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,12 ) },
            {"CoilSystem:Heating:DX", () => new IdfObject("CoilSystem:Heating:DX",false,IdfObjectFormat.NotSpecified,false,4,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"HeatingCoilSystemName","validBranchEquipmentNames","validOASysEquipmentNames"},new List<string>{"validBranchEquipmentTypes","validOASysEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:DX:SingleSpeed","Coil:Heating:DX:VariableSpeed"},"Heating Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatingCoilsDXSingleSpeed","HeatingCoilsDXVariableSpeed"})},false,4 ) },
            {"CoilSystem:Cooling:Water:HeatExchangerAssisted", () => new IdfObject("CoilSystem:Cooling:Water:HeatExchangerAssisted",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"CoolingCoilsWater","validBranchEquipmentNames","validOASysEquipmentNames"},new List<string>{"validBranchEquipmentTypes","validOASysEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HeatExchanger:AirToAir:FlatPlate","HeatExchanger:AirToAir:SensibleAndLatent"},"Heat Exchanger Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Exchanger Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Cooling:Water","Coil:Cooling:Water:DetailedGeometry"},"Cooling Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CoolingCoilsWaterNoHX"})},false,5 ) },
            {"CoilSystem:Cooling:DX:HeatExchangerAssisted", () => new IdfObject("CoilSystem:Cooling:DX:HeatExchangerAssisted",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"CoolingCoilsDX","CoolingCoilsDXSingleSpeed","CoolingCoilsDXMultiModeOrSingleSpeed"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HeatExchanger:AirToAir:FlatPlate","HeatExchanger:AirToAir:SensibleAndLatent","HeatExchanger:Desiccant:BalancedFlow"},"Heat Exchanger Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Exchanger Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HXAirToAirNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Cooling:DX:SingleSpeed","Coil:Cooling:DX:VariableSpeed"},"Cooling Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CoolingCoilsDXSingleSpeed","CoolingCoilsDXVariableSpeed"})},false,5 ) },
            {"CoilSystem:IntegratedHeatPump:AirSource", () => new IdfObject("CoilSystem:IntegratedHeatPump:AirSource",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"IntegratedHeatPumps"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Hot Water Flow Sensor Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Space Cooling Coil  Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CoolingCoilsDXVariableSpeed"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Space Heating Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatingCoilsDXVariableSpeed"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dedicated Water Heating Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatPumpWaterHeaterDXCoilsVariableSpeed"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"SCWH Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatPumpWaterHeaterDXCoilsVariableSpeed"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"SCDWH Cooling Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CoolingCoilsDXVariableSpeed"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"SCDWH Water Heating Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatPumpWaterHeaterDXCoilsVariableSpeed"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"SHDWH Heating Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatingCoilsDXVariableSpeed"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"SHDWH Water Heating Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatPumpWaterHeaterDXCoilsVariableSpeed"}),new IdfField(false,"C",15,0,"20.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Indoor Temperature Limit for SCWH Mode",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",20,0,"27.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ambient Temperature Limit for SCWH Mode",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",15,0,"20.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Indoor Temperature above Which WH has Higher Priority",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",15,0,"20.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ambient Temperature above Which WH has Higher Priority",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Flag to Indicate Load Control in SCWH Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,10,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Speed Level for SCWH Mode",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Water Flow Volume before Switching from SCDWH to SCWH Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,10,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Speed Level for SCDWH Mode",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"s",0,0,"360.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Running Time before Allowing Electric Resistance Heat Use during SHDWH Mode",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,10,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Speed Level for SHDWH Mode",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{})},false,20 ) },
            {"Coil:Cooling:DX:SingleSpeed:ThermalStorage", () => new IdfObject("Coil:Cooling:DX:SingleSpeed:ThermalStorage",false,IdfObjectFormat.NotSpecified,false,89,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"CoolingCoilsDX","CoolingCoilsDXSingleSpeed","CoolingCoilsDXMultiModeOrSingleSpeed","AFNCoilNames","validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ScheduledModes","EMSControlled"},"Operating Mode Control Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Operation Mode Control Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Water","UserDefinedFluidType","Ice"},"Storage Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"User Defined Fluid Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FluidAndGlycolNames"}),new IdfField(false,"m3",0,0,null,true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fluid Storage Volume",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"GJ",0,0,null,true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ice Storage Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"hr",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Storage Capacity Sizing Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Storage Tank Ambient Temperature Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W/K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Storage Tank to Ambient U-value Times Area Heat Transfer Coefficient",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fluid Storage Tank Rating Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Evaporator Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporator Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporator Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Cooling Only Mode Available",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Only Mode Rated Total Evaporator Cooling Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Only Mode Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Only Mode Rated COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Only Mode Total Evaporator Cooling Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Only Mode Total Evaporator Cooling Capacity Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Only Mode Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Only Mode Energy Input Ratio Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Only Mode Part Load Fraction Correlation Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Only Mode Sensible Heat Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Only Mode Sensible Heat Ratio Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Cooling And Charge Mode Available",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling And Charge Mode Rated Total Evaporator Cooling Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling And Charge Mode Capacity Sizing Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling And Charge Mode Rated Storage Charging Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling And Charge Mode Storage Capacity Sizing Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling And Charge Mode Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling And Charge Mode Cooling Rated COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling And Charge Mode Charging Rated COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling And Charge Mode Total Evaporator Cooling Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"TrivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling And Charge Mode Total Evaporator Cooling Capacity Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling And Charge Mode Evaporator Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"TrivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling And Charge Mode Evaporator Energy Input Ratio Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling And Charge Mode Evaporator Part Load Fraction Correlation Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling And Charge Mode Storage Charge Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"TrivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling And Charge Mode Storage Charge Capacity Function of Total Evaporator PLR Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling And Charge Mode Storage Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"TrivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling And Charge Mode Storage Energy Input Ratio Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling And Charge Mode Storage Energy Part Load Fraction Correlation Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling And Charge Mode Sensible Heat Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions","TrivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling And Charge Mode Sensible Heat Ratio Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Cooling And Discharge Mode Available",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling And Discharge Mode Rated Total Evaporator Cooling Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling And Discharge Mode Evaporator Capacity Sizing Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling And Discharge Mode Rated Storage Discharging Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling And Discharge Mode Storage Discharge Capacity Sizing Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling And Discharge Mode Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling And Discharge Mode Cooling Rated COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling And Discharge Mode Discharging Rated COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling And Discharge Mode Total Evaporator Cooling Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"TrivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling And Discharge Mode Total Evaporator Cooling Capacity Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling And Discharge Mode Evaporator Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"TrivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling And Discharge Mode Evaporator Energy Input Ratio Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling And Discharge Mode Evaporator Part Load Fraction Correlation Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling And Discharge Mode Storage Discharge Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"TrivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling And Discharge Mode Storage Discharge Capacity Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling And Discharge Mode Storage Discharge Capacity Function of Total Evaporator PLR Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling And Discharge Mode Storage Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"TrivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling And Discharge Mode Storage Energy Input Ratio Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling And Discharge Mode Storage Energy Part Load Fraction Correlation Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling And Discharge Mode Sensible Heat Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions","TrivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling And Discharge Mode Sensible Heat Ratio Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Charge Only Mode Available",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Charge Only Mode Rated Storage Charging Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Charge Only Mode Capacity Sizing Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Charge Only Mode Charging Rated COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Charge Only Mode Storage Charge Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Charge Only Mode Storage Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Discharge Only Mode Available",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Discharge Only Mode Rated Storage Discharging Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Discharge Only Mode Capacity Sizing Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Discharge Only Mode Rated Sensible Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Discharge Only Mode Rated COP",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Discharge Only Mode Storage Discharge Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Discharge Only Mode Storage Discharge Capacity Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Discharge Only Mode Energy Input Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Discharge Only Mode Energy Input Ratio Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Discharge Only Mode Part Load Fraction Correlation Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Discharge Only Mode Sensible Heat Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions","TrivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Discharge Only Mode Sensible Heat Ratio Function of Flow Fraction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ancillary Electric Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cold Weather Operation Minimum Outdoor Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cold Weather Operation Ancillary Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Design Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Air Flow Sizing Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"AirCooled",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"AirCooled","EvaporativelyCooled"},"Condenser Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporative Condenser Effectiveness",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporative Condenser Pump Rated Power Consumption",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",2,0,"2.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Setpoint Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Water Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condensate Collection Water Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Storage Tank Plant Connection Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Storage Tank Plant Connection Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Storage Tank Plant Connection Design Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Storage Tank Plant Connection Heat Transfer Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Storage Tank Minimum Operating Limit Fluid Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Storage Tank Maximum Operating Limit Fluid Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,106 ) },
            {"EvaporativeCooler:Direct:CelDekPad", () => new IdfObject("EvaporativeCooler:Direct:CelDekPad",false,IdfObjectFormat.NotSpecified,false,7,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"EvapCoolerNames","validBranchEquipmentNames","validOASysEquipmentNames"},new List<string>{"validBranchEquipmentTypes","validOASysEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"m2",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Direct Pad Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Direct Pad Depth",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Recirculating Water Pump Power Consumption",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Supply Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"})},false,9 ) },
            {"EvaporativeCooler:Indirect:CelDekPad", () => new IdfObject("EvaporativeCooler:Indirect:CelDekPad",false,IdfObjectFormat.NotSpecified,false,14,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"EvapCoolerNames","validBranchEquipmentNames","validOASysEquipmentNames"},new List<string>{"validBranchEquipmentTypes","validOASysEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"m2",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Direct Pad Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Direct Pad Depth",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Recirculating Water Pump Power Consumption",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Secondary Air Fan Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Secondary Air Fan Total Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"Pa",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Secondary Air Fan Delta Pressure",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Indirect Heat Exchanger Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Primary Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Primary Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Supply Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Secondary Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,14 ) },
            {"EvaporativeCooler:Indirect:WetCoil", () => new IdfObject("EvaporativeCooler:Indirect:WetCoil",false,IdfObjectFormat.NotSpecified,false,13,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"EvapCoolerNames","validBranchEquipmentNames","validOASysEquipmentNames"},new List<string>{"validBranchEquipmentTypes","validOASysEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coil Maximum Efficiency",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coil Flow Ratio",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Recirculating Water Pump Power Consumption",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Secondary Air Fan Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Secondary Air Fan Total Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"Pa",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Secondary Air Fan Delta Pressure",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Primary Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Primary Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Supply Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Secondary Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,13 ) },
            {"EvaporativeCooler:Indirect:ResearchSpecial", () => new IdfObject("EvaporativeCooler:Indirect:ResearchSpecial",false,IdfObjectFormat.NotSpecified,false,21,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"EvapCoolerNames","validBranchEquipmentNames","validOASysEquipmentNames"},new List<string>{"validBranchEquipmentTypes","validOASysEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,2,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooler Wetbulb Design Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wetbulb Effectiveness Flow Ratio Modifier Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooler Drybulb Design Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Drybulb Effectiveness Flow Ratio Modifier Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Recirculating Water Pump Design Power",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/(m3/s)",0,0,"90.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Pump Power Sizing Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Pump Power Modifier Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Secondary Air Design Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Secondary Air Flow Scaling Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Secondary Air Fan Design Power",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/(m3/s)",0,0,"250.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Secondary Air Fan Sizing Specific Power",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Secondary Air Fan Power Modifier Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Primary Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Primary Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Primary Air Design Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Effectiveness Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Secondary Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Secondary Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sensor Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relief Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Supply Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Drift Loss Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",2,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Blowdown Concentration Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporative Operation Minimum Limit Secondary Air Drybulb Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporative Operation Maximum Limit Outdoor Wetbulb Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry Operation Maximum Limit Outdoor Drybulb Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,28 ) },
            {"EvaporativeCooler:Direct:ResearchSpecial", () => new IdfObject("EvaporativeCooler:Direct:ResearchSpecial",false,IdfObjectFormat.NotSpecified,false,11,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"EvapCoolerNames","validBranchEquipmentNames","validOASysEquipmentNames"},new List<string>{"validBranchEquipmentTypes","validOASysEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooler Design Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Effectiveness Flow Ratio Modifier Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Primary Air Design Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Recirculating Water Pump Design Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/(m3/s)",0,0,"90.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Pump Power Sizing Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Pump Power Modifier Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sensor Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Supply Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Drift Loss Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",2,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Blowdown Concentration Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",-99,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporative Operation Minimum Drybulb Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporative Operation Maximum Limit Wetbulb Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporative Operation Maximum Limit Drybulb Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,17 ) },
            {"Humidifier:Steam:Electric", () => new IdfObject("Humidifier:Steam:Electric",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validBranchEquipmentNames","validOASysEquipmentNames"},new List<string>{"validBranchEquipmentTypes","validOASysEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Fan Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Standby Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"})},false,9 ) },
            {"Humidifier:Steam:Gas", () => new IdfObject("Humidifier:Steam:Gas",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validBranchEquipmentNames","validOASysEquipmentNames"},new List<string>{"validBranchEquipmentTypes","validOASysEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Gas Use Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.80",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Efficiency Modifier Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Fan Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Auxiliary Electric Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"",0,0,"FixedInletWaterTemperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"FixedInletWaterTemperature","VariableInletWaterTemperature"},"Inlet Water Temperature Option",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,12 ) },
            {"Dehumidifier:Desiccant:NoFans", () => new IdfObject("Dehumidifier:Desiccant:NoFans",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validBranchEquipmentNames","validOASysEquipmentNames"},new List<string>{"validBranchEquipmentTypes","validOASysEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Process Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Process Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Regeneration Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Regeneration Fan Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"LeavingMaximumHumidityRatioSetpoint","SystemNodeMaximumHumidityRatioSetpoint"},"Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kgWater/kgDryAir",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Leaving Maximum Humidity Ratio Setpoint",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Process Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m/s",0,6,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Process Air Velocity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rotor Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:Electric","Coil:Heating:Fuel","Coil:Heating:Water","Coil:Heating:Steam"},"Regeneration Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Regeneration Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatingCoilName"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fan:SystemModel","Fan:VariableVolume","Fan:ConstantVolume"},"Regeneration Fan Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Regeneration Fan Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FansCVandVAV"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Default","UserCurves"},"Performance Model Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Leaving Dry-Bulb Function of Entering Dry-Bulb and Humidity Ratio Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Leaving Dry-Bulb Function of Air Velocity Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Leaving Humidity Ratio Function of Entering Dry-Bulb and Humidity Ratio Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Leaving Humidity Ratio Function of Air Velocity Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Regeneration Energy Function of Entering Dry-Bulb and Humidity Ratio Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Regeneration Energy Function of Air Velocity Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Regeneration Velocity Function of Entering Dry-Bulb and Humidity Ratio Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Regeneration Velocity Function of Air Velocity Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"C",40,250,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Regeneration Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,25 ) },
            {"Dehumidifier:Desiccant:System", () => new IdfObject("Dehumidifier:Desiccant:System",false,IdfObjectFormat.NotSpecified,false,8,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validBranchEquipmentNames","validOASysEquipmentNames"},new List<string>{"validBranchEquipmentTypes","validOASysEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HeatExchanger:Desiccant:BalancedFlow"},"Desiccant Heat Exchanger Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Desiccant Heat Exchanger Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HXDesiccantBalanced"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sensor Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fan:SystemModel","Fan:OnOff","Fan:ConstantVolume"},"Regeneration Air Fan Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Regeneration Air Fan Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FansOnOffandVAV"}),new IdfField(false,"",0,0,"DrawThrough",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"BlowThrough","DrawThrough"},"Regeneration Air Fan Placement",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:Electric","Coil:Heating:Fuel","Coil:Heating:Water","Coil:Heating:Steam"},"Regeneration Air Heater Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Regeneration Air Heater Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatingCoilName"}),new IdfField(false,"C",0,0,"46.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Regeneration Inlet Air Setpoint Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Cooling:DX:SingleSpeed","Coil:Cooling:DX:TwoStageWithHumidityControlMode","Coil:Cooling:DX:VariableSpeed"},"Companion Cooling Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Companion Cooling Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CoolingCoilsDXMultiModeOrSingleSpeed","CoolingCoilsDXVariableSpeed"}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Companion Cooling Coil Upstream of Dehumidifier Process Inlet",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Companion Coil Regeneration Air Heating",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Exhaust Fan Maximum Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Exhaust Fan Maximum Power",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Exhaust Fan Power Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"})},false,18 ) },
            {"HeatExchanger:AirToAir:FlatPlate", () => new IdfObject("HeatExchanger:AirToAir:FlatPlate",false,IdfObjectFormat.NotSpecified,false,15,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"HXAirToAirNames","AFNHeatExchangerNames","validBranchEquipmentNames","validOASysEquipmentNames","ZoneEquipmentNames"},new List<string>{"validBranchEquipmentTypes","validOASysEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"CounterFlow","ParallelFlow","CrossFlowBothUnmixed"},"Flow Arrangement Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Yes",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Economizer Lockout",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ratio of Supply to Secondary hA Values",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Supply Air Inlet Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Supply Air Outlet Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Secondary Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Secondary Air Inlet Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Electric Power",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Secondary Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Secondary Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,15 ) },
            {"HeatExchanger:AirToAir:SensibleAndLatent", () => new IdfObject("HeatExchanger:AirToAir:SensibleAndLatent",false,IdfObjectFormat.NotSpecified,false,19,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"HXAirToAirNames","HXAirToAirSensibleAndLatentNames","AFNHeatExchangerNames","validBranchEquipmentNames","validOASysEquipmentNames"},new List<string>{"validBranchEquipmentTypes","validOASysEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sensible Effectiveness at 100% Heating Air Flow",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Latent Effectiveness at 100% Heating Air Flow",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sensible Effectiveness at 75% Heating Air Flow",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Latent Effectiveness at 75% Heating Air Flow",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sensible Effectiveness at 100% Cooling Air Flow",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Latent Effectiveness at 100% Cooling Air Flow",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sensible Effectiveness at 75% Cooling Air Flow",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Latent Effectiveness at 75% Cooling Air Flow",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Exhaust Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Exhaust Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Electric Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"No","Yes"},"Supply Air Outlet Temperature Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Plate",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Plate","Rotary"},"Heat Exchanger Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","ExhaustAirRecirculation","ExhaustOnly","MinimumExhaustTemperature"},"Frost Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"1.7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Threshold Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.083",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Initial Defrost Time Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"1/K",0,0,"0.012",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rate of Defrost Time Fraction Increase",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Yes",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Economizer Lockout",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,23 ) },
            {"HeatExchanger:Desiccant:BalancedFlow", () => new IdfObject("HeatExchanger:Desiccant:BalancedFlow",false,IdfObjectFormat.NotSpecified,false,8,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"HXDesiccantBalanced","HXAirToAirNames","AFNHeatExchangerNames","validBranchEquipmentNames","validOASysEquipmentNames"},new List<string>{"validBranchEquipmentTypes","validOASysEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Regeneration Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Regeneration Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Process Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Process Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"HeatExchanger:Desiccant:BalancedFlow:PerformanceDataType1",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HeatExchanger:Desiccant:BalancedFlow:PerformanceDataType1"},"Heat Exchanger Performance Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Exchanger Performance Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesiccantHXPerfData"}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Economizer Lockout",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,9 ) },
            {"HeatExchanger:Desiccant:BalancedFlow:PerformanceDataType1", () => new IdfObject("HeatExchanger:Desiccant:BalancedFlow:PerformanceDataType1",false,IdfObjectFormat.NotSpecified,false,52,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"DesiccantHXPerfData"},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m/s",0,6,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Air Face Velocity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Electric Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Equation Coefficient 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Equation Coefficient 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Equation Coefficient 3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Equation Coefficient 4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Equation Coefficient 5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Equation Coefficient 6",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Equation Coefficient 7",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Equation Coefficient 8",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"kgWater/kgDryAir",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Regeneration Inlet Air Humidity Ratio for Temperature Equation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"kgWater/kgDryAir",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Regeneration Inlet Air Humidity Ratio for Temperature Equation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Regeneration Inlet Air Temperature for Temperature Equation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Regeneration Inlet Air Temperature for Temperature Equation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"kgWater/kgDryAir",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Process Inlet Air Humidity Ratio for Temperature Equation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"kgWater/kgDryAir",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Process Inlet Air Humidity Ratio for Temperature Equation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Process Inlet Air Temperature for Temperature Equation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Process Inlet Air Temperature for Temperature Equation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Regeneration Air Velocity for Temperature Equation",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Regeneration Air Velocity for Temperature Equation",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Regeneration Outlet Air Temperature for Temperature Equation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Regeneration Outlet Air Temperature for Temperature Equation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"percent",0,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Regeneration Inlet Air Relative Humidity for Temperature Equation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"percent",0,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Regeneration Inlet Air Relative Humidity for Temperature Equation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"percent",0,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Process Inlet Air Relative Humidity for Temperature Equation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"percent",0,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Process Inlet Air Relative Humidity for Temperature Equation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidity Ratio Equation Coefficient 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidity Ratio Equation Coefficient 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidity Ratio Equation Coefficient 3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidity Ratio Equation Coefficient 4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidity Ratio Equation Coefficient 5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidity Ratio Equation Coefficient 6",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidity Ratio Equation Coefficient 7",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidity Ratio Equation Coefficient 8",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"kgWater/kgDryAir",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Regeneration Inlet Air Humidity Ratio for Humidity Ratio Equation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"kgWater/kgDryAir",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Regeneration Inlet Air Humidity Ratio for Humidity Ratio Equation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Regeneration Inlet Air Temperature for Humidity Ratio Equation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Regeneration Inlet Air Temperature for Humidity Ratio Equation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"kgWater/kgDryAir",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Process Inlet Air Humidity Ratio for Humidity Ratio Equation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"kgWater/kgDryAir",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Process Inlet Air Humidity Ratio for Humidity Ratio Equation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Process Inlet Air Temperature for Humidity Ratio Equation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Process Inlet Air Temperature for Humidity Ratio Equation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Regeneration Air Velocity for Humidity Ratio Equation",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Regeneration Air Velocity for Humidity Ratio Equation",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"kgWater/kgDryAir",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Regeneration Outlet Air Humidity Ratio for Humidity Ratio Equation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"kgWater/kgDryAir",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Regeneration Outlet Air Humidity Ratio for Humidity Ratio Equation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"percent",0,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Regeneration Inlet Air Relative Humidity for Humidity Ratio Equation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"percent",0,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Regeneration Inlet Air Relative Humidity for Humidity Ratio Equation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"percent",0,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Process Inlet Air Relative Humidity for Humidity Ratio Equation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"percent",0,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Process Inlet Air Relative Humidity for Humidity Ratio Equation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,52 ) },
            {"AirLoopHVAC:UnitarySystem", () => new IdfObject("AirLoopHVAC:UnitarySystem",false,IdfObjectFormat.NotSpecified,false,14,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"DOAToZonalUnit","validBranchEquipmentNames","validOASysEquipmentNames","ZoneEquipmentNames"},new List<string>{"validBranchEquipmentTypes","validOASysEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,"Load",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Load","SetPoint","SingleZoneVAV"},"Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Controlling Zone or Thermostat Location",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","Multimode","CoolReheat"},"Dehumidification Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fan:SystemModel","Fan:OnOff","Fan:ConstantVolume","Fan:VariableVolume","Fan:ComponentModel"},"Supply Fan Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"Fans"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"BlowThrough","DrawThrough"},"Fan Placement",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Fan Operating Mode Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:DX:SingleSpeed","Coil:Heating:DX:MultiSpeed","Coil:Heating:DX:VariableSpeed","Coil:Heating:WaterToAirHeatPump:ParameterEstimation","Coil:Heating:WaterToAirHeatPump:EquationFit","Coil:Heating:WaterToAirHeatPump:VariableSpeedEquationFit","Coil:Heating:Fuel","Coil:Heating:Gas:MultiStage","Coil:Heating:Electric","Coil:Heating:Electric:MultiStage","Coil:Heating:Water","Coil:Heating:Steam","Coil:Heating:Desuperheater","Coil:UserDefined"},"Heating Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatingCoilsDX","HeatingCoilsDXMultiSpeed","HeatingCoilsDXVariableSpeed","HeatingCoilsWaterToAirHP","HeatingCoilsWaterToAirVSHP","HeatingCoilName","HeatingCoilsElectricMultiStage","HeatingCoilsGasMultiStage","HeatingCoilsDesuperheater","UserDefinedCoil"}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"DX Heating Coil Sizing Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Cooling:DX:SingleSpeed","Coil:Cooling:DX:TwoSpeed","Coil:Cooling:DX:MultiSpeed","Coil:Cooling:DX:VariableSpeed","Coil:Cooling:DX:TwoStageWithHumidityControlMode","Coil:Cooling:DX:SingleSpeed:ThermalStorage","CoilSystem:Cooling:DX:HeatExchangerAssisted","Coil:Cooling:WaterToAirHeatPump:ParameterEstimation","Coil:Cooling:WaterToAirHeatPump:EquationFit","Coil:Cooling:WaterToAirHeatPump:VariableSpeedEquationFit","Coil:Cooling:Water","Coil:Cooling:Water:DetailedGeometry","CoilSystem:Cooling:Water:HeatExchangerAssisted","Coil:UserDefined"},"Cooling Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CoolingCoilsDX","CoolingCoilsDXMultiSpeed","CoolingCoilsDXVariableSpeed","CoolingCoilsWaterToAirHP","CoolingCoilsWaterToAirVSHP","CoolingCoilsWater","UserDefinedCoil"}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Use DOAS DX Cooling Coil",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,20,"2.0",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Supply Air Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SensibleOnlyLoadControl",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SensibleOnlyLoadControl","LatentOnlyLoadControl","LatentWithSensibleLoadControl","LatentOrSensibleLoadControl"},"Latent Load Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:Fuel","Coil:Heating:Electric","Coil:Heating:Desuperheater","Coil:Heating:Water","Coil:Heating:Steam","Coil:UserDefined"},"Supplemental Heating Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supplemental Heating Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatingCoilName","HeatingCoilsDesuperheater","UserDefinedCoil"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","SupplyAirFlowRate","FlowPerFloorArea","FractionOfAutosizedCoolingValue","FlowPerCoolingCapacity"},"Cooling Supply Air Flow Rate Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Supply Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Supply Air Flow Rate Per Floor Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Fraction of Autosized Cooling Supply Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Supply Air Flow Rate Per Unit of Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","SupplyAirFlowRate","FlowPerFloorArea","FractionOfAutosizedHeatingValue","FlowPerHeatingCapacity"},"Heating Supply Air Flow Rate Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Supply Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Supply Air Flow Rate Per Floor Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Fraction of Autosized Heating Supply Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Supply Air Flow Rate Per Unit of Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","SupplyAirFlowRate","FlowPerFloorArea","FractionOfAutosizedCoolingValue","FractionOfAutosizedHeatingValue","FlowPerCoolingCapacity","FlowPerHeatingCapacity"},"No Load Supply Air Flow Rate Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"No Load Supply Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"No Load Supply Air Flow Rate Per Floor Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"No Load Fraction of Autosized Cooling Supply Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"No Load Fraction of Autosized Heating Supply Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"No Load Supply Air Flow Rate Per Unit of Capacity During Cooling Operation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"No Load Supply Air Flow Rate Per Unit of Capacity During Heating Operation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"80.0",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"21.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Dry-Bulb Temperature for Supplemental Heater Operation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Dry-Bulb Temperature Sensor Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"cycles/hr",0,5,"2.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Cycling Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"s",0,500,"60.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Pump Time Constant",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0.05,"0.01",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of On-Cycle Power Use",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"s",0,0,"60",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Pump Fan Delay Time",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ancillary On-Cycle Electric Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ancillary Off-Cycle Electric Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Heat Recovery Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,100,"80.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Temperature for Heat Recovery",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"UnitarySystemPerformance:Multispeed"},"Design Specification Multispeed Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Multispeed Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnitarySystemPerformaceNames"})},false,53 ) },
            {"UnitarySystemPerformance:Multispeed", () => new IdfObject("UnitarySystemPerformance:Multispeed",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"UnitarySystemPerformaceNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,10,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Speeds for Heating",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,10,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Speeds for Cooling",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Single Mode Operation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"No Load Supply Air Flow Rate Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Speed 1 Supply Air Flow Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Speed 1 Supply Air Flow Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,25 ) },
            {"AirLoopHVAC:Unitary:Furnace:HeatOnly", () => new IdfObject("AirLoopHVAC:Unitary:Furnace:HeatOnly",false,IdfObjectFormat.NotSpecified,false,13,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Furnace Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Furnace Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Fan Operating Mode Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",0,0,"80.0",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Controlling Zone or Thermostat Location",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fan:OnOff","Fan:ConstantVolume"},"Supply Fan Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FansCVandOnOff"}),new IdfField(false,"",0,0,"BlowThrough",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"BlowThrough","DrawThrough"},"Fan Placement",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:Fuel","Coil:Heating:Electric","Coil:Heating:Water","Coil:Heating:Steam"},"Heating Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatingCoilName"})},false,13 ) },
            {"AirLoopHVAC:Unitary:Furnace:HeatCool", () => new IdfObject("AirLoopHVAC:Unitary:Furnace:HeatCool",false,IdfObjectFormat.NotSpecified,false,17,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Furnace Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Furnace Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Fan Operating Mode Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",0,0,"80.0",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"No Load Supply Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Controlling Zone or Thermostat Location",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fan:OnOff","Fan:ConstantVolume"},"Supply Fan Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FansCVandOnOff"}),new IdfField(false,"",0,0,"BlowThrough",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"BlowThrough","DrawThrough"},"Fan Placement",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:Fuel","Coil:Heating:Electric","Coil:Heating:Water","Coil:Heating:Steam"},"Heating Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatingCoilName"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Cooling:DX:SingleSpeed","CoilSystem:Cooling:DX:HeatExchangerAssisted"},"Cooling Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CoolingCoilsDXSingleSpeed"}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","Multimode","CoolReheat"},"Dehumidification Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:Fuel","Coil:Heating:Electric","Coil:Heating:Desuperheater","Coil:Heating:Water","Coil:Heating:Steam"},"Reheat Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reheat Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatingCoilName"})},false,20 ) },
            {"AirLoopHVAC:UnitaryHeatOnly", () => new IdfObject("AirLoopHVAC:UnitaryHeatOnly",false,IdfObjectFormat.NotSpecified,false,13,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Unitary System Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Unitary System Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Fan Operating Mode Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",0,0,"80.0",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Controlling Zone or Thermostat Location",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fan:OnOff","Fan:ConstantVolume"},"Supply Fan Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FansCVandOnOff"}),new IdfField(false,"",0,0,"BlowThrough",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"BlowThrough","DrawThrough"},"Fan Placement",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:Fuel","Coil:Heating:Electric","Coil:Heating:Water","Coil:Heating:Steam"},"Heating Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatingCoilName"})},false,13 ) },
            {"AirLoopHVAC:UnitaryHeatCool", () => new IdfObject("AirLoopHVAC:UnitaryHeatCool",false,IdfObjectFormat.NotSpecified,false,17,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Unitary System Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Unitary System Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Fan Operating Mode Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",0,0,"80.0",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"No Load Supply Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Controlling Zone or Thermostat Location",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fan:OnOff","Fan:ConstantVolume"},"Supply Fan Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Fan Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FansCVandOnOff"}),new IdfField(false,"",0,0,"BlowThrough",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"BlowThrough","DrawThrough"},"Fan Placement",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:Fuel","Coil:Heating:Electric","Coil:Heating:Water","Coil:Heating:Steam"},"Heating Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatingCoilName"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Cooling:DX:SingleSpeed","Coil:Cooling:DX:VariableSpeed","CoilSystem:Cooling:DX:HeatExchangerAssisted"},"Cooling Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CoolingCoilsDXSingleSpeed","CoolingCoilsDXVariableSpeed"}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","Multimode","CoolReheat"},"Dehumidification Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:Fuel","Coil:Heating:Electric","Coil:Heating:Desuperheater","Coil:Heating:Water","Coil:Heating:Steam"},"Reheat Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reheat Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatingCoilName"})},false,20 ) },
            {"AirLoopHVAC:UnitaryHeatPump:AirToAir", () => new IdfObject("AirLoopHVAC:UnitaryHeatPump:AirToAir",false,IdfObjectFormat.NotSpecified,false,19,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"No Load Supply Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Controlling Zone or Thermostat Location",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fan:OnOff","Fan:ConstantVolume"},"Supply Air Fan Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Fan Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FansCVandOnOff"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:DX:SingleSpeed","Coil:Heating:DX:VariableSpeed","CoilSystem:IntegratedHeatPump:AirSource"},"Heating Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatingCoilsDXSingleSpeed","HeatingCoilsDXVariableSpeed","IntegratedHeatPumps"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Cooling:DX:SingleSpeed","Coil:Cooling:DX:VariableSpeed","CoilSystem:Cooling:DX:HeatExchangerAssisted","CoilSystem:IntegratedHeatPump:AirSource"},"Cooling Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CoolingCoilsDXSingleSpeed","CoolingCoilsDXVariableSpeed","IntegratedHeatPumps"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:Fuel","Coil:Heating:Electric","Coil:Heating:Water","Coil:Heating:Steam"},"Supplemental Heating Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supplemental Heating Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatingCoilName"}),new IdfField(true,"C",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Supply Air Temperature from Supplemental Heater",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,21,"21.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Dry-Bulb Temperature for Supplemental Heater Operation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"BlowThrough",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"BlowThrough","DrawThrough"},"Fan Placement",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Fan Operating Mode Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","Multimode","CoolReheat"},"Dehumidification Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,21 ) },
            {"AirLoopHVAC:UnitaryHeatPump:WaterToAir", () => new IdfObject("AirLoopHVAC:UnitaryHeatPump:WaterToAir",false,IdfObjectFormat.NotSpecified,false,25,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Controlling Zone or Thermostat Location",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fan:OnOff"},"Supply Air Fan Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Fan Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FansOnOff"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:WaterToAirHeatPump:ParameterEstimation","Coil:Heating:WaterToAirHeatPump:EquationFit","Coil:Heating:WaterToAirHeatPump:VariableSpeedEquationFit"},"Heating Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatingCoilsWaterToAirHP","HeatingCoilsWaterToAirVSHP"}),new IdfField(false,"",0,0,"0.001",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Convergence",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Cooling:WaterToAirHeatPump:ParameterEstimation","Coil:Cooling:WaterToAirHeatPump:EquationFit","Coil:Cooling:WaterToAirHeatPump:VariableSpeedEquationFit"},"Cooling Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CoolingCoilsWaterToAirHP","CoolingCoilsWaterToAirVSHP"}),new IdfField(false,"",0,0,"0.001",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Convergence",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"cycles/hr",0,5,"2.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Cycling Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"s",0,500,"60.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Pump Time Constant",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0.05,"0.01",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of On-Cycle Power Use",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"s",0,0,"60",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Pump Fan Delay Time",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:Fuel","Coil:Heating:Electric","Coil:Heating:Water","Coil:Heating:Steam"},"Supplemental Heating Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supplemental Heating Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatingCoilName"}),new IdfField(true,"C",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Supply Air Temperature from Supplemental Heater",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,21,"21.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Dry-Bulb Temperature for Supplemental Heater Operation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Dry-Bulb Temperature Sensor Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"BlowThrough",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"BlowThrough","DrawThrough"},"Fan Placement",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Fan Operating Mode Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","CoolReheat"},"Dehumidification Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Cycling",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Constant","Cycling","ConstantOnDemand"},"Heat Pump Coil Water Flow Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,27 ) },
            {"AirLoopHVAC:UnitaryHeatCool:VAVChangeoverBypass", () => new IdfObject("AirLoopHVAC:UnitaryHeatCool:VAVChangeoverBypass",false,IdfObjectFormat.NotSpecified,false,23,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"No Load Supply Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Outdoor Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Outdoor Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"No Load Outdoor Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Flow Rate Multiplier Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Bypass Duct Mixer Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Bypass Duct Splitter Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"OutdoorAir:Mixer"},"Outdoor Air Mixer Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Mixer Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"OutdoorAirMixers"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fan:SystemModel","Fan:OnOff","Fan:ConstantVolume"},"Supply Air Fan Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Fan Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FansCVandOnOff"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"BlowThrough","DrawThrough"},"Supply Air Fan Placement",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Fan Operating Mode Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Cooling:DX:SingleSpeed","Coil:Cooling:DX:VariableSpeed","CoilSystem:Cooling:DX:HeatExchangerAssisted","Coil:Cooling:DX:TwoStageWithHumidityControlMode"},"Cooling Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CoolingCoilsDXMultiModeOrSingleSpeed","CoolingCoilsDXVariableSpeed"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:DX:SingleSpeed","Coil:Heating:DX:VariableSpeed","Coil:Heating:Fuel","Coil:Heating:Electric","Coil:Heating:Water","Coil:Heating:Steam"},"Heating Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatingCoilName","HeatingCoilsDXVariableSpeed"}),new IdfField(false,"",0,0,"ZonePriority",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"CoolingPriority","HeatingPriority","ZonePriority","LoadPriority"},"Priority Control Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"8.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outlet Air Temperature During Cooling Operation",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"50.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outlet Air Temperature During Heating Operation",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","Multimode","CoolReheat"},"Dehumidification Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plenum or Mixer Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"hr",0,0,"0.25",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Runtime Before Operating Mode Change",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,29 ) },
            {"AirLoopHVAC:UnitaryHeatPump:AirToAir:MultiSpeed", () => new IdfObject("AirLoopHVAC:UnitaryHeatPump:AirToAir:MultiSpeed",false,IdfObjectFormat.NotSpecified,false,31,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Controlling Zone or Thermostat Location",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fan:OnOff","Fan:ConstantVolume"},"Supply Air Fan Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Fan Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FansCVandOnOff"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"BlowThrough","DrawThrough"},"Supply Air Fan Placement",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Fan Operating Mode Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:DX:MultiSpeed","Coil:Heating:Electric:MultiStage","Coil:Heating:Gas:MultiStage","Coil:Heating:Water","Coil:Heating:Steam"},"Heating Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatingCoilsDXMultiSpeed","HeatingCoilsElectricMultiStage","HeatingCoilsGasMultiStage"}),new IdfField(false,"C",0,0,"-8.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Dry-Bulb Temperature for Compressor Operation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Cooling:DX:MultiSpeed"},"Cooling Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CoolingCoilsDXMultiSpeed"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:Heating:Fuel","Coil:Heating:Electric","Coil:Heating:Water","Coil:Heating:Steam"},"Supplemental Heating Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supplemental Heating Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatingCoilName"}),new IdfField(false,"C",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Supply Air Temperature from Supplemental Heater",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,21,"21.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Dry-Bulb Temperature for Supplemental Heater Operation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Auxiliary On-Cycle Electric Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Auxiliary Off-Cycle Electric Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Heat Recovery Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,100,"80.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Temperature for Heat Recovery",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"No Load Supply Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",1,4,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Speeds for Heating",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",2,4,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Speeds for Cooling",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Speed 1 Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Speed 2 Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Speed 3 Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Speed 4 Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Speed 1 Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Speed 2 Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Speed 3 Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Speed 4 Supply Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,35 ) },
            {"AirConditioner:VariableRefrigerantFlow", () => new IdfObject("AirConditioner:VariableRefrigerantFlow",false,IdfObjectFormat.NotSpecified,false,37,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Pump Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gross Rated Total Cooling Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.3",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gross Rated Cooling COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"-6.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Temperature in Cooling Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"43.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Temperature in Cooling Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Capacity Ratio Modifier Function of Low Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Capacity Ratio Boundary Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Capacity Ratio Modifier Function of High Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Energy Input Ratio Modifier Function of Low Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Energy Input Ratio Boundary Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Energy Input Ratio Modifier Function of High Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Energy Input Ratio Modifier Function of Low Part-Load Ratio Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Energy Input Ratio Modifier Function of High Part-Load Ratio Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Combination Ratio Correction Factor Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Part-Load Fraction Correlation Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gross Rated Heating Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",1,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Heating Capacity Sizing Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.4",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gross Rated Heating COP",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"-20.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Temperature in Heating Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"16.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Temperature in Heating Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Capacity Ratio Modifier Function of Low Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Capacity Ratio Boundary Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Capacity Ratio Modifier Function of High Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Energy Input Ratio Modifier Function of Low Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Energy Input Ratio Boundary Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Energy Input Ratio Modifier Function of High Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,"WetBulbTemperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"DryBulbTemperature","WetBulbTemperature"},"Heating Performance Curve Outdoor Temperature Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Energy Input Ratio Modifier Function of Low Part-Load Ratio Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Energy Input Ratio Modifier Function of High Part-Load Ratio Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Combination Ratio Correction Factor Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Part-Load Fraction Correlation Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"dimensionless",0,0,"0.15",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Heat Pump Part-Load Ratio",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name for Master Thermostat Location",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,"MasterThermostatPriority",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"LoadPriority","ZonePriority","ThermostatOffsetPriority","MasterThermostatPriority","Scheduled"},"Master Thermostat Priority Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermostat Priority Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Terminal Unit List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneTerminalUnitListNames"}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"No","Yes"},"Heat Pump Waste Heat Recovery",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equivalent Piping Length used for Piping Correction Factor in Cooling Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Vertical Height used for Piping Correction Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Piping Correction Factor for Length in Cooling Mode Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions","BivariateFunctions"}),new IdfField(false,"1/m",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Piping Correction Factor for Height in Cooling Mode Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equivalent Piping Length used for Piping Correction Factor in Heating Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Piping Correction Factor for Length in Heating Mode Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions","BivariateFunctions"}),new IdfField(false,"1/m",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Piping Correction Factor for Height in Heating Mode Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"33.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Crankcase Heater Power per Compressor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Compressors",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"0.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ratio of Compressor Size to Total Compressor Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"5.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Dry-Bulb Temperature for Crankcase Heater",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Resistive",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ReverseCycle","Resistive"},"Defrost Strategy",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Timed",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Timed","OnDemand"},"Defrost Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Defrost Energy Input Ratio Modifier Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"dimensionless",0,0,"0.058333",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Defrost Time Period Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Resistive Defrost Heater Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"5.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Dry-bulb Temperature for Defrost Operation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"AirCooled",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"AirCooled","EvaporativelyCooled","WaterCooled"},"Condenser Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Condenser Volume Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporative Condenser Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporative Condenser Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporative Condenser Pump Rated Power Consumption",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Water Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",2,0,"2.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Setpoint Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Operating Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"Electricity",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Electricity","NaturalGas","PropaneGas","Diesel","Gasoline","FuelOil#1","FuelOil#2","OtherFuel1","OtherFuel2"},"Fuel Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Temperature in Heat Recovery Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Temperature in Heat Recovery Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Cooling Capacity Modifier Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"W/W",0,0,"0.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Initial Heat Recovery Cooling Capacity Fraction",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"hr",0,0,"0.15",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Cooling Capacity Time Constant",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Cooling Energy Modifier Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"W/W",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Initial Heat Recovery Cooling Energy Fraction",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"hr",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Cooling Energy Time Constant",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Heating Capacity Modifier Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"W/W",0,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Initial Heat Recovery Heating Capacity Fraction",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"hr",0,0,"0.15",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Heating Capacity Time Constant",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Heating Energy Modifier Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"W/W",0,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Initial Heat Recovery Heating Energy Fraction",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"hr",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Heating Energy Time Constant",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,81 ) },
            {"AirConditioner:VariableRefrigerantFlow:FluidTemperatureControl", () => new IdfObject("AirConditioner:VariableRefrigerantFlow:FluidTemperatureControl",false,IdfObjectFormat.NotSpecified,false,41,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Pump Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Terminal Unit List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneTerminalUnitListNames"}),new IdfField(false,"",0,0,"R410A",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Refrigerant Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FluidNames"}),new IdfField(false,"W",0,0,"40000",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Evaporative Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"0.35",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Compressor Power Per Unit of Rated Evaporative Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"-6.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Air Temperature in Cooling Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"43.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Air Temperature in Cooling Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"-20.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Air Temperature in Heating Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"16.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Air Temperature in Heating Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"3",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Outdoor Unit Superheating",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Outdoor Unit Subcooling",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"VariableTemp",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ConstantTemp","VariableTemp"},"Refrigerant Temperature Control Algorithm for Indoor Unit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"6.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Evaporating Temperature for Indoor Unit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"44.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Condensing Temperature for Indoor Unit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"4.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Variable Evaporating Temperature Minimum for Indoor Unit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"13.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Variable Evaporating Temperature Maximum for Indoor Unit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"42.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Variable Condensing Temperature Minimum for Indoor Unit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"46.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Variable Condensing Temperature Maximum for Indoor Unit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"4.25E-3",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Unit Fan Power Per Unit of Rated Evaporative Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-W",0,0,"7.50E-5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Unit Fan Flow Rate Per Unit of Rated Evaporative Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Unit Evaporating Temperature Function of Superheating Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Unit Condensing Temperature Function of Subcooling Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"m",0,0,"0.0762",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Diameter of Main Pipe Connecting Outdoor Unit to the First Branch Joint",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"30.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Length of Main Pipe Connecting Outdoor Unit to the First Branch Joint",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"36.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equivalent Length of Main Pipe Connecting Outdoor Unit to the First Branch Joint",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"5.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Height Difference Between Outdoor Unit and Indoor Units",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.02",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Main Pipe Insulation Thickness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,"0.032",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Main Pipe Insulation Thermal Conductivity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"33.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Crankcase Heater Power per Compressor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Compressors",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"0.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ratio of Compressor Size to Total Compressor Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"5.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Dry-Bulb Temperature for Crankcase Heater",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Resistive",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ReverseCycle","Resistive"},"Defrost Strategy",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Timed",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Timed","OnDemand"},"Defrost Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Defrost Energy Input Ratio Modifier Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,"0.058333",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Defrost Time Period Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Resistive Defrost Heater Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"5.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Dry-bulb Temperature for Defrost Operation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,50000000,"4500000.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compressor maximum delta Pressure",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",2,9,"2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Compressor Loading Index Entries",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"rev/min",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compressor Speed at Loading Index 1",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Loading Index 1 Evaporative Capacity Multiplier Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Loading Index 1 Compressor Power Multiplier Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"})},true,68 ) },
            {"AirConditioner:VariableRefrigerantFlow:FluidTemperatureControl:HR", () => new IdfObject("AirConditioner:VariableRefrigerantFlow:FluidTemperatureControl:HR",false,IdfObjectFormat.NotSpecified,false,58,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Terminal Unit List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneTerminalUnitListNames"}),new IdfField(false,"",0,0,"R410A",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Refrigerant Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FluidNames"}),new IdfField(false,"W",0,0,"40000",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Evaporative Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"0.35",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Compressor Power Per Unit of Rated Evaporative Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"-6.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Air Temperature in Cooling Only Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"43.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Air Temperature in Cooling Only Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"-20.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Air Temperature in Heating Only Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"16.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Air Temperature in Heating Only Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"-20.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Temperature in Heat Recovery Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"43.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Temperature in Heat Recovery Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"VariableTemp",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ConstantTemp","VariableTemp"},"Refrigerant Temperature Control Algorithm for Indoor Unit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"6.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Evaporating Temperature for Indoor Unit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"44.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Condensing Temperature for Indoor Unit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"4.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Variable Evaporating Temperature Minimum for Indoor Unit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"13.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Variable Evaporating Temperature Maximum for Indoor Unit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"42.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Variable Condensing Temperature Minimum for Indoor Unit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"46.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Variable Condensing Temperature Maximum for Indoor Unit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"3",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Unit Evaporator Reference Superheating",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Unit Condenser Reference Subcooling",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"0.4",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Unit Evaporator Rated Bypass Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Unit Condenser Rated Bypass Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Difference between Outdoor Unit Evaporating Temperature and Outdoor Air Temperature in Heat Recovery Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"0.3",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Unit Heat Exchanger Capacity Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"4.25E-3",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Unit Fan Power Per Unit of Rated Evaporative Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-W",0,0,"7.50E-5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Unit Fan Flow Rate Per Unit of Rated Evaporative Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Unit Evaporating Temperature Function of Superheating Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Unit Condensing Temperature Function of Subcooling Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"m",0,0,"0.0762",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Diameter of Main Pipe for Suction Gas",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.0762",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Diameter of Main Pipe for Discharge Gas",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"30.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Length of Main Pipe Connecting Outdoor Unit to the First Branch Joint",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"36.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equivalent Length of Main Pipe Connecting Outdoor Unit to the First Branch Joint",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"5.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Height Difference Between Outdoor Unit and Indoor Units",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.02",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Main Pipe Insulation Thickness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,"0.032",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Main Pipe Insulation Thermal Conductivity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"33.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Crankcase Heater Power per Compressor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Compressors",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"0.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ratio of Compressor Size to Total Compressor Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"5.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Dry-Bulb Temperature for Crankcase Heater",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Resistive",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ReverseCycle","Resistive"},"Defrost Strategy",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Timed",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Timed","OnDemand"},"Defrost Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Defrost Energy Input Ratio Modifier Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,"0.058333",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Defrost Time Period Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Resistive Defrost Heater Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"5.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Dry-bulb Temperature for Defrost Operation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Initial Heat Recovery Cooling Capacity Fraction",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"hr",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Cooling Capacity Time Constant",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Initial Heat Recovery Cooling Energy Fraction",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"hr",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Cooling Energy Time Constant",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Initial Heat Recovery Heating Capacity Fraction",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"hr",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Heating Capacity Time Constant",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Initial Heat Recovery Heating Energy Fraction",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"hr",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Heating Energy Time Constant",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,50000000,"4500000.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compressor maximum delta Pressure",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.95",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compressor Inverter Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compressor Evaporative Capacity Correction Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",2,0,"2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Compressor Loading Index Entries",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"rev/min",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compressor Speed at Loading Index 1",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Loading Index 1 Evaporative Capacity Multiplier Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Loading Index 1 Compressor Power Multiplier Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"})},true,91 ) },
            {"ZoneTerminalUnitList", () => new IdfObject("ZoneTerminalUnitList",false,IdfObjectFormat.NotSpecified,false,2,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Terminal Unit List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ZoneTerminalUnitListNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Terminal Unit Name 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneTerminalUnitNames"})},true,21 ) },
            {"Controller:WaterCoil", () => new IdfObject("Controller:WaterCoil",false,IdfObjectFormat.NotSpecified,false,9,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AirLoopControllers","WaterCoilControllers"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Temperature","HumidityRatio","TemperatureAndHumidityRatio"},"Control Variable",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Normal","Reverse"},"Action",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Flow"},"Actuator Variable",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sensor Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Actuator Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Controller Convergence Tolerance",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Actuated Flow",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0000001",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Actuated Flow",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,9 ) },
            {"Controller:OutdoorAir", () => new IdfObject("Controller:OutdoorAir",false,IdfObjectFormat.NotSpecified,false,16,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AirLoopControllers","OAControllerNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relief Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Air Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mixed Air Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Actuator Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Air Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Air Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"NoEconomizer",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"FixedDryBulb","FixedEnthalpy","DifferentialDryBulb","DifferentialEnthalpy","FixedDewPointAndDryBulb","ElectronicEnthalpy","DifferentialDryBulbAndEnthalpy","NoEconomizer"},"Economizer Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ModulateFlow",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ModulateFlow","MinimumFlowWithBypass"},"Economizer Control Action Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Economizer Maximum Limit Dry-Bulb Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Economizer Maximum Limit Enthalpy",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Economizer Maximum Limit Dewpoint Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Electronic Enthalpy Limit Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Economizer Minimum Limit Dry-Bulb Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"NoLockout",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"NoLockout","LockoutWithHeating","LockoutWithCompressor"},"Lockout Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ProportionalMinimum",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"FixedMinimum","ProportionalMinimum"},"Minimum Limit Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Air Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Fraction of Outdoor Air Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Fraction of Outdoor Air Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mechanical Ventilation Controller Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ControllerMechanicalVentNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Time of Day Economizer Control Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"High Humidity Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidistat Control Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"High Humidity Outdoor Air Flow Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Yes",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Control High Indoor Humidity Based on Outdoor Humidity Ratio",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"BypassWhenWithinEconomizerLimits",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"BypassWhenWithinEconomizerLimits","BypassWhenOAFlowGreaterThanMinimum"},"Heat Recovery Bypass Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,26 ) },
            {"Controller:MechanicalVentilation", () => new IdfObject("Controller:MechanicalVentilation",false,IdfObjectFormat.NotSpecified,false,8,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ControllerMechanicalVentNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Demand Controlled Ventilation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"VentilationRateProcedure",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ZoneSum","VentilationRateProcedure","IndoorAirQualityProcedure","ProportionalControlBasedOnDesignOccupancy","ProportionalControlBasedonOccupancySchedule","IndoorAirQualityProcedureGenericContaminant","IndoorAirQualityProcedureCombined","ProportionalControlBasedOnDesignOARate"},"System Outdoor Air Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Maximum Outdoor Air Fraction",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneAndZoneListNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Outdoor Air Object Name 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationOutdoorAirNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Specification Zone Air Distribution Object Name 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DesignSpecificationZoneAirDistributionNames"})},true,155 ) },
            {"AirLoopHVAC:ControllerList", () => new IdfObject("AirLoopHVAC:ControllerList",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ControllerLists"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Controller:WaterCoil","Controller:OutdoorAir"},"Controller 1 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Controller 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AirLoopControllers"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Controller:WaterCoil","Controller:OutdoorAir"},"Controller 2 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Controller 2 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AirLoopControllers"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Controller:WaterCoil","Controller:OutdoorAir"},"Controller 3 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Controller 3 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AirLoopControllers"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Controller:WaterCoil","Controller:OutdoorAir"},"Controller 4 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Controller 4 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AirLoopControllers"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Controller:WaterCoil","Controller:OutdoorAir"},"Controller 5 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Controller 5 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AirLoopControllers"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Controller:WaterCoil","Controller:OutdoorAir"},"Controller 6 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Controller 6 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AirLoopControllers"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Controller:WaterCoil","Controller:OutdoorAir"},"Controller 7 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Controller 7 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AirLoopControllers"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Controller:WaterCoil","Controller:OutdoorAir"},"Controller 8 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Controller 8 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AirLoopControllers"})},false,17 ) },
            {"AirLoopHVAC", () => new IdfObject("AirLoopHVAC",false,IdfObjectFormat.NotSpecified,false,10,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AirPrimaryLoops"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Controller List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ControllerLists"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Manager List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SystemAvailabilityManagerLists"}),new IdfField(false,"m3/s",0,0,"0",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Supply Air Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Branch List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BranchLists"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Connector List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ConnectorLists"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Side Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Demand Side Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Demand Side Inlet Node Names",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Side Outlet Node Names",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Return Air Flow Fraction of Supply Air Flow",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,11 ) },
            {"AirLoopHVAC:OutdoorAirSystem:EquipmentList", () => new IdfObject("AirLoopHVAC:OutdoorAirSystem:EquipmentList",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AirLoopOAEquipmentLists"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 1 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"validOASysEquipmentTypes"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"validOASysEquipmentNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 2 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"validOASysEquipmentTypes"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 2 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"validOASysEquipmentNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 3 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"validOASysEquipmentTypes"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 3 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"validOASysEquipmentNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 4 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"validOASysEquipmentTypes"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 4 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"validOASysEquipmentNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 5 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"validOASysEquipmentTypes"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 5 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"validOASysEquipmentNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 6 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"validOASysEquipmentTypes"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 6 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"validOASysEquipmentNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 7 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"validOASysEquipmentTypes"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 7 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"validOASysEquipmentNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 8 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"validOASysEquipmentTypes"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 8 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"validOASysEquipmentNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 9 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"validOASysEquipmentTypes"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 9 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"validOASysEquipmentNames"})},false,19 ) },
            {"AirLoopHVAC:OutdoorAirSystem", () => new IdfObject("AirLoopHVAC:OutdoorAirSystem",false,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Controller List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ControllerLists"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AirLoopOAEquipmentLists"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Manager List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SystemAvailabilityManagerLists"})},false,4 ) },
            {"OutdoorAir:Mixer", () => new IdfObject("OutdoorAir:Mixer",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"OutdoorAirMixers","validOASysEquipmentNames"},new List<string>{"validOASysEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mixed Air Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Stream Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relief Air Stream Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Air Stream Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"AirLoopHVAC:ZoneSplitter", () => new IdfObject("AirLoopHVAC:ZoneSplitter",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SupplyPathComponentNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outlet 1 Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,502 ) },
            {"AirLoopHVAC:SupplyPlenum", () => new IdfObject("AirLoopHVAC:SupplyPlenum",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SupplyPathComponentNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outlet 1 Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,504 ) },
            {"AirLoopHVAC:SupplyPath", () => new IdfObject("AirLoopHVAC:SupplyPath",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Air Path Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"AirLoopHVAC:ZoneSplitter","AirLoopHVAC:SupplyPlenum"},"Component 1 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SupplyPathComponentNames"})},true,52 ) },
            {"AirLoopHVAC:ZoneMixer", () => new IdfObject("AirLoopHVAC:ZoneMixer",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ZoneMixers","ReturnPathComponentNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet 1 Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,502 ) },
            {"AirLoopHVAC:ReturnPlenum", () => new IdfObject("AirLoopHVAC:ReturnPlenum",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ReturnPathComponentNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Induced Air Outlet Node or NodeList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet 1 Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,505 ) },
            {"AirLoopHVAC:ReturnPath", () => new IdfObject("AirLoopHVAC:ReturnPath",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Air Path Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"AirLoopHVAC:ZoneMixer","AirLoopHVAC:ReturnPlenum"},"Component 1 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ReturnPathComponentNames"})},true,52 ) },
            {"AirLoopHVAC:DedicatedOutdoorAirSystem", () => new IdfObject("AirLoopHVAC:DedicatedOutdoorAirSystem",false,IdfObjectFormat.NotSpecified,false,11,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"DOASAirLoops"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"AirLoopHVAC:OutdoorAirSystem Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"validBranchEquipmentNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"AirLoopHVAC:Mixer Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AirLoopHVACMixerNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"AirLoopHVAC:Splitter Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AirLoopHVACSplitterNames"}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Preheat Design Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"kgWater/kgDryAir",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Preheat Design Humidity Ratio",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Precool Design Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"kgWater/kgDryAir",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Precool Design Humidity Ratio",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of AirLoopHVAC",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"AirLoopHVAC 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AirPrimaryLoops"})},true,30 ) },
            {"AirLoopHVAC:Mixer", () => new IdfObject("AirLoopHVAC:Mixer",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AirLoopHVACMixerNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet 1 Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,52 ) },
            {"AirLoopHVAC:Splitter", () => new IdfObject("AirLoopHVAC:Splitter",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AirLoopHVACSplitterNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outlet 1 Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,52 ) },
            {"Branch", () => new IdfObject("Branch",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"Branches"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pressure Drop Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 1 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"validBranchEquipmentTypes"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"validBranchEquipmentNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 1 Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 1 Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,46 ) },
            {"BranchList", () => new IdfObject("BranchList",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"BranchLists"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Branch 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"Branches"})},true,501 ) },
            {"Connector:Splitter", () => new IdfObject("Connector:Splitter",false,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"PlantConnectors"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet Branch Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"Branches"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outlet Branch 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"Branches"})},true,502 ) },
            {"Connector:Mixer", () => new IdfObject("Connector:Mixer",false,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"PlantConnectors"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outlet Branch Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"Branches"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet Branch 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"Branches"})},true,502 ) },
            {"ConnectorList", () => new IdfObject("ConnectorList",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ConnectorLists"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Connector:Splitter","Connector:Mixer"},"Connector 1 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Connector 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"PlantConnectors"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Connector:Splitter","Connector:Mixer"},"Connector 2 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Connector 2 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"PlantConnectors"})},false,5 ) },
            {"NodeList", () => new IdfObject("NodeList",false,IdfObjectFormat.NotSpecified,false,2,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Node 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,501 ) },
            {"OutdoorAir:Node", () => new IdfObject("OutdoorAir:Node",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"OutdoorAirNodeNames"},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"-1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Height Above Ground",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Drybulb Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wetbulb Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Speed Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Direction Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wind Pressure Coefficient Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WPCValueNames","UnivariateFunctions"}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Symmetric Wind Pressure Coefficient Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Absolute",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Absolute","Relative"},"Wind Angle Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,9 ) },
            {"OutdoorAir:NodeList", () => new IdfObject("OutdoorAir:NodeList",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Node or NodeList Name 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,500 ) },
            {"Pipe:Adiabatic", () => new IdfObject("Pipe:Adiabatic",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,3 ) },
            {"Pipe:Adiabatic:Steam", () => new IdfObject("Pipe:Adiabatic:Steam",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,3 ) },
            {"Pipe:Indoor", () => new IdfObject("Pipe:Indoor",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Construction Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ConstructionNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fluid Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fluid Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Zone",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Zone","Schedule"},"Environment Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ambient Temperature Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ambient Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ambient Air Velocity Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pipe Inside Diameter",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pipe Length",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,10 ) },
            {"Pipe:Outdoor", () => new IdfObject("Pipe:Outdoor",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Construction Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ConstructionNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fluid Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fluid Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ambient Temperature Outdoor Air Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pipe Inside Diameter",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pipe Length",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,7 ) },
            {"Pipe:Underground", () => new IdfObject("Pipe:Underground",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Construction Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ConstructionNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fluid Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fluid Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SunExposed","NoSun"},"Sun Exposure",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pipe Inside Diameter",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pipe Length",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Material Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Site:GroundTemperature:Undisturbed:FiniteDifference","Site:GroundTemperature:Undisturbed:KusudaAchenbach","Site:GroundTemperature:Undisturbed:Xing"},"Undisturbed Ground Temperature Model Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Undisturbed Ground Temperature Model Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UndisturbedGroundTempModels"})},false,10 ) },
            {"PipingSystem:Underground:Domain", () => new IdfObject("PipingSystem:Underground:Domain",false,IdfObjectFormat.NotSpecified,false,31,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Xmax",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ymax",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zmax",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"4",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"X-Direction Mesh Density Parameter",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Uniform","SymmetricGeometric"},"X-Direction Mesh Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,2,"1.3",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"X-Direction Geometric Coefficient",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"4",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Y-Direction Mesh Density Parameter",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Uniform","SymmetricGeometric"},"Y-Direction Mesh Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,2,"1.3",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Y-Direction Geometric Coefficient",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"4",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Z-Direction Mesh Density Parameter",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Uniform","SymmetricGeometric"},"Z-Direction Mesh Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,2,"1.3",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Z-Direction Geometric Coefficient",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Thermal Conductivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Density",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"J/kg-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Specific Heat",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent",0,100,"30",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Moisture Content Volume Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent",0,100,"50",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Moisture Content Volume Fraction at Saturation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Site:GroundTemperature:Undisturbed:FiniteDifference","Site:GroundTemperature:Undisturbed:KusudaAchenbach","Site:GroundTemperature:Undisturbed:Xing"},"Undisturbed Ground Temperature Model Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Undisturbed Ground Temperature Model Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UndisturbedGroundTempModels"}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"This Domain Includes Basement Surface Interaction",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Width of Basement Floor in Ground Domain",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Depth of Basement Wall In Ground Domain",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Shift Pipe X Coordinates By Basement Width",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name of Basement Wall Boundary Condition Model",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"OSCMNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name of Basement Floor Boundary Condition Model",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"OSCMNames"}),new IdfField(false,"deltaC",1E-06,0.5,"0.001",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Convergence Criterion for the Outer Cartesian Domain Iteration Loop",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",3,10000,"500",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Iterations in the Outer Cartesian Domain Iteration Loop",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1.5,"0.4",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evapotranspiration Ground Cover Parameter",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",1,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Pipe Circuits Entered for this Domain",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pipe Circuit 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"PipingSystemUndergroundCircuitNames"})},true,36 ) },
            {"PipingSystem:Underground:PipeCircuit", () => new IdfObject("PipingSystem:Underground:PipeCircuit",false,IdfObjectFormat.NotSpecified,false,15,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"PipingSystemUndergroundCircuitNames","validPlantEquipmentNames","validCondenserEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validCondenserEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pipe Thermal Conductivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"kg/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pipe Density",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"J/kg-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pipe Specific Heat",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pipe Inner Diameter",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pipe Outer Diameter",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Circuit Inlet Node",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Circuit Outlet Node",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",1E-06,0.5,"0.001",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Convergence Criterion for the Inner Radial Iteration Loop",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",3,10000,"500",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Iterations in the Inner Radial Iteration Loop",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,15,"3",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Soil Nodes in the Inner Radial Near Pipe Mesh Region",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Radial Thickness of Inner Radial Near Pipe Mesh Region",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",1,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Pipe Segments Entered for this Pipe Circuit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pipe Segment 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"PipingSystemUndergroundSegmentNames"})},true,20 ) },
            {"PipingSystem:Underground:PipeSegment", () => new IdfObject("PipingSystem:Underground:PipeSegment",false,IdfObjectFormat.NotSpecified,false,4,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"PipingSystemUndergroundSegmentNames"},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"X Position",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Y Position",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"IncreasingZ","DecreasingZ"},"Flow Direction",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,4 ) },
            {"Duct", () => new IdfObject("Duct",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,3 ) },
            {"Pump:VariableSpeed", () => new IdfObject("Pump:VariableSpeed",false,IdfObjectFormat.NotSpecified,false,14,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Maximum Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"179352",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Pump Head",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Power Consumption",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Motor Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Motor Inefficiencies to Fluid Stream",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 1 of the Part Load Performance Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 2 of the Part Load Performance Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 3 of the Part Load Performance Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 4 of the Part Load Performance Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Minimum Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Continuous",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Continuous","Intermittent"},"Pump Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pump Flow Rate Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pump Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Impeller Diameter",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ManualControl","PressureSetpointControl"},"VFD Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pump RPM Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"Pa",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Pressure Schedule",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"Pa",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Pressure Schedule",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"rev/min",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum RPM Schedule",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"rev/min",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum RPM Schedule",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Skin Loss Radiative Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"PowerPerFlowPerPressure",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"PowerPerFlow","PowerPerFlowPerPressure"},"Design Power Sizing Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/(m3/s)",0,0,"348701.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Electric Power per Unit Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/((m3/s)-Pa)",0,0,"1.282051282",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Shaft Power per Unit Flow Rate per Unit Head",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Minimum Flow Rate Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,30 ) },
            {"Pump:ConstantSpeed", () => new IdfObject("Pump:ConstantSpeed",false,IdfObjectFormat.NotSpecified,false,9,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"179352",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Pump Head",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Power Consumption",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Motor Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Motor Inefficiencies to Fluid Stream",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Continuous",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Continuous","Intermittent"},"Pump Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pump Flow Rate Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pump Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Impeller Diameter",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"rev/min",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rotational Speed",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Skin Loss Radiative Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"PowerPerFlowPerPressure",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"PowerPerFlow","PowerPerFlowPerPressure"},"Design Power Sizing Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/(m3/s)",0,0,"348701.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Electric Power per Unit Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/((m3/s)-Pa)",0,0,"1.282051282",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Shaft Power per Unit Flow Rate per Unit Head",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,19 ) },
            {"Pump:VariableSpeed:Condensate", () => new IdfObject("Pump:VariableSpeed:Condensate",false,IdfObjectFormat.NotSpecified,false,13,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Steam Volume Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"179352",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Pump Head",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Power Consumption",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Motor Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Motor Inefficiencies to Fluid Stream",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 1 of the Part Load Performance Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 2 of the Part Load Performance Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 3 of the Part Load Performance Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 4 of the Part Load Performance Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pump Flow Rate Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Skin Loss Radiative Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"PowerPerFlowPerPressure",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"PowerPerFlow","PowerPerFlowPerPressure"},"Design Power Sizing Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/(m3/s)",0,0,"348701.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Electric Power per Unit Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/((m3/s)-Pa)",0,0,"1.282051282",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Shaft Power per Unit Flow Rate per Unit Head",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,19 ) },
            {"HeaderedPumps:ConstantSpeed", () => new IdfObject("HeaderedPumps:ConstantSpeed",false,IdfObjectFormat.NotSpecified,false,9,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Total Design Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Pumps in Bank",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Sequential",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Sequential"},"Flow Sequencing Control Scheme",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"179352",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Pump Head",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Power Consumption",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Motor Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Motor Inefficiencies to Fluid Stream",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Continuous",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Continuous","Intermittent"},"Pump Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pump Flow Rate Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Skin Loss Radiative Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"PowerPerFlowPerPressure",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"PowerPerFlow","PowerPerFlowPerPressure"},"Design Power Sizing Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/(m3/s)",0,0,"348701.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Electric Power per Unit Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/((m3/s)-Pa)",0,0,"1.282051282",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Shaft Power per Unit Flow Rate per Unit Head",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,18 ) },
            {"HeaderedPumps:VariableSpeed", () => new IdfObject("HeaderedPumps:VariableSpeed",false,IdfObjectFormat.NotSpecified,false,14,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Total Design Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Pumps in Bank",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Sequential",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Sequential"},"Flow Sequencing Control Scheme",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"179352",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Pump Head",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Power Consumption",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Motor Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Motor Inefficiencies to Fluid Stream",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 1 of the Part Load Performance Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 2 of the Part Load Performance Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 3 of the Part Load Performance Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 4 of the Part Load Performance Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Flow Rate Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Continuous",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Continuous","Intermittent"},"Pump Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pump Flow Rate Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Skin Loss Radiative Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"PowerPerFlowPerPressure",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"PowerPerFlow","PowerPerFlowPerPressure"},"Design Power Sizing Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/(m3/s)",0,0,"348701.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Electric Power per Unit Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/((m3/s)-Pa)",0,0,"1.282051282",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Shaft Power per Unit Flow Rate per Unit Head",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,23 ) },
            {"TemperingValve", () => new IdfObject("TemperingValve",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validPlantEquipmentNames","validCondenserEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validCondenserEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stream 2 Source Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Setpoint Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pump Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,6 ) },
            {"LoadProfile:Plant", () => new IdfObject("LoadProfile:Plant",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Peak Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Flow Rate Fraction Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,6 ) },
            {"SolarCollectorPerformance:FlatPlate", () => new IdfObject("SolarCollectorPerformance:FlatPlate",false,IdfObjectFormat.NotSpecified,false,7,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"FlatPlateSolarCollectorParameters"},new List<string>{},new List<string>{}),new IdfField(true,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gross Area",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Water",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Water"},"Test Fluid",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Test Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Inlet","Average","Outlet"},"Test Correlation Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 1 of Efficiency Equation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W/m2-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 2 of Efficiency Equation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2-K2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 3 of Efficiency Equation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 2 of Incident Angle Modifier",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 3 of Incident Angle Modifier",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,10 ) },
            {"SolarCollector:FlatPlate:Water", () => new IdfObject("SolarCollector:FlatPlate:Water",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"SolarCollectorPerformance Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FlatPlateSolarCollectorParameters"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllShadingAndHTSurfNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,6 ) },
            {"SolarCollector:FlatPlate:PhotovoltaicThermal", () => new IdfObject("SolarCollector:FlatPlate:PhotovoltaicThermal",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validOASysEquipmentNames","validBranchEquipmentNames"},new List<string>{"validOASysEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllShadingAndHTSurfNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Photovoltaic-Thermal Model Performance Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FlatPlatePVTParameters"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Photovoltaic Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"PVGeneratorNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Water","Air"},"Thermal Working Fluid Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,10 ) },
            {"SolarCollectorPerformance:PhotovoltaicThermal:Simple", () => new IdfObject("SolarCollectorPerformance:PhotovoltaicThermal:Simple",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"FlatPlatePVTParameters"},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Surface Area with Active Thermal Collector",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fixed","Scheduled"},"Thermal Conversion Efficiency Input Mode Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Value for Thermal Conversion Efficiency if Fixed",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Conversion Efficiency Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,1,"0.84",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Front Surface Emittance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{})},false,6 ) },
            {"SolarCollector:IntegralCollectorStorage", () => new IdfObject("SolarCollector:IntegralCollectorStorage",false,IdfObjectFormat.NotSpecified,false,7,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"IntegralCollectorStorageParameters Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CollectorStoragePerformance"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllShadingAndHTSurfNames"}),new IdfField(false,"",0,0,"AmbientAir",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"OtherSideConditionsModel","AmbientAir"},"Bottom Surface Boundary Conditions Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Boundary Condition Model Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,8 ) },
            {"SolarCollectorPerformance:IntegralCollectorStorage", () => new IdfObject("SolarCollectorPerformance:IntegralCollectorStorage",false,IdfObjectFormat.NotSpecified,false,19,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"CollectorStoragePerformance"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"RectangularTank",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"RectangularTank"},"ICS Collector Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gross Area",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Collector Water Volume",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2-K",0,0,"0.40",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Bottom Heat Loss Conductance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2-K",0,0,"0.60",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Side Heat Loss Conductance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0.5,1,"0.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Aspect Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0.3,"0.20",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Collector Side Height",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/m2-K",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Mass of Absorber Plate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,2,"2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Covers",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0.2,"0.05",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cover Spacing",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",1,2,"1.526",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Refractive Index of Outer Cover",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"0.045",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Extinction Coefficient Times Thickness of Outer Cover",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.88",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Emissivity of Outer Cover",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",1,2,"1.37",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Refractive Index of Inner Cover",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"0.008",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Extinction Coefficient Times Thickness of the inner Cover",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.88",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Emissivity of Inner Cover",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.96",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Absorptance of Absorber Plate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.30",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Emissivity of Absorber Plate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{})},false,19 ) },
            {"SolarCollector:UnglazedTranspired", () => new IdfObject("SolarCollector:UnglazedTranspired",false,IdfObjectFormat.NotSpecified,false,23,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"UTSCNames","validOASysEquipmentNames"},new List<string>{"validOASysEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Boundary Conditions Model Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"OSCMNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Free Heating Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Diameter of Perforations in Collector",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Distance Between Perforations in Collector",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Emissivity of Collector Surface",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Solar Absorbtivity of Collector Surface",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Effective Overall Height of Collector",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Effective Gap Thickness of Plenum Behind Collector",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Effective Cross Section Area of Plenum Behind Collector",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Square",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Triangle","Square"},"Hole Layout Pattern for Pitch",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Kutscher1994",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Kutscher1994","VanDeckerHollandsBrunger2001"},"Heat Exchange Effectiveness Correlation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",1,2,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ratio of Actual Collector Surface Area to Projected Surface Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"VeryRough","Rough","MediumRough","MediumSmooth","Smooth","VerySmooth"},"Roughness of Collector",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0.0005,0.007,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Collector Thickness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1.5,"0.25",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Effectiveness for Perforations with Respect to Wind",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1.5,"0.65",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Discharge Coefficient for Openings with Respect to Buoyancy Driven Flow",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllShadingAndHTSurfNames"})},true,32 ) },
            {"SolarCollector:UnglazedTranspired:Multisystem", () => new IdfObject("SolarCollector:UnglazedTranspired:Multisystem",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Solar Collector Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UTSCNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air System 1 Collector Inlet Node",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air System 1 Collector Outlet Node",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air System 1 Mixed Air Node",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air System 1 Zone Node",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,21 ) },
            {"Boiler:HotWater", () => new IdfObject("Boiler:HotWater",false,IdfObjectFormat.NotSpecified,false,12,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"Boilers","validPlantEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Electricity","NaturalGas","PropaneGas","FuelOil#1","FuelOil#2","Coal","Diesel","Gasoline","OtherFuel1","OtherFuel2"},"Fuel Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Thermal Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"EnteringBoiler","LeavingBoiler"},"Efficiency Curve Temperature Evaluation Variable",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Normalized Boiler Efficiency Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions","BivariateFunctions"}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Part Load Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Part Load Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Optimum Part Load Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Boiler Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Boiler Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"99.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Outlet Upper Temperature Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"NotModulated",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ConstantFlow","LeavingSetpointModulated","NotModulated"},"Boiler Flow Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Parasitic Electric Load",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,17 ) },
            {"Boiler:Steam", () => new IdfObject("Boiler:Steam",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validPlantEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Electricity","NaturalGas","PropaneGas","FuelOil#1","FuelOil#2","Coal","Diesel","Gasoline","OtherFuel1","OtherFuel2"},"Fuel Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"Pa",0,0,"160000",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Operating Pressure",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,1,"0.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Theoretical Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,"100",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Outlet Steam Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Part Load Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Part Load Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Optimum Part Load Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 1 of Fuel Use Function of Part Load Ratio Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 2 of Fuel Use Function of Part Load Ratio Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 3 of Fuel Use Function of Part Load Ratio Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Steam Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,16 ) },
            {"Chiller:Electric:EIR", () => new IdfObject("Chiller:Electric:EIR",false,IdfObjectFormat.NotSpecified,false,23,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"Chillers","validPlantEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W/W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"6.67",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Leaving Chilled Water Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"29.4",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Entering Condenser Fluid Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Chilled Water Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Condenser Fluid Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Electric Input to Cooling Output Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Electric Input to Cooling Output Ratio Function of Part Load Ratio Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,"0.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Part Load Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Part Load Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Optimum Part Load Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Unloading Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chilled Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chilled Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"WaterCooled",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"AirCooled","WaterCooled","EvaporativelyCooled"},"Condenser Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Fan Power Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Compressor Electric Consumption Rejected by Condenser",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"2.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Leaving Chilled Water Lower Temperature Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"NotModulated",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ConstantFlow","LeavingSetpointModulated","NotModulated"},"Chiller Flow Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Heat Recovery Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",2,0,"2.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Setpoint Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Operating Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Heat Recovery Relative Capacity Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Inlet High Temperature Limit Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Leaving Temperature Setpoint Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,34 ) },
            {"Chiller:Electric:ReformulatedEIR", () => new IdfObject("Chiller:Electric:ReformulatedEIR",false,IdfObjectFormat.NotSpecified,false,22,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"Chillers","validPlantEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W/W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"6.67",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Leaving Chilled Water Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"35.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Leaving Condenser Water Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Chilled Water Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Condenser Water Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Electric Input to Cooling Output Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,"LeavingCondenserWaterTemperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"LeavingCondenserWaterTemperature","Lift"},"Electric Input to Cooling Output Ratio Function of Part Load Ratio Curve Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Electric Input to Cooling Output Ratio Function of Part Load Ratio Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions","TrivariateFunctions"}),new IdfField(false,"",0,0,"0.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Part Load Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Part Load Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Optimum Part Load Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Unloading Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chilled Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chilled Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Compressor Electric Consumption Rejected by Condenser",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"2.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Leaving Chilled Water Lower Temperature Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"NotModulated",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ConstantFlow","LeavingSetpointModulated","NotModulated"},"Chiller Flow Mode Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Heat Recovery Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Heat Recovery Relative Capacity Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Inlet High Temperature Limit Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Leaving Temperature Setpoint Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,30 ) },
            {"Chiller:Electric", () => new IdfObject("Chiller:Electric",false,IdfObjectFormat.NotSpecified,false,27,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"Chillers","validPlantEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,"AirCooled",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"AirCooled","WaterCooled","EvaporativelyCooled"},"Condenser Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W/W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chilled Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chilled Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Part Load Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Part Load Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Optimum Part Load Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Condenser Inlet Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Rise Coefficient",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Chilled Water Outlet Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Chilled Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Condenser Fluid Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 1 of Capacity Ratio Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 2 of Capacity Ratio Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 3 of Capacity Ratio Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 1 of Power Ratio Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 2 of Power Ratio Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 3 of Power Ratio Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 1 of Full Load Ratio Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 2 of Full Load Ratio Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 3 of Full Load Ratio Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chilled Water Outlet Temperature Lower Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"NotModulated",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ConstantFlow","LeavingSetpointModulated","NotModulated"},"Chiller Flow Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Heat Recovery Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",2,0,"2.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Setpoint Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Operating Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Heat Recovery Relative Capacity Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Inlet High Temperature Limit Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Leaving Temperature Setpoint Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,38 ) },
            {"Chiller:Absorption:Indirect", () => new IdfObject("Chiller:Absorption:Indirect",false,IdfObjectFormat.NotSpecified,false,17,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"Chillers","validPlantEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Pumping Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chilled Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chilled Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Part Load Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Part Load Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Optimum Part Load Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"30.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Condenser Inlet Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"15.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Inlet Temperature Lower Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"5.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chilled Water Outlet Temperature Lower Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Chilled Water Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Condenser Water Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"NotModulated",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ConstantFlow","LeavingSetpointModulated","NotModulated"},"Chiller Flow Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Generator Heat Input Function of Part Load Ratio Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pump Electric Input Function of Part Load Ratio Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Generator Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Generator Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Capacity Correction Function of Condenser Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Capacity Correction Function of Chilled Water Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Capacity Correction Function of Generator Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Generator Heat Input Correction Function of Condenser Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Generator Heat Input Correction Function of Chilled Water Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,"Steam",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HotWater","Steam"},"Generator Heat Source Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Generator Fluid Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Lower Limit Generator Inlet",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,20,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Degree of Subcooling in Steam Generator",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Degree of Subcooling in Steam Condensate Loop",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,31 ) },
            {"Chiller:Absorption", () => new IdfObject("Chiller:Absorption",false,IdfObjectFormat.NotSpecified,false,23,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"Chillers","validPlantEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Pumping Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chilled Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chilled Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Part Load Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Part Load Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Optimum Part Load Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Condenser Inlet Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Chilled Water Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Condenser Water Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 1 of the Hot Water or Steam Use Part Load Ratio Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 2 of the Hot Water or Steam Use Part Load Ratio Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 3 of the Hot Water or Steam Use Part Load Ratio Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 1 of the Pump Electric Use Part Load Ratio Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 2 of the Pump Electric Use Part Load Ratio Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 3 of the Pump Electric Use Part Load Ratio Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chilled Water Outlet Temperature Lower Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Generator Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Generator Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"NotModulated",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ConstantFlow","LeavingSetpointModulated","NotModulated"},"Chiller Flow Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Steam",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Steam","HotWater"},"Generator Heat Source Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Generator Fluid Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Degree of Subcooling in Steam Generator",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,27 ) },
            {"Chiller:ConstantCOP", () => new IdfObject("Chiller:ConstantCOP",false,IdfObjectFormat.NotSpecified,false,12,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"Chillers","validPlantEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W/W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Chilled Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Condenser Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chilled Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chilled Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"AirCooled",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"AirCooled","WaterCooled","EvaporativelyCooled"},"Condenser Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"NotModulated",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ConstantFlow","LeavingSetpointModulated","NotModulated"},"Chiller Flow Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",2,0,"2.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Setpoint Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Operating Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,15 ) },
            {"Chiller:EngineDriven", () => new IdfObject("Chiller:EngineDriven",false,IdfObjectFormat.NotSpecified,false,43,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"Chillers","validPlantEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,"AirCooled",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"AirCooled","WaterCooled","EvaporativelyCooled"},"Condenser Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W/W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chilled Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chilled Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Part Load Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Part Load Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Optimum Part Load Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Condenser Inlet Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Rise Coefficient",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Chilled Water Outlet Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Chilled Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Condenser Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 1 of Capacity Ratio Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 2 of Capacity Ratio Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 3 of Capacity Ratio Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 1 of Power Ratio Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 2 of Power Ratio Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 3 of Power Ratio Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 1 of Full Load Ratio Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 2 of Full Load Ratio Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 3 of Full Load Ratio Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chilled Water Outlet Temperature Lower Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fuel Use Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Jacket Heat Recovery Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Lube Heat Recovery Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Total Exhaust Energy Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Exhaust Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 1 of U-Factor Times Area Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,2,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 2 of U-Factor Times Area Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"(kg/s)/W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Exhaust Flow per Unit of Power Output",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Minimum Exhaust Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"NaturalGas","PropaneGas","Diesel","Gasoline","FuelOil#1","FuelOil#2","OtherFuel1","OtherFuel2"},"Fuel Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kJ/kg",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fuel Higher Heating Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Heat Recovery Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"NotModulated",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ConstantFlow","LeavingSetpointModulated","NotModulated"},"Chiller Flow Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,100,"60.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Temperature for Heat Recovery at Heat Recovery Outlet Node",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",2,0,"2.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Setpoint Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Operating Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Heat Recovery Relative Capacity Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,47 ) },
            {"Chiller:CombustionTurbine", () => new IdfObject("Chiller:CombustionTurbine",false,IdfObjectFormat.NotSpecified,false,56,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"Chillers","validPlantEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,"AirCooled",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"AirCooled","WaterCooled","EvaporativelyCooled"},"Condenser Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W/W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chilled Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chilled Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Part Load Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Part Load Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Optimum Part Load Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Condenser Inlet Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Rise Coefficient",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Chilled Water Outlet Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Chilled Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Condenser Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 1 of Capacity Ratio Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 2 of Capacity Ratio Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 3 of Capacity Ratio Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 1 of Power Ratio Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 2 of Power Ratio Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 3 of Power Ratio Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 1 of Full Load Ratio Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 2 of Full Load Ratio Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 3 of Full Load Ratio Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chilled Water Outlet Temperature Lower Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 1 of Fuel Input Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 2 of Fuel Input Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 3 of Fuel Input Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 1 of Temperature Based Fuel Input Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 2 of Temperature Based Fuel Input Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 3 of Temperature Based Fuel Input Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 1 of Exhaust Flow Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 2 of Exhaust Flow Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 3 of Exhaust Flow Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 1 of Exhaust Gas Temperature Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 2 of Exhaust Gas Temperature Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 3 of Exhaust Gas Temperature Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 1 of Temperature Based Exhaust Gas Temperature Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 2 of Temperature Based Exhaust Gas Temperature Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 3 of Temperature Based Exhaust Gas Temperature Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 1 of Recovery Lube Heat Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 2 of Recovery Lube Heat Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 3 of Recovery Lube Heat Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 1 of U-Factor Times Area Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,2,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 2 of U-Factor Times Area Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gas Turbine Engine Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"(kg/s)/W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Exhaust Flow per Unit of Power Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Steam Saturation Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kJ/kg",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fuel Higher Heating Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Heat Recovery Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"NotModulated",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ConstantFlow","LeavingSetpointModulated","NotModulated"},"Chiller Flow Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"NaturalGas",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"NaturalGas","PropaneGas","Diesel","Gasoline","FuelOil#1","FuelOil#2","OtherFuel1","OtherFuel2"},"Fuel Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,100,"80.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Maximum Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",2,0,"2.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Setpoint Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Operating Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Heat Recovery Relative Capacity Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.35",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Turbine Engine Efficiency",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,62 ) },
            {"ChillerHeater:Absorption:DirectFired", () => new IdfObject("ChillerHeater:Absorption:DirectFired",false,IdfObjectFormat.NotSpecified,false,34,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validPlantEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Cooling Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating to Cooling Capacity Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.97",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fuel Input to Cooling Output Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.25",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fuel Input to Heating Output Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.01",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Electric Input to Cooling Output Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Electric Input to Heating Output Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chilled Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chilled Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hot Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hot Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Part Load Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0.5,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Part Load Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Optimum Part Load Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"29",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Entering Condenser Water Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Leaving Chilled Water Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Chilled Water Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Condenser Water Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Hot Water Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fuel Input to Cooling Output Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fuel Input to Cooling Output Ratio Function of Part Load Ratio Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Electric Input to Cooling Output Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Electric Input to Cooling Output Ratio Function of Part Load Ratio Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Capacity Function of Cooling Capacity Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fuel Input to Heat Output Ratio During Heating Only Operation Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,"EnteringCondenser",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"LeavingCondenser","EnteringCondenser"},"Temperature Curve Input Variable",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"WaterCooled",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"AirCooled","WaterCooled"},"Condenser Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"2.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chilled Water Temperature Lower Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kJ/kg",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fuel Higher Heating Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"NaturalGas",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"NaturalGas","PropaneGas","Diesel","Gasoline","FuelOil#1","FuelOil#2","OtherFuel1","OtherFuel2"},"Fuel Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,34 ) },
            {"ChillerHeater:Absorption:DoubleEffect", () => new IdfObject("ChillerHeater:Absorption:DoubleEffect",false,IdfObjectFormat.NotSpecified,false,34,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validPlantEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Cooling Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating to Cooling Capacity Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.97",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Energy Input to Cooling Output Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.25",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Energy Input to Heating Output Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.01",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Electric Input to Cooling Output Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Electric Input to Heating Output Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chilled Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chilled Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hot Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hot Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Part Load Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0.5,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Part Load Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Optimum Part Load Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"29",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Entering Condenser Water Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"7",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Leaving Chilled Water Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Chilled Water Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Condenser Water Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Hot Water Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fuel Input to Cooling Output Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fuel Input to Cooling Output Ratio Function of Part Load Ratio Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Electric Input to Cooling Output Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Electric Input to Cooling Output Ratio Function of Part Load Ratio Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Capacity Function of Cooling Capacity Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fuel Input to Heat Output Ratio During Heating Only Operation Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,"EnteringCondenser",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"LeavingCondenser","EnteringCondenser"},"Temperature Curve Input Variable",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"WaterCooled",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"AirCooled","WaterCooled"},"Condenser Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"2.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chilled Water Temperature Lower Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Generator:MicroTurbine"},"Exhaust Source Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Exhaust Source Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MicroTurbineGeneratorNames"}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,34 ) },
            {"HeatPump:WaterToWater:EIR:Cooling", () => new IdfObject("HeatPump:WaterToWater:EIR:Cooling",false,IdfObjectFormat.NotSpecified,false,15,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"WWHPCoolingNames","validPlantEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Side Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Side Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Companion Heat Pump Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Side Reference Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Reference Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W/W",0,0,"7.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Coefficient of Performance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Capacity Modifier Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Electric Input to Output Ratio Modifier Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Electric Input to Output Ratio Modifier Function of Part Load Ratio Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UniVariateFunctions"})},false,14 ) },
            {"HeatPump:WaterToWater:EIR:Heating", () => new IdfObject("HeatPump:WaterToWater:EIR:Heating",false,IdfObjectFormat.NotSpecified,false,15,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"WWHPHeatingNames","validPlantEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Side Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Side Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Companion Heat Pump Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WWHPCoolingNames"}),new IdfField(true,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Side Reference Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Reference Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W/W",0,0,"7.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Coefficient of Performance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Capacity Modifier Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Electric Input to Output Ratio Modifier Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BiVariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Electric Input to Output Ratio Modifier Function of Part Load Ratio Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"})},false,14 ) },
            {"HeatPump:WaterToWater:EquationFit:Heating", () => new IdfObject("HeatPump:WaterToWater:EquationFit:Heating",false,IdfObjectFormat.NotSpecified,false,19,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"WWHPHeatingNames","validPlantEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Side Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Side Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Load Side Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Source Side Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Heating Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Heating Power Consumption",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Capacity Coefficient 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Capacity Coefficient 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Capacity Coefficient 3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Capacity Coefficient 4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Capacity Coefficient 5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Compressor Power Coefficient 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Compressor Power Coefficient 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Compressor Power Coefficient 3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Compressor Power Coefficient 4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Compressor Power Coefficient 5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"7.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Coefficient of Performance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Companion Cooling Heat Pump Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WWHPCoolingNames"})},false,22 ) },
            {"HeatPump:WaterToWater:EquationFit:Cooling", () => new IdfObject("HeatPump:WaterToWater:EquationFit:Cooling",false,IdfObjectFormat.NotSpecified,false,19,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"WWHPCoolingNames","validPlantEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Side Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Side Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Load Side Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Source Side Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Cooling Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Cooling Power Consumption",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Capacity Coefficient 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Capacity Coefficient 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Capacity Coefficient 3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Capacity Coefficient 4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Capacity Coefficient 5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Compressor Power Coefficient 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Compressor Power Coefficient 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Compressor Power Coefficient 3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Compressor Power Coefficient 4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Compressor Power Coefficient 5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"8.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Coefficient of Performance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Companion Heating Heat Pump Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WWHPHeatingNames"})},false,22 ) },
            {"HeatPump:WaterToWater:ParameterEstimation:Cooling", () => new IdfObject("HeatPump:WaterToWater:ParameterEstimation:Cooling",false,IdfObjectFormat.NotSpecified,false,20,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validPlantEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Side Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Side Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Part Load Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Part Load Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Optimum Part Load Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Side Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Side Heat Transfer Coefficient",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Heat Transfer Coefficient",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Piston Displacement",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compressor Clearance Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compressor Suction and Discharge Pressure Drop",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Superheating",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Constant Part of Electromechanical Power Losses",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Loss Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"500000000",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"High Pressure Cut Off",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Pressure Cut Off",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,22 ) },
            {"HeatPump:WaterToWater:ParameterEstimation:Heating", () => new IdfObject("HeatPump:WaterToWater:ParameterEstimation:Heating",false,IdfObjectFormat.NotSpecified,false,20,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validPlantEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Side Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Side Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Part Load Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Part Load Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Optimum Part Load Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Side Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Side Heat Transfer Coefficient",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Heat Transfer Coefficient",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Piston Displacement",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compressor Clearance Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compressor Suction and Discharge Pressure Drop",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Superheating",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Constant Part of Electromechanical Power Losses",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Loss Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"500000000",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"High Pressure Cut Off",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Pressure Cut Off",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,22 ) },
            {"DistrictCooling", () => new IdfObject("DistrictCooling",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validPlantEquipmentNames","validCondenserEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validCondenserEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chilled Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chilled Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Capacity Fraction Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,5 ) },
            {"DistrictHeating", () => new IdfObject("DistrictHeating",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validPlantEquipmentNames","validCondenserEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validBranchEquipmentTypes","validCondenserEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hot Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hot Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Capacity Fraction Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,5 ) },
            {"PlantComponent:TemperatureSource", () => new IdfObject("PlantComponent:TemperatureSource",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validPlantEquipmentNames","validCondenserEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validCondenserEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet Node",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outlet Node",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Volume Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Constant","Scheduled"},"Temperature Specification Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,7 ) },
            {"CentralHeatPumpSystem", () => new IdfObject("CentralHeatPumpSystem",false,IdfObjectFormat.NotSpecified,false,14,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validPlantEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,"SmartMixing",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SmartMixing"},"Control Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Loop Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Loop Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Loop Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Loop Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Loop Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Loop Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ancillary Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ancillary Operation Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ChillerHeaterPerformance:Electric:EIR"},"Chiller Heater Modules Performance Component Object Type 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Modules Performance Component Name 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ChillerHeaterEIRNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Modules Control Schedule Name 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",1,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Chiller Heater Modules 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ChillerHeaterPerformance:Electric:EIR"},"Chiller Heater Modules Performance Component Object Type 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Modules Performance Component Name 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ChillerHeaterEIRNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Modules Control Schedule Name 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",1,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Chiller Heater Modules 2",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ChillerHeaterPerformance:Electric:EIR"},"Chiller Heater Performance Component Object Type 3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Performance Component Name 3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ChillerHeaterEIRNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Modules Control Schedule Name 3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",1,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Chiller Heater Modules 3",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ChillerHeaterPerformance:Electric:EIR"},"Chiller Heater Modules Performance Component Object Type 4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Modules Performance Component Name 4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ChillerHeaterEIRNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Modules Control Schedule Name 4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",1,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Chiller Heater Modules 4",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ChillerHeaterPerformance:Electric:EIR"},"Chiller Heater Modules Performance Component Object Type 5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Models Performance Component Name 5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ChillerHeaterEIRNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Modules Control Schedule Name 5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",1,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Chiller Heater Modules 5",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ChillerHeaterPerformance:Electric:EIR"},"Chiller Heater Modules Performance Component Object Type 6",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Modules Performance Component Name 6",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ChillerHeaterEIRNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Modules Control Schedule Name 6",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",1,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Chiller Heater Modules 6",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ChillerHeaterPerformance:Electric:EIR"},"Chiller Heater Modules Performance Component Object Type 7",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Modules Performance Component Name 7",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ChillerHeaterEIRNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Modules Control Schedule Name 7",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",1,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Chiller Heater Modules 7",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ChillerHeaterPerformance:Electric:EIR"},"Chiller Heater Modules Performance Component Object Type 8",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Modules Performance Component Name 8",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ChillerHeaterEIRNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Modules Control Schedule Name 8",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",1,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Chiller Heater Modules 8",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ChillerHeaterPerformance:Electric:EIR"},"Chiller Heater Modules Performance Component Object Type 9",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Modules Performance Component Name 9",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ChillerHeaterEIRNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Modules Control Schedule Name 9",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",1,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Chiller Heater Modules 9",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ChillerHeaterPerformance:Electric:EIR"},"Chiller Heater Modules Performance Component Object Type 10",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Modules Performance Component Name 10",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ChillerHeaterEIRNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Modules Control Schedule Name 10",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",1,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Chiller Heater Modules 10",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ChillerHeaterPerformance:Electric:EIR"},"Chiller Heater Modules Performance Component Object Type 11",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Modules Performance Component Name 11",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ChillerHeaterEIRNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Module Control Schedule Name 11",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",1,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Chiller Heater Modules 11",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ChillerHeaterPerformance:Electric:EIR"},"Chiller Heater Modules Performance Component Object Type 12",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Modules Performance Component Name 12",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ChillerHeaterEIRNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Modules Control Schedule Name 12",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",1,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Chiller Heater Modules 12",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ChillerHeaterPerformance:Electric:EIR"},"Chiller Heater Modules Performance Component Object Type 13",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Modules Performance Component Name 13",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ChillerHeaterEIRNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Modules Control Schedule Name 13",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",1,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Chiller Heater Modules 13",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ChillerHeaterPerformance:Electric:EIR"},"Chiller Heater Modules Performance Component Object Type 14",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Modules Performance Component Name 14",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ChillerHeaterEIRNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Modules Control Schedule Name 14",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",1,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Chiller Heater Modules 14",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ChillerHeaterPerformance:Electric:EIR"},"Chiller Heater Modules Performance Component Object Type 15",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Modules Performance Component Name 15",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ChillerHeaterEIRNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Modules Control Schedule Name 15",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",1,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Chiller Heater Modules 15",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ChillerHeaterPerformance:Electric:EIR"},"Chiller Heater Modules Performance Component Object Type 16",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Modules Performance Component Name 16",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ChillerHeaterEIRNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Modules Control Schedule Name 16",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",1,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Chiller Heater Modules 16",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ChillerHeaterPerformance:Electric:EIR"},"Chiller Heater Modules Performance Component Object Type 17",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Modules Performance Component Name 17",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ChillerHeaterEIRNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Modules Control Schedule Name 17",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",1,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Chiller Heater Modules 17",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ChillerHeaterPerformance:Electric:EIR"},"Chiller Heater Modules Performance Component Object Type 18",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Modules Performance Component Name 18",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ChillerHeaterEIRNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Modules Control Control Schedule Name 18",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",1,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Chiller Heater Modules 18",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ChillerHeaterPerformance:Electric:EIR"},"Chiller Heater Modules Performance Component Object Type 19",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Modules Performance Component Name 19",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ChillerHeaterEIRNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Modules Control Schedule Name 19",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",1,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Chiller Heater Modules 19",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ChillerHeaterPerformance:Electric:EIR"},"Chiller Heater Modules Performance Component Object Type 20",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Modules Performance Component Name 20",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ChillerHeaterEIRNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Heater Modules Control Schedule Name 20",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",1,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Chiller Heater Modules 20",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,90 ) },
            {"ChillerHeaterPerformance:Electric:EIR", () => new IdfObject("ChillerHeaterPerformance:Electric:EIR",false,IdfObjectFormat.NotSpecified,false,29,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ChillerHeaterEIRNames"},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Cooling Mode Evaporator Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W/W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Cooling Mode COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"6.67",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Cooling Mode Leaving Chilled Water Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"29.44",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Cooling Mode Entering Condenser Fluid Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"35.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Cooling Mode Leaving Condenser Water Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.75",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Heating Mode Cooling Capacity Ratio",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.38",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Heating Mode Cooling Power Input Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"6.67",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Heating Mode Leaving Chilled Water Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"49",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Heating Mode Leaving Condenser Water Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"29.44",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Heating Mode Entering Condenser Fluid Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"12.22",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Mode Entering Chilled Water Temperature Low Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ConstantFlow",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ConstantFlow","VariableFlow"},"Chilled Water Flow Mode Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Chilled Water Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Condenser Water Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Hot Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compressor Motor Efficiency",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"WaterCooled",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"AirCooled","WaterCooled"},"Condenser Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"EnteringCondenser",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"EnteringCondenser","LeavingCondenser"},"Cooling Mode Temperature Curve Condenser Water Independent Variable",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Mode Cooling Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Mode Electric Input to Cooling Output Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Mode Electric Input to Cooling Output Ratio Function of Part Load Ratio Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions","BivariateFunctions"}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Mode Cooling Capacity Optimum Part Load Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"LeavingCondenser",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"EnteringCondenser","LeavingCondenser"},"Heating Mode Temperature Curve Condenser Water Independent Variable",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Mode Cooling Capacity Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Mode Electric Input to Cooling Output Ratio Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Mode Electric Input to Cooling Output Ratio Function of Part Load Ratio Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions","BivariateFunctions"}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Mode Cooling Capacity Optimum Part Load Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,29 ) },
            {"CoolingTower:SingleSpeed", () => new IdfObject("CoolingTower:SingleSpeed",false,IdfObjectFormat.NotSpecified,false,16,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"CoolingTowers","CoolingTowersWithUA","validPlantEquipmentNames","validCondenserEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validCondenserEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Water Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Fan Power",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,2100000,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design U-Factor Times Area Value",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Free Convection Regime Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Free Convection Regime Air Flow Rate Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,300000,"0.0",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Free Convection Regime U-Factor Times Area Value",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Free Convection U-Factor Times Area Value Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"UFactorTimesAreaAndDesignWaterFlowRate",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"UFactorTimesAreaAndDesignWaterFlowRate","NominalCapacity"},"Performance Input Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.25",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Rejection Capacity and Nominal Capacity Sizing Ratio",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Free Convection Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Free Convection Nominal Capacity Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",20,0,"35.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Inlet Air Dry-Bulb Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",20,0,"25.6",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Inlet Air Wet-Bulb Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Approach Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Range Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",2,0,"2.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Setpoint Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Operating Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"LossFactor","SaturatedExit"},"Evaporation Loss Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent/K",0,0,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporation Loss Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent",0,0,"0.008",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Drift Loss Percent",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ConcentrationRatio","ScheduledRate"},"Blowdown Calculation Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",2,0,"3.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Blowdown Concentration Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Blowdown Makeup Water Usage Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Water Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"FanCycling",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"FanCycling","FluidBypass"},"Capacity Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Cells",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"MinimalCell",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"MinimalCell","MaximalCell"},"Cell Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.33",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cell Minimum  Water Flow Rate Fraction",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,0,"2.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cell Maximum Water Flow Rate Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,38 ) },
            {"CoolingTower:TwoSpeed", () => new IdfObject("CoolingTower:TwoSpeed",false,IdfObjectFormat.NotSpecified,false,24,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"CoolingTowers","CoolingTowersWithUA","validPlantEquipmentNames","validCondenserEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validCondenserEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Water Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"High Fan Speed Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"High Fan Speed Fan Power",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,2100000,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"High Fan Speed U-Factor Times Area Value",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Fan Speed Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Fan Speed Air Flow Rate Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Fan Speed Fan Power",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.16",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Fan Speed Fan Power Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,300000,null,true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Fan Speed U-Factor Times Area Value",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.6",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Fan Speed U-Factor Times Area Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Free Convection Regime Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Free Convection Regime Air Flow Rate Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,300000,"0.0",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Free Convection Regime U-Factor Times Area Value",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Free Convection U-Factor Times Area Value Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"UFactorTimesAreaAndDesignWaterFlowRate",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"UFactorTimesAreaAndDesignWaterFlowRate","NominalCapacity"},"Performance Input Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.25",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Rejection Capacity and Nominal Capacity Sizing Ratio",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"High Speed Nominal Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Speed Nominal Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Speed Nominal Capacity Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Free Convection Nominal Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Free Convection Nominal Capacity Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",20,0,"35.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Inlet Air Dry-Bulb Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",20,0,"25.6",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Inlet Air Wet-Bulb Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Approach Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Range Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",2,0,"2.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Setpoint Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Operating Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"LossFactor","SaturatedExit"},"Evaporation Loss Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent/K",0,0,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporation Loss Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent",0,0,"0.008",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Drift Loss Percent",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ConcentrationRatio","ScheduledRate"},"Blowdown Calculation Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",2,0,"3.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Blowdown Concentration Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Blowdown Makeup Water Usage Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Water Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Cells",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"MinimalCell",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"MinimalCell","MaximalCell"},"Cell Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.33",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cell Minimum  Water Flow Rate Fraction",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,0,"2.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cell Maximum Water Flow Rate Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,45 ) },
            {"CoolingTower:VariableSpeed:Merkel", () => new IdfObject("CoolingTower:VariableSpeed:Merkel",false,IdfObjectFormat.NotSpecified,false,24,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"CoolingTowers","CoolingTowersWithUA","validPlantEquipmentNames","validCondenserEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validCondenserEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"NominalCapacity",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"UFactorTimesAreaAndDesignWaterFlowRate","NominalCapacity"},"Performance Input Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.25",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Rejection Capacity and Nominal Capacity Sizing Ratio",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Free Convection Nominal Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Free Convection Nominal Capacity Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Water Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-W",0,0,"5.382E-8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Water Flow Rate per Unit of Nominal Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s-W",0,0,"2.76316E-5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Air Flow Rate Per Unit of Nominal Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0.1,0.5,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Air Flow Rate Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Fan Power",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"0.0105",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Fan Power Per Unit of Nominal Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Power Modifier Function of Air Flow Rate Ratio Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"m3/s",0,0,"0.0",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Free Convection Regime Air Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Free Convection Regime Air Flow Rate Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Air Flow Rate U-Factor Times Area Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,300000,"0.0",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Free Convection Regime U-Factor Times Area Value",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Free Convection U-Factor Times Area Value Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"U-Factor Times Area Modifier Function of Air Flow Ratio Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"U-Factor Times Area Modifier Function of Wetbulb Temperature Difference Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"U-Factor Times Area Modifier Function of Water Flow Ratio Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"C",20,0,"35.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Inlet Air Dry-Bulb Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",20,0,"25.6",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Inlet Air Wet-Bulb Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Approach Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Range Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",2,0,"2.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Setpoint Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Operating Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"LossFactor","SaturatedExit"},"Evaporation Loss Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent/K",0,0,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporation Loss Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent",0,0,"0.008",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Drift Loss Percent",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ConcentrationRatio","ScheduledRate"},"Blowdown Calculation Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",2,0,"3.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Blowdown Concentration Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Blowdown Makeup Water Usage Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Water Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Cells",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"MinimalCell",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"MinimalCell","MaximalCell"},"Cell Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.33",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cell Minimum  Water Flow Rate Fraction",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,0,"2.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cell Maximum Water Flow Rate Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,45 ) },
            {"CoolingTower:VariableSpeed", () => new IdfObject("CoolingTower:VariableSpeed",false,IdfObjectFormat.NotSpecified,false,15,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"CoolingTowers","validPlantEquipmentNames","validCondenserEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validCondenserEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"YorkCalc",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"CoolToolsCrossFlow","CoolToolsUserDefined","YorkCalc","YorkCalcUserDefined"},"Model Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Model Coefficient Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"VariableSpeedTowerCoefficient"}),new IdfField(false,"C",20,0,"25.6",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Inlet Air Wet-Bulb Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"3.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Approach Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"5.6",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Range Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Water Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Fan Power",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Power Ratio Function of Air Flow Rate Ratio Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0.2,0.5,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Air Flow Rate Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0.2,"0.125",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Tower Capacity in Free Convection Regime",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",2,0,"2.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Setpoint Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Operating Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"LossFactor","SaturatedExit"},"Evaporation Loss Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent/K",0,0,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporation Loss Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Drift Loss Percent",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ConcentrationRatio","ScheduledRate"},"Blowdown Calculation Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",2,0,"3.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Blowdown Concentration Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Blowdown Makeup Water Usage Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Water Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Cells",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"MinimalCell",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"MinimalCell","MaximalCell"},"Cell Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.33",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cell Minimum  Water Flow Rate Fraction",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,0,"2.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cell Maximum Water Flow Rate Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,31 ) },
            {"CoolingTowerPerformance:CoolTools", () => new IdfObject("CoolingTowerPerformance:CoolTools",false,IdfObjectFormat.NotSpecified,false,44,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"VariableSpeedTowerCoefficient"},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Inlet Air Wet-Bulb Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Inlet Air Wet-Bulb Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Range Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Range Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Approach Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Approach Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Water Flow Rate Ratio",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Water Flow Rate Ratio",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 6",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 7",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 8",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 9",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 10",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 11",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 12",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 13",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 14",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 15",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 16",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 17",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 18",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 19",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 20",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 21",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 22",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 23",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 24",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 25",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 26",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 27",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 28",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 29",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 30",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 31",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 32",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 33",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 34",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 35",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,44 ) },
            {"CoolingTowerPerformance:YorkCalc", () => new IdfObject("CoolingTowerPerformance:YorkCalc",false,IdfObjectFormat.NotSpecified,false,37,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"VariableSpeedTowerCoefficient"},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Inlet Air Wet-Bulb Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Inlet Air Wet-Bulb Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Range Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Range Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Approach Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Approach Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Water Flow Rate Ratio",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Water Flow Rate Ratio",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Liquid to Gas Ratio",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 6",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 7",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 8",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 9",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 10",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 11",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 12",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 13",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 14",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 15",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 16",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 17",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 18",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 19",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 20",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 21",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 22",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 23",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 24",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 25",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 26",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 27",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,37 ) },
            {"EvaporativeFluidCooler:SingleSpeed", () => new IdfObject("EvaporativeFluidCooler:SingleSpeed",false,IdfObjectFormat.NotSpecified,false,10,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validPlantEquipmentNames","validCondenserEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validCondenserEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Air Flow Rate Fan Power",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Spray Water Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"UFactorTimesAreaAndDesignWaterFlowRate","StandardDesignCapacity","UserSpecifiedDesignCapacity"},"Performance Input Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.25",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Rejection Capacity and Nominal Capacity Sizing Ratio",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Standard Design Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,2100000,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Air Flow Rate U-factor Times Area Value",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Water Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"User Specified Design Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Entering Water Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Entering Air Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Entering Air Wet-bulb Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"FanCycling",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"FanCycling","FluidBypass"},"Capacity Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SaturatedExit",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"LossFactor","SaturatedExit"},"Evaporation Loss Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent/K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporation Loss Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent",0,0,"0.008",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Drift Loss Percent",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ConcentrationRatio",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ConcentrationRatio","ScheduledRate"},"Blowdown Calculation Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",2,0,"3.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Blowdown Concentration Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Blowdown Makeup Water Usage Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Water Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"})},false,25 ) },
            {"EvaporativeFluidCooler:TwoSpeed", () => new IdfObject("EvaporativeFluidCooler:TwoSpeed",false,IdfObjectFormat.NotSpecified,false,23,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validPlantEquipmentNames","validCondenserEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validCondenserEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"High Fan Speed Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"High Fan Speed Fan Power",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Fan Speed Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Fan Speed Air Flow Rate Sizing Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Fan Speed Fan Power",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.16",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Fan Speed Fan Power Sizing Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Spray Water Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"UFactorTimesAreaAndDesignWaterFlowRate","StandardDesignCapacity","UserSpecifiedDesignCapacity"},"Performance Input Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.25",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Rejection Capacity and Nominal Capacity Sizing Ratio",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"High Speed Standard Design Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Speed Standard Design Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Speed Standard Capacity Sizing Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,2100000,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"High Fan Speed U-factor Times Area Value",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,300000,null,true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Fan Speed U-factor Times Area Value",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.6",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Fan Speed U-Factor Times Area Sizing Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Water Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"High Speed User Specified Design Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Speed User Specified Design Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Speed User Specified Design Capacity Sizing Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Entering Water Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Entering Air Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Entering Air Wet-bulb Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"High Speed Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"SaturatedExit",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"LossFactor","SaturatedExit"},"Evaporation Loss Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent/K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporation Loss Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent",0,0,"0.008",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Drift Loss Percent",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ConcentrationRatio",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ConcentrationRatio","ScheduledRate"},"Blowdown Calculation Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",2,0,"3.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Blowdown Concentration Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Blowdown Makeup Water Usage Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Water Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"})},false,34 ) },
            {"FluidCooler:SingleSpeed", () => new IdfObject("FluidCooler:SingleSpeed",false,IdfObjectFormat.NotSpecified,false,12,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validPlantEquipmentNames","validCondenserEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validCondenserEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"NominalCapacity",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"UFactorTimesAreaAndDesignWaterFlowRate","NominalCapacity"},"Performance Input Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,2100000,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Air Flow Rate U-factor Times Area Value",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Entering Water Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Entering Air Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Entering Air Wetbulb Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Water Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Air Flow Rate Fan Power",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,13 ) },
            {"FluidCooler:TwoSpeed", () => new IdfObject("FluidCooler:TwoSpeed",false,IdfObjectFormat.NotSpecified,false,20,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validPlantEquipmentNames","validCondenserEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validCondenserEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"NominalCapacity",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"UFactorTimesAreaAndDesignWaterFlowRate","NominalCapacity"},"Performance Input Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,2100000,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"High Fan Speed U-factor Times Area Value",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,300000,null,true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Fan Speed U-factor Times Area Value",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.6",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Fan Speed U-Factor Times Area Sizing Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"High Speed Nominal Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Speed Nominal Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Speed Nominal Capacity Sizing Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Entering Water Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Entering Air Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Entering Air Wet-bulb Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Water Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"High Fan Speed Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"High Fan Speed Fan Power",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Fan Speed Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Fan Speed Air Flow Rate Sizing Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Fan Speed Fan Power",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.16",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Fan Speed Fan Power Sizing Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,21 ) },
            {"GroundHeatExchanger:System", () => new IdfObject("GroundHeatExchanger:System",false,IdfObjectFormat.NotSpecified,false,9,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validPlantEquipmentNames","validCondenserEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validCondenserEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Site:GroundTemperature:Undisturbed:FiniteDifference","Site:GroundTemperature:Undisturbed:KusudaAchenbach","Site:GroundTemperature:Undisturbed:Xing"},"Undisturbed Ground Temperature Model Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Undisturbed Ground Temperature Model Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UndisturbedGroundTempModels"}),new IdfField(true,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ground Thermal Conductivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"J/m3-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ground Thermal Heat Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"GHE:Vertical:ResponseFactors Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"GroundHeatExchangerVerticalResponseFactorNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"GHE:Vertical:Array Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"GroundHeatExchangerVerticalArrayNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"GHE:Vertical:Single Object Name 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"GroundHeatExchangerVerticalSingleNames"})},true,110 ) },
            {"GroundHeatExchanger:Vertical:Properties", () => new IdfObject("GroundHeatExchanger:Vertical:Properties",false,IdfObjectFormat.NotSpecified,false,11,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"GroundHeatExchangerVerticalPropertiesNames"},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Depth of Top of Borehole",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Borehole Length",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Borehole Diameter",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Grout Thermal Conductivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"J/m3-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Grout Thermal Heat Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pipe Thermal Conductivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"J/m3-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pipe Thermal Heat Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pipe Outer Diameter",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pipe Thickness",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"U-Tube Distance",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,11 ) },
            {"GroundHeatExchanger:Vertical:Array", () => new IdfObject("GroundHeatExchanger:Vertical:Array",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"GroundHeatExchangerVerticalArrayNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"GHE:Vertical:Properties Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"GroundHeatExchangerVerticalPropertiesNames"}),new IdfField(true,"",1,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Boreholes in X-Direction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",1,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Boreholes in Y-Direction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Borehole Spacing",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"GroundHeatExchanger:Vertical:Single", () => new IdfObject("GroundHeatExchanger:Vertical:Single",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"GroundHeatExchangerVerticalSingleNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"GHE:Vertical:Properties Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"GroundHeatExchangerVerticalPropertiesNames"}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"X-Location",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Y-Location",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,4 ) },
            {"GroundHeatExchanger:ResponseFactors", () => new IdfObject("GroundHeatExchanger:ResponseFactors",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"GroundHeatExchangerVerticalResponseFactorNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"GHE:Vertical:Properties Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"GroundHeatExchangerVerticalPropertiesNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Boreholes",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"0.0005",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"G-Function Reference Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"g-Function Ln(T/Ts) Value 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"g-Function g Value 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,204 ) },
            {"GroundHeatExchanger:Pond", () => new IdfObject("GroundHeatExchanger:Pond",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validPlantEquipmentNames","validCondenserEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validCondenserEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fluid Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fluid Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pond Depth",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pond Area",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hydronic Tubing Inside Diameter",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hydronic Tubing Outside Diameter",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W/m-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hydronic Tubing Thermal Conductivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W/m2-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ground Thermal Conductivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",1,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Tubing Circuits",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Length of Each Tubing Circuit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,11 ) },
            {"GroundHeatExchanger:Surface", () => new IdfObject("GroundHeatExchanger:Surface",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validPlantEquipmentNames","validCondenserEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validCondenserEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Construction Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ConstructionNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fluid Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fluid Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hydronic Tubing Inside Diameter",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Tubing Circuits",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hydronic Tube Spacing",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface Length",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface Width",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Ground",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Ground","Exposed"},"Lower Surface Environment",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,10 ) },
            {"GroundHeatExchanger:HorizontalTrench", () => new IdfObject("GroundHeatExchanger:HorizontalTrench",false,IdfObjectFormat.NotSpecified,false,20,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validPlantEquipmentNames","validCondenserEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validCondenserEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"50",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Trench Length in Pipe Axial Direction",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Trenches",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Horizontal Spacing Between Pipes",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.016",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pipe Inner Diameter",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.026",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pipe Outer Diameter",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"1.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Burial Depth",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,"1.08",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Thermal Conductivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,"962",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Density",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg-K",0,0,"2576",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Specific Heat",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,"0.3895",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pipe Thermal Conductivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,"641",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pipe Density",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg-K",0,0,"2405",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pipe Specific Heat",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent",0,100,"30",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Moisture Content Percent",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent",0,100,"50",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Moisture Content Percent at Saturation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Site:GroundTemperature:Undisturbed:FiniteDifference","Site:GroundTemperature:Undisturbed:KusudaAchenbach","Site:GroundTemperature:Undisturbed:Xing"},"Undisturbed Ground Temperature Model Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Undisturbed Ground Temperature Model Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UndisturbedGroundTempModels"}),new IdfField(false,"",0,1.5,"0.4",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evapotranspiration Ground Cover Parameter",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,21 ) },
            {"GroundHeatExchanger:Slinky", () => new IdfObject("GroundHeatExchanger:Slinky",false,IdfObjectFormat.NotSpecified,false,21,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validPlantEquipmentNames","validCondenserEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validCondenserEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.002",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,"1.08",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Thermal Conductivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,"962",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Density",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg-K",0,0,"2576",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Soil Specific Heat",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,"0.4",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pipe Thermal Conductivity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m3",0,0,"641",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pipe Density",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg-K",0,0,"2405",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pipe Specific Heat",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.02667",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pipe Outer Diameter",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.002413",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pipe Thickness",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Vertical","Horizontal"},"Heat Exchanger Configuration",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coil Diameter",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.20",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coil Pitch",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"1.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Trench Depth",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"10",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Trench Length",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Trenches",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"2.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Horizontal Spacing Between Pipes",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Site:GroundTemperature:Undisturbed:FiniteDifference","Site:GroundTemperature:Undisturbed:KusudaAchenbach","Site:GroundTemperature:Undisturbed:Xing"},"Undisturbed Ground Temperature Model Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Undisturbed Ground Temperature Model Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UndisturbedGroundTempModels"}),new IdfField(false,"years",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Length of Simulation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,22 ) },
            {"HeatExchanger:FluidToFluid", () => new IdfObject("HeatExchanger:FluidToFluid",false,IdfObjectFormat.NotSpecified,false,14,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validPlantEquipmentNames","validCondenserEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validCondenserEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Loop Demand Side Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Loop Demand Side Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Loop Demand Side Design Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Loop Supply Side Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Loop Supply Side Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Loop Supply Side Design Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Ideal",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"CrossFlowBothUnMixed","CrossFlowBothMixed","CrossFlowSupplyMixedDemandUnMixed","CrossFlowSupplyUnMixedDemandMixed","ParallelFlow","CounterFlow","Ideal"},"Heat Exchange Model Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W/K",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Exchanger U-Factor Times Area Value",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"UncontrolledOn",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"UncontrolledOn","OperationSchemeModulated","OperationSchemeOnOff","HeatingSetpointModulated","HeatingSetpointOnOff","CoolingSetpointModulated","CoolingSetpointOnOff","DualDeadbandSetpointModulated","DualDeadbandSetpointOnOff","CoolingDifferentialOnOff","CoolingSetpointOnOffWithComponentOverride"},"Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Exchanger Setpoint Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,50,"0.01",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Temperature Difference to Activate Heat Exchanger",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"LoopToLoop",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"FreeCooling","HeatRecovery","HeatRejection","HeatRecoveryForCooling","HeatRecoveryForHeating","LoopToLoop"},"Heat Transfer Metering End Use Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component Override Loop Supply Side Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component Override Loop Demand Side Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Loop",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"WetBulbTemperature","DryBulbTemperature","Loop"},"Component Override Cooling Control Temperature Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sizing Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Operation Minimum Temperature Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Operation Maximum Temperature Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,20 ) },
            {"WaterHeater:Mixed", () => new IdfObject("WaterHeater:Mixed",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"WaterHeaterNames","WaterHeaterMixedNames","validPlantEquipmentNames","validCondenserEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validCondenserEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"m3",0,0,"0.0",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tank Volume",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"deltaC",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Deadband Temperature Difference",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Temperature Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Cycle",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Cycle","Modulate"},"Heater Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heater Maximum Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heater Minimum Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heater Ignition Minimum Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"s",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heater Ignition Delay",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Electricity","NaturalGas","PropaneGas","FuelOil#1","FuelOil#2","Coal","Diesel","Gasoline","OtherFuel1","OtherFuel2","Steam","DistrictHeating"},"Heater Fuel Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heater Thermal Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Part Load Factor Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Off Cycle Parasitic Fuel Consumption Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Electricity","NaturalGas","PropaneGas","FuelOil#1","FuelOil#2","Coal","Diesel","Gasoline","OtherFuel1","OtherFuel2","Steam","DistrictHeating"},"Off Cycle Parasitic Fuel Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Off Cycle Parasitic Heat Fraction to Tank",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"On Cycle Parasitic Fuel Consumption Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Electricity","NaturalGas","PropaneGas","FuelOil#1","FuelOil#2","Coal","Diesel","Gasoline","OtherFuel1","OtherFuel2","Steam","DistrictHeating"},"On Cycle Parasitic Fuel Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"On Cycle Parasitic Heat Fraction to Tank",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Schedule","Zone","Outdoors"},"Ambient Temperature Indicator",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ambient Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ambient Temperature Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ambient Temperature Outdoor Air Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Off Cycle Loss Coefficient to Ambient Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Off Cycle Loss Fraction to Zone",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"On Cycle Loss Coefficient to Ambient Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"On Cycle Loss Fraction to Zone",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Peak Use Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Use Flow Rate Fraction Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cold Water Supply Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Use Side Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Use Side Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Use Side Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Effectiveness",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Use Side Design Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Design Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"hr",0,0,"1.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Indirect Water Heating Recovery Time",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"IndirectHeatPrimarySetpoint",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"StorageTank","IndirectHeatPrimarySetpoint","IndirectHeatAlternateSetpoint"},"Source Side Flow Control Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Indirect Alternate Setpoint Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,42 ) },
            {"WaterHeater:Stratified", () => new IdfObject("WaterHeater:Stratified",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"WaterHeaterNames","WaterHeaterStratifiedNames","validPlantEquipmentNames","validCondenserEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validCondenserEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tank Volume",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tank Height",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"VerticalCylinder",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"VerticalCylinder","HorizontalCylinder","Other"},"Tank Shape",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tank Perimeter",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Temperature Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"MasterSlave",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"MasterSlave","Simultaneous"},"Heater Priority Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heater 1 Setpoint Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"deltaC",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heater 1 Deadband Temperature Difference",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heater 1 Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heater 1 Height",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heater 2 Setpoint Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"deltaC",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heater 2 Deadband Temperature Difference",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heater 2 Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heater 2 Height",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Electricity","NaturalGas","PropaneGas","FuelOil#1","FuelOil#2","Coal","Diesel","Gasoline","OtherFuel1","OtherFuel2","Steam","DistrictHeating"},"Heater Fuel Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heater Thermal Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Off Cycle Parasitic Fuel Consumption Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Electricity","NaturalGas","PropaneGas","FuelOil#1","FuelOil#2","Coal","Diesel","Gasoline","OtherFuel1","OtherFuel2","Steam","DistrictHeating"},"Off Cycle Parasitic Fuel Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Off Cycle Parasitic Heat Fraction to Tank",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Off Cycle Parasitic Height",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"On Cycle Parasitic Fuel Consumption Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Electricity","NaturalGas","PropaneGas","FuelOil#1","FuelOil#2","Coal","Diesel","Gasoline","OtherFuel1","OtherFuel2","Steam","DistrictHeating"},"On Cycle Parasitic Fuel Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"On Cycle Parasitic Heat Fraction to Tank",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"On Cycle Parasitic Height",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Schedule","Zone","Outdoors"},"Ambient Temperature Indicator",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ambient Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ambient Temperature Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ambient Temperature Outdoor Air Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Uniform Skin Loss Coefficient per Unit Area to Ambient Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Skin Loss Fraction to Zone",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Off Cycle Flue Loss Coefficient to Ambient Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Off Cycle Flue Loss Fraction to Zone",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Peak Use Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Use Flow Rate Fraction Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cold Water Supply Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Use Side Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Use Side Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Use Side Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Use Side Inlet Height",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"Autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Use Side Outlet Height",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Effectiveness",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"Autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Inlet Height",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Outlet Height",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Fixed",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fixed","Seeking"},"Inlet Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Use Side Design Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Design Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"hr",0,0,"1.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Indirect Water Heating Recovery Time",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,12,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Nodes",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Additional Destratification Conductivity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Node 1 Additional Loss Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Node 2 Additional Loss Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Node 3 Additional Loss Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Node 4 Additional Loss Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Node 5 Additional Loss Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Node 6 Additional Loss Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Node 7 Additional Loss Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Node 8 Additional Loss Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Node 9 Additional Loss Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Node 10 Additional Loss Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Node 11 Additional Loss Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Node 12 Additional Loss Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"IndirectHeatPrimarySetpoint",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"StorageTank","IndirectHeatPrimarySetpoint","IndirectHeatAlternateSetpoint"},"Source Side Flow Control Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Indirect Alternate Setpoint Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,67 ) },
            {"WaterHeater:Sizing", () => new IdfObject("WaterHeater:Sizing",false,IdfObjectFormat.NotSpecified,false,4,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"WaterHeater Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterHeaterNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"PeakDraw","ResidentialHUD-FHAMinimum","PerPerson","PerFloorArea","PerUnit","PerSolarCollectorArea"},"Design Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"hr",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Time Storage Can Meet Peak Draw",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"hr",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Time for Tank Recovery",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Tank Volume for Autosizing Plant Connections",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Bedrooms",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Bathrooms",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/person",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Storage Capacity per Person",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/hr-person",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Recovery Capacity per Person",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Storage Capacity per Floor Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/hr-m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Recovery Capacity per Floor Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Units",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Storage Capacity per Unit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/hr",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Recovery Capacity PerUnit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Storage Capacity per Collector Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Height Aspect Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,16 ) },
            {"WaterHeater:HeatPump:PumpedCondenser", () => new IdfObject("WaterHeater:HeatPump:PumpedCondenser",false,IdfObjectFormat.NotSpecified,false,32,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validPlantEquipmentNames","validBranchEquipmentNames","ZoneEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compressor Setpoint Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"deltaC",0,20,"5.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dead Band Temperature Difference",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Water Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporator Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Schedule","ZoneAirOnly","OutdoorAirOnly","ZoneAndOutdoorAir"},"Inlet Air Configuration",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Exhaust Air Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet Air Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet Air Humidity Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet Air Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,"WaterHeater:Mixed",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"WaterHeater:Mixed","WaterHeater:Stratified"},"Tank Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterHeaterNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tank Use Side Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tank Use Side Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Coil:WaterHeating:AirToWaterHeatPump:Pumped",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:WaterHeating:AirToWaterHeatPump:Pumped","Coil:WaterHeating:AirToWaterHeatPump:VariableSpeed","CoilSystem:IntegratedHeatPump:AirSource"},"DX Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"DX Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatPumpWaterHeaterDXCoilsPumped","HeatPumpWaterHeaterDXCoilsVariableSpeed","IntegratedHeatPumps"}),new IdfField(false,"C",0,0,"10",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Inlet Air Temperature for Compressor Operation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",26,94,"48.88888888889",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Inlet Air Temperature for Compressor Operation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Schedule","Zone","Outdoors"},"Compressor Location",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compressor Ambient Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"Fan:OnOff",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fan:SystemModel","Fan:OnOff"},"Fan Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FansOnOff"}),new IdfField(false,"",0,0,"DrawThrough",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"BlowThrough","DrawThrough"},"Fan Placement",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"On Cycle Parasitic Electric Load",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Off Cycle Parasitic Electric Load",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Outdoors",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Zone","Outdoors"},"Parasitic Heat Rejection Location",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet Air Mixer Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outlet Air Splitter Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet Air Mixer Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"Simultaneous",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"MutuallyExclusive","Simultaneous"},"Tank Element Control Logic",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Sensor 1 Height In Stratified Tank",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Sensor 1 Weight",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Sensor 2 Height In Stratified Tank",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,39 ) },
            {"WaterHeater:HeatPump:WrappedCondenser", () => new IdfObject("WaterHeater:HeatPump:WrappedCondenser",false,IdfObjectFormat.NotSpecified,false,31,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validPlantEquipmentNames","validBranchEquipmentNames","ZoneEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compressor Setpoint Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"deltaC",0,20,"5.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dead Band Temperature Difference",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Bottom Location",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Top Location",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporator Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Schedule","ZoneAirOnly","OutdoorAirOnly","ZoneAndOutdoorAir"},"Inlet Air Configuration",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Exhaust Air Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet Air Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet Air Humidity Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet Air Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,"WaterHeater:Stratified",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"WaterHeater:Stratified"},"Tank Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterHeaterStratifiedNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tank Use Side Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tank Use Side Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Coil:WaterHeating:AirToWaterHeatPump:Wrapped",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Coil:WaterHeating:AirToWaterHeatPump:Wrapped"},"DX Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"DX Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"HeatPumpWaterHeaterDXCoilsWrapped"}),new IdfField(false,"C",0,0,"10",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Inlet Air Temperature for Compressor Operation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",26,94,"48.88888888889",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Inlet Air Temperature for Compressor Operation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Schedule","Zone","Outdoors"},"Compressor Location",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compressor Ambient Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"Fan:OnOff",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fan:OnOff","Fan:SystemModel"},"Fan Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FansOnOff"}),new IdfField(false,"",0,0,"DrawThrough",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"BlowThrough","DrawThrough"},"Fan Placement",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"On Cycle Parasitic Electric Load",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Off Cycle Parasitic Electric Load",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Outdoors",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Zone","Outdoors"},"Parasitic Heat Rejection Location",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet Air Mixer Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outlet Air Splitter Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet Air Mixer Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"Simultaneous",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"MutuallyExclusive","Simultaneous"},"Tank Element Control Logic",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Sensor 1 Height In Stratified Tank",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Sensor 1 Weight",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Sensor 2 Height In Stratified Tank",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,38 ) },
            {"ThermalStorage:Ice:Simple", () => new IdfObject("ThermalStorage:Ice:Simple",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"IceThermalStorageEquipment","validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"IceOnCoilInternal","IceOnCoilExternal"},"Ice Storage Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"GJ",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"ThermalStorage:Ice:Detailed", () => new IdfObject("ThermalStorage:Ice:Detailed",false,IdfObjectFormat.NotSpecified,false,14,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"IceThermalStorageEquipment","validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"GJ",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"FractionChargedLMTD","FractionDischargedLMTD","LMTDMassFlow","LMTDFractionCharged"},"Discharging Curve Variable Specifications",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Discharging Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"FractionChargedLMTD","FractionDischargedLMTD","LMTDMassFlow","LMTDFractionCharged"},"Charging Curve Variable Specifications",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Charging Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"hr",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Timestep of the Curve Data",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Parasitic Electric Load During Discharging",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Parasitic Electric Load During Charging",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tank Loss Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Freezing Temperature of Storage Medium",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"OutsideMelt",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"InsideMelt","OutsideMelt"},"Thaw Process Indicator",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,15 ) },
            {"ThermalStorage:ChilledWater:Mixed", () => new IdfObject("ThermalStorage:ChilledWater:Mixed",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validPlantEquipmentNames","validCondenserEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validCondenserEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"m3",0,0,"0.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tank Volume",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"deltaC",0,0,"0.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Deadband Temperature Difference",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Temperature Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Cooling Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Schedule","Zone","Outdoors"},"Ambient Temperature Indicator",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ambient Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ambient Temperature Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ambient Temperature Outdoor Air Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Gain Coefficient from Ambient Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Use Side Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Use Side Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Use Side Heat Transfer Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Use Side Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Use Side Design Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Heat Transfer Effectiveness",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Design Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"hr",0,0,"4.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tank Recovery Time",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,22 ) },
            {"ThermalStorage:ChilledWater:Stratified", () => new IdfObject("ThermalStorage:ChilledWater:Stratified",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validPlantEquipmentNames","validCondenserEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validCondenserEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tank Volume",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tank Height",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"VerticalCylinder",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"VerticalCylinder","HorizontalCylinder","Other"},"Tank Shape",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tank Perimeter",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"deltaC",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Deadband Temperature Difference",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Sensor Height",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Temperature Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Cooling Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Schedule","Zone","Outdoors"},"Ambient Temperature Indicator",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ambient Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ambient Temperature Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ambient Temperature Outdoor Air Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Uniform Skin Loss Coefficient per Unit Area to Ambient Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Use Side Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Use Side Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Use Side Heat Transfer Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Use Side Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"m",0,0,"autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Use Side Inlet Height",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Use Side Outlet Height",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Use Side Design Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Heat Transfer Effectiveness",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"m",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Inlet Height",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Outlet Height",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autosize",false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Side Design Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"hr",0,0,"4.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tank Recovery Time",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Fixed",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fixed","Seeking"},"Inlet Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,10,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Nodes",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m-K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Additional Destratification Conductivity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Node 1 Additional Loss Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Node 2 Additional Loss Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Node 3 Additional Loss Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Node 4 Additional Loss Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Node 5 Additional Loss Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Node 6 Additional Loss Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Node 7 Additional Loss Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Node 8 Additional Loss Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Node 9 Additional Loss Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Node 10 Additional Loss Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,43 ) },
            {"PlantLoop", () => new IdfObject("PlantLoop",false,IdfObjectFormat.NotSpecified,false,18,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"PlantLoops"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Water",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Water","Steam","UserDefinedFluidType"},"Fluid Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"User Defined Fluid Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FluidAndGlycolNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plant Equipment Operation Scheme Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"PlantOperationSchemes"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Loop Temperature Setpoint Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Loop Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Loop Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Loop Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Loop Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3",0,0,"Autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plant Loop Volume",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plant Side Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plant Side Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plant Side Branch List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BranchLists"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plant Side Connector List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ConnectorLists"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Demand Side Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Demand Side Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Demand Side Branch List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BranchLists"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Demand Side Connector List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ConnectorLists"}),new IdfField(false,"",0,0,"SequentialLoad",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Optimal","SequentialLoad","UniformLoad","UniformPLR","SequentialUniformPLR"},"Load Distribution Scheme",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Manager List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SystemAvailabilityManagerLists"}),new IdfField(false,"",0,0,"SingleSetpoint",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SingleSetpoint","DualSetpointDeadband"},"Plant Loop Demand Calculation Scheme",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"CommonPipe","TwoWayCommonPipe","None"},"Common Pipe Simulation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"PumpPowerCorrection","LoopFlowCorrection","None"},"Pressure Simulation Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"minutes",0,0,"2.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Loop Circulation Time",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,24 ) },
            {"CondenserLoop", () => new IdfObject("CondenserLoop",false,IdfObjectFormat.NotSpecified,false,18,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"PlantLoops"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Water",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Water","UserDefinedFluidType"},"Fluid Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"User Defined Fluid Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FluidAndGlycolNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Equipment Operation Scheme Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserOperationSchemes"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Loop Temperature Setpoint Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Loop Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Loop Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Loop Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Loop Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3",0,0,"Autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Loop Volume",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Side Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Side Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Side Branch List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BranchLists"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Side Connector List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ConnectorLists"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Demand Side Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Demand Side Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Demand Side Branch List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BranchLists"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Demand Side Connector List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ConnectorLists"}),new IdfField(false,"",0,0,"SequentialLoad",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Optimal","SequentialLoad","UniformLoad","UniformPLR","SequentialUniformPLR"},"Load Distribution Scheme",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"PumpPowerCorrection","LoopFlowCorrection","None"},"Pressure Simulation Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"minutes",0,0,"2.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Loop Circulation Time",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,21 ) },
            {"PlantEquipmentList", () => new IdfObject("PlantEquipmentList",false,IdfObjectFormat.NotSpecified,false,1,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"PlantAndCondenserEquipmentLists"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 1 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"validPlantEquipmentTypes"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"validPlantEquipmentNames"})},true,21 ) },
            {"CondenserEquipmentList", () => new IdfObject("CondenserEquipmentList",false,IdfObjectFormat.NotSpecified,false,1,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"PlantAndCondenserEquipmentLists","CondenserEquipmentLists"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 1 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"validCondenserEquipmentTypes"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"validCondenserEquipmentNames"})},true,21 ) },
            {"PlantEquipmentOperation:Uncontrolled", () => new IdfObject("PlantEquipmentOperation:Uncontrolled",false,IdfObjectFormat.NotSpecified,false,2,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ControlSchemeList"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"PlantAndCondenserEquipmentLists"})},false,2 ) },
            {"PlantEquipmentOperation:CoolingLoad", () => new IdfObject("PlantEquipmentOperation:CoolingLoad",false,IdfObjectFormat.NotSpecified,false,4,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ControlSchemeList"},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 1 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 1 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 1 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"PlantAndCondenserEquipmentLists"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 2 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 2 Upper Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 2 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"PlantAndCondenserEquipmentLists"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 3 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 3 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 3 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"PlantAndCondenserEquipmentLists"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 4 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 4 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 4 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"PlantAndCondenserEquipmentLists"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 5 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 5 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 5 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"PlantAndCondenserEquipmentLists"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 6 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 6 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 6 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"PlantAndCondenserEquipmentLists"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 7 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 7 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 7 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"PlantAndCondenserEquipmentLists"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 8 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 8 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 8 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"PlantAndCondenserEquipmentLists"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 9 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 9 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 9 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"PlantAndCondenserEquipmentLists"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 10 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 10 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 10 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"PlantAndCondenserEquipmentLists"})},false,31 ) },
            {"PlantEquipmentOperation:HeatingLoad", () => new IdfObject("PlantEquipmentOperation:HeatingLoad",false,IdfObjectFormat.NotSpecified,false,4,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ControlSchemeList"},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 1 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 1 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 1 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"PlantAndCondenserEquipmentLists"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 2 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 2 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 2 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"PlantAndCondenserEquipmentLists"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 3 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 3 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 3 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"PlantAndCondenserEquipmentLists"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 4 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 4 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 4 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"PlantAndCondenserEquipmentLists"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 5 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 5 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 5 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"PlantAndCondenserEquipmentLists"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 6 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 6 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 6 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"PlantAndCondenserEquipmentLists"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 7 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 7 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 7 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"PlantAndCondenserEquipmentLists"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 8 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 8 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 8 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"PlantAndCondenserEquipmentLists"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 9 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 9 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 9 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"PlantAndCondenserEquipmentLists"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 10 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Load Range 10 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 10 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"PlantAndCondenserEquipmentLists"})},false,31 ) },
            {"PlantEquipmentOperation:OutdoorDryBulb", () => new IdfObject("PlantEquipmentOperation:OutdoorDryBulb",false,IdfObjectFormat.NotSpecified,false,4,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ControlSchemeList"},new List<string>{},new List<string>{}),new IdfField(true,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Range 1 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Range 1 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 1 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Range 2 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Range 2 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 2 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Range 3 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Range 3 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 3 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Range 4 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Range 4 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 4 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Range 5 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Range 5 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 5 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Range 6 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Range 6 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 6 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Range 7 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Range 7 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 7 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Range 8 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Range 8 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 8 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Range 9 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Range 9 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 9 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Range 10 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Range 10 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 10 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"})},false,31 ) },
            {"PlantEquipmentOperation:OutdoorWetBulb", () => new IdfObject("PlantEquipmentOperation:OutdoorWetBulb",false,IdfObjectFormat.NotSpecified,false,4,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ControlSchemeList"},new List<string>{},new List<string>{}),new IdfField(true,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Range 1 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Range 1 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 1 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Range 2 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Range 2 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 2 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Range 3 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Range 3 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 3 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Range 4 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Range 4 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 4 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Range 5 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Range 5 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 5 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Range 6 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Range 6 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 6 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Range 7 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Range 7 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 7 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Range 8 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Range 8 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 8 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Range 9 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Range 9 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 9 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Range 10 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Range 10 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 10 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"})},false,31 ) },
            {"PlantEquipmentOperation:OutdoorRelativeHumidity", () => new IdfObject("PlantEquipmentOperation:OutdoorRelativeHumidity",false,IdfObjectFormat.NotSpecified,false,4,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ControlSchemeList"},new List<string>{},new List<string>{}),new IdfField(true,"percent",0,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Range 1 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"percent",0,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Range 1 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 1 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"percent",0,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Range 2 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent",0,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Range 2 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 2 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"percent",0,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Range 3 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent",0,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Range 3 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 3 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"percent",0,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Range 4 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent",0,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Range 4 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 4 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"percent",0,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Range 5 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent",0,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Range 5 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 5 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"percent",0,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Range 6 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent",0,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Range 6 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 6 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"percent",0,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Range 7 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent",0,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Range 7 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 7 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"percent",0,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Range 8 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent",0,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Range 8 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 8 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"percent",0,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Range 9 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent",0,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Range 9 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 9 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"percent",0,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Range 10 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent",0,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Relative Humidity Range 10 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 10 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"})},false,31 ) },
            {"PlantEquipmentOperation:OutdoorDewpoint", () => new IdfObject("PlantEquipmentOperation:OutdoorDewpoint",false,IdfObjectFormat.NotSpecified,false,4,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ControlSchemeList"},new List<string>{},new List<string>{}),new IdfField(true,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Range 1 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Range 1 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 1 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Range 2 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Range 2 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 2 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Range 3 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Range 3 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 3 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Range 4 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Range 4 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 4 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Range 5 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Range 5 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 5 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Range 6 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Range 6 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 6 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Range 7 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Range 7 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 7 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Range 8 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Range 8 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 8 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Range 9 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Range 9 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 9 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Range 10 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",-70,70,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Range 10 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 10 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"})},false,31 ) },
            {"PlantEquipmentOperation:ComponentSetpoint", () => new IdfObject("PlantEquipmentOperation:ComponentSetpoint",false,IdfObjectFormat.NotSpecified,false,7,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ControlSchemeList"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 1 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Demand Calculation 1 Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint 1 Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 1 Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Heating","Cooling","Dual"},"Operation 1 Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 2 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 2 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Demand Calculation 2 Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint 2 Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 2 Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Heating","Cooling","Dual"},"Operation 2 Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 3 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 3 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Demand Calculation 3 Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint 3 Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 3 Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Heating","Cooling","Dual"},"Operation 3 Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 4 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 4 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Demand Calculation 4 Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint 4 Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 4 Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Heating","Cooling","Dual"},"Operation 4 Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 5 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 5 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Demand Calculation 5 Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint 5 Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 5 Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Heating","Cooling","Dual"},"Operation 5 Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 6 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 6 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Demand Calculation 6 Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint 6 Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 6 Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Heating","Cooling","Dual"},"Operation 6 Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 7 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 7 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Demand Calculation 7 Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint 7 Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 7 Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Heating","Cooling","Dual"},"Operation 7 Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 8 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 8 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Demand Calculation 8 Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint 8 Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 8 Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Heating","Cooling","Dual"},"Operation 8 Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 9 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 9 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Demand Calculation 9 Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint 9 Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 9 Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Heating","Cooling","Dual"},"Operation 9 Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 10 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 10 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Demand Calculation 10 Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint 10 Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 10 Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Heating","Cooling","Dual"},"Operation 10 Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,61 ) },
            {"PlantEquipmentOperation:ThermalEnergyStorage", () => new IdfObject("PlantEquipmentOperation:ThermalEnergyStorage",false,IdfObjectFormat.NotSpecified,false,7,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ControlSchemeList"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"On-Peak Schedule",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Charging Availability Schedule",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Non-Charging Chilled Water Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Charging Chilled Water Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ThermalStorage:Ice:Simple","ThermalStorage:Ice:Detailed","Chiller:Electric:EIR","Chiller:Electric:ReformulatedEIR","Chiller:Electric","Chiller:Absorption:Indirect","Chiller:Absorption","Chiller:ConstantCOP","Chiller:EngineDriven","Chiller:CombustionTurbine"},"Component 1 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"IceThermalStorageEquipment","Chillers"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 1 Demand Calculation Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 1 Setpoint Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 1 Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Heating","Cooling","Dual"},"Component 1 Operation Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ThermalStorage:Ice:Simple","ThermalStorage:Ice:Detailed","Chiller:Electric:EIR","Chiller:Electric:ReformulatedEIR","Chiller:Electric","Chiller:Absorption:Indirect","Chiller:Absorption","Chiller:ConstantCOP","Chiller:EngineDriven","Chiller:CombustionTurbine"},"Component 2 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 2 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"IceThermalStorageEquipment","Chillers"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 2 Demand Calculation Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 2 Setpoint Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 2 Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Heating","Cooling","Dual"},"Component 2 Operation Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ThermalStorage:Ice:Simple","ThermalStorage:Ice:Detailed","Chiller:Electric:EIR","Chiller:Electric:ReformulatedEIR","Chiller:Electric","Chiller:Absorption:Indirect","Chiller:Absorption","Chiller:ConstantCOP","Chiller:EngineDriven","Chiller:CombustionTurbine"},"Component 3 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 3 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"IceThermalStorageEquipment","Chillers"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 3 Demand Calculation Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 3 Setpoint Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 3 Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Heating","Cooling","Dual"},"Component 3 Operation Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ThermalStorage:Ice:Simple","ThermalStorage:Ice:Detailed","Chiller:Electric:EIR","Chiller:Electric:ReformulatedEIR","Chiller:Electric","Chiller:Absorption:Indirect","Chiller:Absorption","Chiller:ConstantCOP","Chiller:EngineDriven","Chiller:CombustionTurbine"},"Component 4 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 4 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"IceThermalStorageEquipment","Chillers"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 4 Demand Calculation Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 4 Setpoint Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 4 Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Heating","Cooling","Dual"},"Component 4 Operation Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ThermalStorage:Ice:Simple","ThermalStorage:Ice:Detailed","Chiller:Electric:EIR","Chiller:Electric:ReformulatedEIR","Chiller:Electric","Chiller:Absorption:Indirect","Chiller:Absorption","Chiller:ConstantCOP","Chiller:EngineDriven","Chiller:CombustionTurbine"},"Component 5 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 5 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"IceThermalStorageEquipment","Chillers"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 5 Demand Calculation Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 5 Setpoint Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 5 Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Heating","Cooling","Dual"},"Component 5 Operation Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ThermalStorage:Ice:Simple","ThermalStorage:Ice:Detailed","Chiller:Electric:EIR","Chiller:Electric:ReformulatedEIR","Chiller:Electric","Chiller:Absorption:Indirect","Chiller:Absorption","Chiller:ConstantCOP","Chiller:EngineDriven","Chiller:CombustionTurbine"},"Component 6 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 6 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"IceThermalStorageEquipment","Chillers"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 6 Demand Calculation Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 6 Setpoint Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 6 Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Heating","Cooling","Dual"},"Component 6 Operation Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ThermalStorage:Ice:Simple","ThermalStorage:Ice:Detailed","Chiller:Electric:EIR","Chiller:Electric:ReformulatedEIR","Chiller:Electric","Chiller:Absorption:Indirect","Chiller:Absorption","Chiller:ConstantCOP","Chiller:EngineDriven","Chiller:CombustionTurbine"},"Component 7 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 7 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"IceThermalStorageEquipment","Chillers"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 7 Demand Calculation Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 7 Setpoint Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 7 Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Heating","Cooling","Dual"},"Component 7 Operation Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ThermalStorage:Ice:Simple","ThermalStorage:Ice:Detailed","Chiller:Electric:EIR","Chiller:Electric:ReformulatedEIR","Chiller:Electric","Chiller:Absorption:Indirect","Chiller:Absorption","Chiller:ConstantCOP","Chiller:EngineDriven","Chiller:CombustionTurbine"},"Component 8 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 8 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"IceThermalStorageEquipment","Chillers"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 8 Demand Calculation Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 8 Setpoint Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 8 Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Heating","Cooling","Dual"},"Component 8 Operation Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ThermalStorage:Ice:Simple","ThermalStorage:Ice:Detailed","Chiller:Electric:EIR","Chiller:Electric:ReformulatedEIR","Chiller:Electric","Chiller:Absorption:Indirect","Chiller:Absorption","Chiller:ConstantCOP","Chiller:EngineDriven","Chiller:CombustionTurbine"},"Component 9 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 9 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"IceThermalStorageEquipment","Chillers"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 9 Demand Calculation Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 9 Setpoint Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 9 Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Heating","Cooling","Dual"},"Component 9 Operation Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ThermalStorage:Ice:Simple","ThermalStorage:Ice:Detailed","Chiller:Electric:EIR","Chiller:Electric:ReformulatedEIR","Chiller:Electric","Chiller:Absorption:Indirect","Chiller:Absorption","Chiller:ConstantCOP","Chiller:EngineDriven","Chiller:CombustionTurbine"},"Component 10 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 10 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"IceThermalStorageEquipment","Chillers"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 10 Demand Calculation Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 10 Setpoint Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,true,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Component 10 Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Heating","Cooling","Dual"},"Component 10 Operation Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,65 ) },
            {"PlantEquipmentOperation:OutdoorDryBulbDifference", () => new IdfObject("PlantEquipmentOperation:OutdoorDryBulbDifference",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ControlSchemeList"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Temperature Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Difference Range 1 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Difference Range 1 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 1 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Difference Range 2 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Difference Range 2 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 2 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Difference Range 3 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Difference Range 3 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 3 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Difference Range 4 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Difference Range 4 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 4 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Difference Range 5 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Difference Range 5 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 5 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Difference Range 6 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Difference Range 6 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 6 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Difference Range 7 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Difference Range 7 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 7 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Difference Range 8 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Difference Range 8 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 8 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Difference Range 9 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Difference Range 9 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 9 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Difference Range 10 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dry-Bulb Temperature Difference Range 10 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 10 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"})},false,32 ) },
            {"PlantEquipmentOperation:OutdoorWetBulbDifference", () => new IdfObject("PlantEquipmentOperation:OutdoorWetBulbDifference",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ControlSchemeList"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Temperature Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Difference Range 1 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Difference Range 1 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 1 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Difference Range 2 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Difference Range 2 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 2 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Difference Range 3 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Difference Range 3 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 3 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Difference Range 4 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Difference Range 4 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 4 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Difference Range 5 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Difference Range 5 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 5 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Difference Range 6 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Difference Range 6 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 6 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Difference Range 7 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Difference Range 7 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 7 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Difference Range 8 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Difference Range 8 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 8 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Difference Range 9 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Difference Range 9 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 9 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Difference Range 10 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Wet-Bulb Temperature Difference Range 10 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 10 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"})},false,32 ) },
            {"PlantEquipmentOperation:OutdoorDewpointDifference", () => new IdfObject("PlantEquipmentOperation:OutdoorDewpointDifference",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ControlSchemeList"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Temperature Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Difference Range 1 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Difference Range 1 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 1 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Difference Range 2 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Difference Range 2 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 2 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Difference Range 3 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Difference Range 3 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 3 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Difference Range 4 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Difference Range 4 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 4 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Difference Range 5 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Difference Range 5 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 5 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Difference Range 6 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Difference Range 6 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 6 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Difference Range 7 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Difference Range 7 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 7 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Difference Range 8 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Difference Range 8 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 8 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Difference Range 9 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Difference Range 9 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 9 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Difference Range 10 Lower Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",-50,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dewpoint Temperature Difference Range 10 Upper Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Range 10 Equipment List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CondenserEquipmentLists"})},false,32 ) },
            {"PlantEquipmentOperationSchemes", () => new IdfObject("PlantEquipmentOperationSchemes",false,IdfObjectFormat.NotSpecified,false,4,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"PlantOperationSchemes"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"PlantEquipmentOperation:CoolingLoad","PlantEquipmentOperation:HeatingLoad","PlantEquipmentOperation:Uncontrolled","PlantEquipmentOperation:ComponentSetpoint","PlantEquipmentOperation:ThermalEnergyStorage","PlantEquipmentOperation:UserDefined","PlantEquipmentOperation:OutdoorDryBulb","PlantEquipmentOperation:OutdoorWetBulb","PlantEquipmentOperation:OutdoorRelativeHumidity","PlantEquipmentOperation:OutdoorDewpoint","PlantEquipmentOperation:OutdoorDryBulbDifference","PlantEquipmentOperation:OutdoorWetBulbDifference","PlantEquipmentOperation:OutdoorDewpointDifference"},"Control Scheme 1 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Scheme 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ControlSchemeList"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Scheme 1 Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"PlantEquipmentOperation:CoolingLoad","PlantEquipmentOperation:HeatingLoad","PlantEquipmentOperation:Uncontrolled","PlantEquipmentOperation:ComponentSetpoint","PlantEquipmentOperation:ThermalEnergyStorage","PlantEquipmentOperation:UserDefined","PlantEquipmentOperation:OutdoorDryBulb","PlantEquipmentOperation:OutdoorWetBulb","PlantEquipmentOperation:OutdoorRelativeHumidity","PlantEquipmentOperation:OutdoorDewpoint","PlantEquipmentOperation:OutdoorDryBulbDifference","PlantEquipmentOperation:OutdoorWetBulbDifference","PlantEquipmentOperation:OutdoorDewpointDifference"},"Control Scheme 2 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Scheme 2 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ControlSchemeList"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Scheme 2 Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"PlantEquipmentOperation:CoolingLoad","PlantEquipmentOperation:HeatingLoad","PlantEquipmentOperation:Uncontrolled","PlantEquipmentOperation:ComponentSetpoint","PlantEquipmentOperation:ThermalEnergyStorage","PlantEquipmentOperation:UserDefined","PlantEquipmentOperation:OutdoorDryBulb","PlantEquipmentOperation:OutdoorWetBulb","PlantEquipmentOperation:OutdoorRelativeHumidity","PlantEquipmentOperation:OutdoorDewpoint","PlantEquipmentOperation:OutdoorDryBulbDifference","PlantEquipmentOperation:OutdoorWetBulbDifference","PlantEquipmentOperation:OutdoorDewpointDifference"},"Control Scheme 3 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Scheme 3 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ControlSchemeList"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Scheme 3 Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"PlantEquipmentOperation:CoolingLoad","PlantEquipmentOperation:HeatingLoad","PlantEquipmentOperation:Uncontrolled","PlantEquipmentOperation:ComponentSetpoint","PlantEquipmentOperation:ThermalEnergyStorage","PlantEquipmentOperation:UserDefined","PlantEquipmentOperation:OutdoorDryBulb","PlantEquipmentOperation:OutdoorWetBulb","PlantEquipmentOperation:OutdoorRelativeHumidity","PlantEquipmentOperation:OutdoorDewpoint","PlantEquipmentOperation:OutdoorDryBulbDifference","PlantEquipmentOperation:OutdoorWetBulbDifference","PlantEquipmentOperation:OutdoorDewpointDifference"},"Control Scheme 4 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Scheme 4 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ControlSchemeList"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Scheme 4 Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"PlantEquipmentOperation:CoolingLoad","PlantEquipmentOperation:HeatingLoad","PlantEquipmentOperation:Uncontrolled","PlantEquipmentOperation:ComponentSetpoint","PlantEquipmentOperation:ThermalEnergyStorage","PlantEquipmentOperation:UserDefined","PlantEquipmentOperation:OutdoorDryBulb","PlantEquipmentOperation:OutdoorWetBulb","PlantEquipmentOperation:OutdoorRelativeHumidity","PlantEquipmentOperation:OutdoorDewpoint","PlantEquipmentOperation:OutdoorDryBulbDifference","PlantEquipmentOperation:OutdoorWetBulbDifference","PlantEquipmentOperation:OutdoorDewpointDifference"},"Control Scheme 5 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Scheme 5 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ControlSchemeList"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Scheme 5 Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"PlantEquipmentOperation:CoolingLoad","PlantEquipmentOperation:HeatingLoad","PlantEquipmentOperation:Uncontrolled","PlantEquipmentOperation:ComponentSetpoint","PlantEquipmentOperation:ThermalEnergyStorage","PlantEquipmentOperation:UserDefined","PlantEquipmentOperation:OutdoorDryBulb","PlantEquipmentOperation:OutdoorWetBulb","PlantEquipmentOperation:OutdoorRelativeHumidity","PlantEquipmentOperation:OutdoorDewpoint","PlantEquipmentOperation:OutdoorDryBulbDifference","PlantEquipmentOperation:OutdoorWetBulbDifference","PlantEquipmentOperation:OutdoorDewpointDifference"},"Control Scheme 6 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Scheme 6 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ControlSchemeList"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Scheme 6 Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"PlantEquipmentOperation:CoolingLoad","PlantEquipmentOperation:HeatingLoad","PlantEquipmentOperation:Uncontrolled","PlantEquipmentOperation:ComponentSetpoint","PlantEquipmentOperation:ThermalEnergyStorage","PlantEquipmentOperation:UserDefined","PlantEquipmentOperation:OutdoorDryBulb","PlantEquipmentOperation:OutdoorWetBulb","PlantEquipmentOperation:OutdoorRelativeHumidity","PlantEquipmentOperation:OutdoorDewpoint","PlantEquipmentOperation:OutdoorDryBulbDifference","PlantEquipmentOperation:OutdoorWetBulbDifference","PlantEquipmentOperation:OutdoorDewpointDifference"},"Control Scheme 7 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Scheme 7 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ControlSchemeList"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Scheme 7 Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"PlantEquipmentOperation:CoolingLoad","PlantEquipmentOperation:HeatingLoad","PlantEquipmentOperation:Uncontrolled","PlantEquipmentOperation:ComponentSetpoint","PlantEquipmentOperation:ThermalEnergyStorage","PlantEquipmentOperation:UserDefined","PlantEquipmentOperation:OutdoorDryBulb","PlantEquipmentOperation:OutdoorWetBulb","PlantEquipmentOperation:OutdoorRelativeHumidity","PlantEquipmentOperation:OutdoorDewpoint","PlantEquipmentOperation:OutdoorDryBulbDifference","PlantEquipmentOperation:OutdoorWetBulbDifference","PlantEquipmentOperation:OutdoorDewpointDifference"},"Control Scheme 8 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Scheme 8 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ControlSchemeList"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Scheme 8 Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,25 ) },
            {"CondenserEquipmentOperationSchemes", () => new IdfObject("CondenserEquipmentOperationSchemes",false,IdfObjectFormat.NotSpecified,false,4,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"CondenserOperationSchemes"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"PlantEquipmentOperation:Uncontrolled","PlantEquipmentOperation:CoolingLoad","PlantEquipmentOperation:HeatingLoad","PlantEquipmentOperation:OutdoorDryBulb","PlantEquipmentOperation:OutdoorWetBulb","PlantEquipmentOperation:OutdoorRelativeHumidity","PlantEquipmentOperation:OutdoorDewpoint","PlantEquipmentOperation:OutdoorDryBulbDifference","PlantEquipmentOperation:OutdoorWetBulbDifference","PlantEquipmentOperation:OutdoorDewpointDifference","PlantEquipmentOperation:UserDefined"},"Control Scheme 1 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Scheme 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ControlSchemeList"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Scheme 1 Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"PlantEquipmentOperation:Uncontrolled","PlantEquipmentOperation:CoolingLoad","PlantEquipmentOperation:HeatingLoad","PlantEquipmentOperation:OutdoorDryBulb","PlantEquipmentOperation:OutdoorWetBulb","PlantEquipmentOperation:OutdoorRelativeHumidity","PlantEquipmentOperation:OutdoorDewpoint","PlantEquipmentOperation:OutdoorDryBulbDifference","PlantEquipmentOperation:OutdoorWetBulbDifference","PlantEquipmentOperation:OutdoorDewpointDifference","PlantEquipmentOperation:UserDefined"},"Control Scheme 2 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Scheme 2 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ControlSchemeList"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Scheme 2 Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"PlantEquipmentOperation:Uncontrolled","PlantEquipmentOperation:CoolingLoad","PlantEquipmentOperation:HeatingLoad","PlantEquipmentOperation:OutdoorDryBulb","PlantEquipmentOperation:OutdoorWetBulb","PlantEquipmentOperation:OutdoorRelativeHumidity","PlantEquipmentOperation:OutdoorDewpoint","PlantEquipmentOperation:OutdoorDryBulbDifference","PlantEquipmentOperation:OutdoorWetBulbDifference","PlantEquipmentOperation:OutdoorDewpointDifference","PlantEquipmentOperation:UserDefined"},"Control Scheme 3 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Scheme 3 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ControlSchemeList"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Scheme 3 Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"PlantEquipmentOperation:Uncontrolled","PlantEquipmentOperation:CoolingLoad","PlantEquipmentOperation:HeatingLoad","PlantEquipmentOperation:OutdoorDryBulb","PlantEquipmentOperation:OutdoorWetBulb","PlantEquipmentOperation:OutdoorRelativeHumidity","PlantEquipmentOperation:OutdoorDewpoint","PlantEquipmentOperation:OutdoorDryBulbDifference","PlantEquipmentOperation:OutdoorWetBulbDifference","PlantEquipmentOperation:OutdoorDewpointDifference","PlantEquipmentOperation:UserDefined"},"Control Scheme 4 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Scheme 4 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ControlSchemeList"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Scheme 4 Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"PlantEquipmentOperation:Uncontrolled","PlantEquipmentOperation:CoolingLoad","PlantEquipmentOperation:HeatingLoad","PlantEquipmentOperation:OutdoorDryBulb","PlantEquipmentOperation:OutdoorWetBulb","PlantEquipmentOperation:OutdoorRelativeHumidity","PlantEquipmentOperation:OutdoorDewpoint","PlantEquipmentOperation:OutdoorDryBulbDifference","PlantEquipmentOperation:OutdoorWetBulbDifference","PlantEquipmentOperation:OutdoorDewpointDifference","PlantEquipmentOperation:UserDefined"},"Control Scheme 5 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Scheme 5 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ControlSchemeList"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Scheme 5 Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"PlantEquipmentOperation:Uncontrolled","PlantEquipmentOperation:CoolingLoad","PlantEquipmentOperation:HeatingLoad","PlantEquipmentOperation:OutdoorDryBulb","PlantEquipmentOperation:OutdoorWetBulb","PlantEquipmentOperation:OutdoorRelativeHumidity","PlantEquipmentOperation:OutdoorDewpoint","PlantEquipmentOperation:OutdoorDryBulbDifference","PlantEquipmentOperation:OutdoorWetBulbDifference","PlantEquipmentOperation:OutdoorDewpointDifference","PlantEquipmentOperation:UserDefined"},"Control Scheme 6 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Scheme 6 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ControlSchemeList"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Scheme 6 Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"PlantEquipmentOperation:Uncontrolled","PlantEquipmentOperation:CoolingLoad","PlantEquipmentOperation:HeatingLoad","PlantEquipmentOperation:OutdoorDryBulb","PlantEquipmentOperation:OutdoorWetBulb","PlantEquipmentOperation:OutdoorRelativeHumidity","PlantEquipmentOperation:OutdoorDewpoint","PlantEquipmentOperation:OutdoorDryBulbDifference","PlantEquipmentOperation:OutdoorWetBulbDifference","PlantEquipmentOperation:OutdoorDewpointDifference","PlantEquipmentOperation:UserDefined"},"Control Scheme 7 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Scheme 7 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ControlSchemeList"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Scheme 7 Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"PlantEquipmentOperation:Uncontrolled","PlantEquipmentOperation:CoolingLoad","PlantEquipmentOperation:HeatingLoad","PlantEquipmentOperation:OutdoorDryBulb","PlantEquipmentOperation:OutdoorWetBulb","PlantEquipmentOperation:OutdoorRelativeHumidity","PlantEquipmentOperation:OutdoorDewpoint","PlantEquipmentOperation:OutdoorDryBulbDifference","PlantEquipmentOperation:OutdoorWetBulbDifference","PlantEquipmentOperation:OutdoorDewpointDifference","PlantEquipmentOperation:UserDefined"},"Control Scheme 8 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Scheme 8 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ControlSchemeList"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Scheme 8 Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,25 ) },
            {"EnergyManagementSystem:Sensor", () => new IdfObject("EnergyManagementSystem:Sensor",false,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Output:Variable or Output:Meter Index Key Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Output:Variable or Output:Meter Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,3 ) },
            {"EnergyManagementSystem:Actuator", () => new IdfObject("EnergyManagementSystem:Actuator",false,IdfObjectFormat.NotSpecified,false,4,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Actuated Component Unique Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Actuated Component Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Actuated Component Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,4 ) },
            {"EnergyManagementSystem:ProgramCallingManager", () => new IdfObject("EnergyManagementSystem:ProgramCallingManager",false,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ProgramNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"BeginNewEnvironment","AfterNewEnvironmentWarmUpIsComplete","BeginZoneTimestepBeforeInitHeatBalance","BeginZoneTimestepAfterInitHeatBalance","BeginTimestepBeforePredictor","AfterPredictorBeforeHVACManagers","AfterPredictorAfterHVACManagers","InsideHVACSystemIterationLoop","EndOfZoneTimestepBeforeZoneReporting","EndOfZoneTimestepAfterZoneReporting","EndOfSystemTimestepBeforeHVACReporting","EndOfSystemTimestepAfterHVACReporting","EndOfZoneSizing","EndOfSystemSizing","AfterComponentInputReadIn","UserDefinedComponentModel","UnitarySystemSizing"},"EnergyPlus Model Calling Point",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Program Name 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ErlProgramNames"})},true,27 ) },
            {"EnergyManagementSystem:Program", () => new IdfObject("EnergyManagementSystem:Program",false,IdfObjectFormat.NotSpecified,false,2,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ErlProgramNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Program Line 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,502 ) },
            {"EnergyManagementSystem:Subroutine", () => new IdfObject("EnergyManagementSystem:Subroutine",false,IdfObjectFormat.NotSpecified,false,2,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ErlProgramNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Program Line 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,120 ) },
            {"EnergyManagementSystem:GlobalVariable", () => new IdfObject("EnergyManagementSystem:GlobalVariable",false,IdfObjectFormat.NotSpecified,false,1,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Erl Variable 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,502 ) },
            {"EnergyManagementSystem:OutputVariable", () => new IdfObject("EnergyManagementSystem:OutputVariable",false,IdfObjectFormat.NotSpecified,false,4,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"EMS Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Averaged","Summed"},"Type of Data in Variable",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ZoneTimestep","SystemTimestep"},"Update Frequency",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"EMS Program or Subroutine Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Units",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,6 ) },
            {"EnergyManagementSystem:MeteredOutputVariable", () => new IdfObject("EnergyManagementSystem:MeteredOutputVariable",false,IdfObjectFormat.NotSpecified,false,7,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"EMS Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ZoneTimestep","SystemTimestep"},"Update Frequency",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"EMS Program or Subroutine Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Electricity","NaturalGas","Gasoline","Diesel","Coal","FuelOil#1","FuelOil#2","Propane","OtherFuel1","OtherFuel2","WaterUse","OnSiteWaterProduced","MainsWaterSupply","RainWaterCollected","WellWaterDrawn","CondensateWaterCollected","EnergyTransfer","Steam","DistrictCooling","DistrictHeating","ElectricityProducedOnSite","SolarWaterHeating","SolarAirHeating"},"Resource Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Building","HVAC","Plant","System"},"Group Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Heating","Cooling","InteriorLights","ExteriorLights","InteriorEquipment","ExteriorEquipment","Fans","Pumps","HeatRejection","Humidifier","HeatRecovery","WaterSystems","Refrigeration","OnSiteGeneration","HeatingCoils","CoolingCoils","Chillers","Boilers","Baseboard","HeatRecoveryForCooling","HeatRecoveryForHeating"},"End-Use Category",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Units",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,9 ) },
            {"EnergyManagementSystem:TrendVariable", () => new IdfObject("EnergyManagementSystem:TrendVariable",false,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"EMS Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",1,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Timesteps to be Logged",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,3 ) },
            {"EnergyManagementSystem:InternalVariable", () => new IdfObject("EnergyManagementSystem:InternalVariable",false,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Internal Data Index Key Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Internal Data Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,3 ) },
            {"EnergyManagementSystem:CurveOrTableIndexVariable", () => new IdfObject("EnergyManagementSystem:CurveOrTableIndexVariable",false,IdfObjectFormat.NotSpecified,false,2,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Curve or Table Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions","BivariateFunctions","TrivariateFunctions","QuadvariateFunctions","MultivariateFunctions"})},false,2 ) },
            {"EnergyManagementSystem:ConstructionIndexVariable", () => new IdfObject("EnergyManagementSystem:ConstructionIndexVariable",false,IdfObjectFormat.NotSpecified,false,2,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Construction Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ConstructionNames"})},false,2 ) },
            {"ExternalInterface", () => new IdfObject("ExternalInterface",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"PtolemyServer","FunctionalMockupUnitImport","FunctionalMockupUnitExport"},"Name of External Interface",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,1 ) },
            {"ExternalInterface:Schedule", () => new IdfObject("ExternalInterface:Schedule",false,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ScheduleNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Type Limits Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleTypeLimitsNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Initial Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,3 ) },
            {"ExternalInterface:Variable", () => new IdfObject("ExternalInterface:Variable",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Initial Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,2 ) },
            {"ExternalInterface:Actuator", () => new IdfObject("ExternalInterface:Actuator",false,IdfObjectFormat.NotSpecified,false,4,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Actuated Component Unique Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Actuated Component Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Actuated Component Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Optional Initial Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"ExternalInterface:FunctionalMockupUnitImport", () => new IdfObject("ExternalInterface:FunctionalMockupUnitImport",false,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"FMU File Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"FMUFileName"},new List<string>{},new List<string>{}),new IdfField(false,"ms",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"FMU Timeout",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"FMU LoggingOn",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,3 ) },
            {"ExternalInterface:FunctionalMockupUnitImport:From:Variable", () => new IdfObject("ExternalInterface:FunctionalMockupUnitImport:From:Variable",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Output:Variable Index Key Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Output:Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"FMU File Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FMUFileName"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"FMU Instance Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"FMU Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"ExternalInterface:FunctionalMockupUnitImport:To:Schedule", () => new IdfObject("ExternalInterface:FunctionalMockupUnitImport:To:Schedule",false,IdfObjectFormat.NotSpecified,false,6,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ScheduleNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Type Limits Names",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleTypeLimitsNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"FMU File Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FMUFileName"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"FMU Instance Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"FMU Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Initial Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,6 ) },
            {"ExternalInterface:FunctionalMockupUnitImport:To:Actuator", () => new IdfObject("ExternalInterface:FunctionalMockupUnitImport:To:Actuator",false,IdfObjectFormat.NotSpecified,false,8,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Actuated Component Unique Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Actuated Component Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Actuated Component Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"FMU File Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FMUFileName"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"FMU Instance Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"FMU Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Initial Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,8 ) },
            {"ExternalInterface:FunctionalMockupUnitImport:To:Variable", () => new IdfObject("ExternalInterface:FunctionalMockupUnitImport:To:Variable",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"FMU File Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FMUFileName"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"FMU Instance Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"FMU Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Initial Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"ExternalInterface:FunctionalMockupUnitExport:From:Variable", () => new IdfObject("ExternalInterface:FunctionalMockupUnitExport:From:Variable",false,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Output:Variable Index Key Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Output:Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"FMU Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,3 ) },
            {"ExternalInterface:FunctionalMockupUnitExport:To:Schedule", () => new IdfObject("ExternalInterface:FunctionalMockupUnitExport:To:Schedule",false,IdfObjectFormat.NotSpecified,false,4,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ScheduleNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Type Limits Names",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleTypeLimitsNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"FMU Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Initial Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,4 ) },
            {"ExternalInterface:FunctionalMockupUnitExport:To:Actuator", () => new IdfObject("ExternalInterface:FunctionalMockupUnitExport:To:Actuator",false,IdfObjectFormat.NotSpecified,false,6,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Actuated Component Unique Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Actuated Component Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Actuated Component Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"FMU Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Initial Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,6 ) },
            {"ExternalInterface:FunctionalMockupUnitExport:To:Variable", () => new IdfObject("ExternalInterface:FunctionalMockupUnitExport:To:Variable",false,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"FMU Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Initial Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,3 ) },
            {"ZoneHVAC:ForcedAir:UserDefined", () => new IdfObject("ZoneHVAC:ForcedAir:UserDefined",false,IdfObjectFormat.NotSpecified,false,8,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validBranchEquipmentNames","ZoneEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Overall Model Simulation Program Calling Manager Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ProgramNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Model Setup and Sizing Program Calling Manager Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ProgramNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Primary Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Primary Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Secondary Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Secondary Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,3,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Plant Loop Connections",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plant Connection 1 Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plant Connection 1 Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plant Connection 2 Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plant Connection 2 Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plant Connection 3 Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plant Connection 3 Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Inlet Water Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Collection Outlet Water Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ambient Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"})},false,17 ) },
            {"AirTerminal:SingleDuct:UserDefined", () => new IdfObject("AirTerminal:SingleDuct:UserDefined",false,IdfObjectFormat.NotSpecified,false,8,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"AirTerminalUnitNames","validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Overall Model Simulation Program Calling Manager Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ProgramNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Model Setup and Sizing Program Calling Manager Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ProgramNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Primary Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Primary Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Secondary Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Secondary Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,2,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Plant Loop Connections",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plant Connection 1 Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plant Connection 1 Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plant Connection 2 Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plant Connection 2 Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Inlet Water Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Collection Outlet Water Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ambient Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"})},false,15 ) },
            {"Coil:UserDefined", () => new IdfObject("Coil:UserDefined",false,IdfObjectFormat.NotSpecified,false,9,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"UserDefinedCoil","validBranchEquipmentNames","validOASysEquipmentNames"},new List<string>{"validBranchEquipmentTypes","validOASysEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Overall Model Simulation Program Calling Manager Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ProgramNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Model Setup and Sizing Program Calling Manager Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ProgramNames"}),new IdfField(true,"",1,2,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Air Connections",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Connection 1 Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Connection 1 Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Connection 2 Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Connection 2 Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Plant Connection is Used",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plant Connection Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plant Connection Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Inlet Water Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Collection Outlet Water Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ambient Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"})},false,14 ) },
            {"PlantComponent:UserDefined", () => new IdfObject("PlantComponent:UserDefined",false,IdfObjectFormat.NotSpecified,false,9,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validPlantEquipmentNames","validCondenserEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validCondenserEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Main Model Program Calling Manager Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ProgramNames"}),new IdfField(true,"",1,4,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Plant Loop Connections",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plant Connection 1 Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plant Connection 1 Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"DemandsLoad","MeetsLoadWithPassiveCapacity","MeetsLoadWithNominalCapacity","MeetsLoadWithNominalCapacityLowOutLimit","MeetsLoadWithNominalCapacityHiOutLimit"},"Plant Connection 1 Loading Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"NeedsFlowIfLoopOn","NeedsFlowAndTurnsLoopOn","ReceivesWhateverFlowAvailable"},"Plant Connection 1 Loop Flow Request Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plant Connection 1 Initialization Program Calling Manager Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ProgramNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plant Connection 1 Simulation Program Calling Manager Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ProgramNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plant Connection 2 Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plant Connection 2 Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"DemandsLoad","MeetLoadWithPassiveCapacity","MeetLoadWithNominalCapacity","MeetLoadWithNominalCapacityLowOutLimit","MeetLoadWithNominalCapacityHiOutLimit"},"Plant Connection 2 Loading Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"NeedsFlowIfLoopOn","NeedsFlowAndTurnsLoopOn","ReceivesWhateverFlowAvailable"},"Plant Connection 2 Loop Flow Request Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plant Connection 2 Initialization Program Calling Manager Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ProgramNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plant Connection 2 Simulation Program Calling Manager Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ProgramNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plant Connection 3 Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plant Connection 3 Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"DemandsLoad","MeetLoadWithPassiveCapacity","MeetLoadWithNominalCapacity","MeetLoadWithNominalCapacityLowOutLimit","MeetLoadWithNominalCapacityHiOutLimit"},"Plant Connection 3 Loading Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"NeedsFlowIfLoopOn","NeedsFlowAndTurnsLoopOn","ReceivesWhateverFlowAvailable"},"Plant Connection 3 Loop Flow Request Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plant Connection 3 Initialization Program Calling Manager Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ProgramNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plant Connection 3 Simulation Program Calling Manager Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ProgramNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plant Connection 4 Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plant Connection 4 Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"DemandsLoad","MeetLoadWithPassiveCapacity","MeetLoadWithNominalCapacity","MeetLoadWithNominalCapacityLowOutLimit","MeetLoadWithNominalCapacityHiOutLimit"},"Plant Connection 4 Loading Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"NeedsFlowIfLoopOn","NeedsFlowAndTurnsLoopOn","ReceivesWhateverFlowAvailable"},"Plant Connection 4 Loop Flow Request Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plant Connection 4 Initialization Program Calling Manager Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ProgramNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plant Connection 4 Simulation Program Calling Manager Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ProgramNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Connection Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Connection Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Inlet Water Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Collection Outlet Water Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ambient Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"})},false,32 ) },
            {"PlantEquipmentOperation:UserDefined", () => new IdfObject("PlantEquipmentOperation:UserDefined",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Main Model Program Calling Manager Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ProgramNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Initialization Program Calling Manager Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ProgramNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 1 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 2 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 2 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 3 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 3 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 4 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 4 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 5 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 5 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 6 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 6 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 7 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 7 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 8 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 8 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 9 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 9 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 10 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Equipment 10 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,23 ) },
            {"AvailabilityManager:Scheduled", () => new IdfObject("AvailabilityManager:Scheduled",false,IdfObjectFormat.NotSpecified,false,2,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SystemAvailabilityManagers"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,2 ) },
            {"AvailabilityManager:ScheduledOn", () => new IdfObject("AvailabilityManager:ScheduledOn",false,IdfObjectFormat.NotSpecified,false,2,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SystemAvailabilityManagers"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,2 ) },
            {"AvailabilityManager:ScheduledOff", () => new IdfObject("AvailabilityManager:ScheduledOff",false,IdfObjectFormat.NotSpecified,false,2,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SystemAvailabilityManagers"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,2 ) },
            {"AvailabilityManager:OptimumStart", () => new IdfObject("AvailabilityManager:OptimumStart",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SystemAvailabilityManagers"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Applicability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"ControlZone",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"StayOff","ControlZone","MaximumofZoneList"},"Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneListNames"}),new IdfField(false,"hr",0,0,"6",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Value for Optimum Start Time",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"AdaptiveASHRAE",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ConstantTemperatureGradient","AdaptiveTemperatureGradient","AdaptiveASHRAE","ConstantStartTime"},"Control Algorithm",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC/hr",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Constant Temperature Gradient during Cooling",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC/hr",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Constant Temperature Gradient during Heating",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC/hr",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Initial Temperature Gradient during Cooling",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC/hr",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Initial Temperature Gradient during Heating",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"hr",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Constant Start Time",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"days",2,5,"2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Previous Days",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,14 ) },
            {"AvailabilityManager:NightCycle", () => new IdfObject("AvailabilityManager:NightCycle",false,IdfObjectFormat.NotSpecified,false,6,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SystemAvailabilityManagers"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Applicability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"StayOff",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"StayOff","CycleOnAny","CycleOnControlZone","CycleOnAnyZoneFansOnly","CycleOnAnyCoolingOrHeatingZone","CycleOnAnyCoolingZone","CycleOnAnyHeatingZone","CycleOnAnyHeatingZoneFansOnly"},"Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermostat Tolerance",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"FixedRunTime",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"FixedRunTime","Thermostat","ThermostatWithMinimumRunTime"},"Cycling Run Time Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"s",0,0,"3600.",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cycling Run Time",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Zone or Zone List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneAndZoneListNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Control Zone or Zone List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneAndZoneListNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Control Zone or Zone List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneAndZoneListNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Zone Fans Only Zone or Zone List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneAndZoneListNames"})},false,11 ) },
            {"AvailabilityManager:DifferentialThermostat", () => new IdfObject("AvailabilityManager:DifferentialThermostat",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SystemAvailabilityManagers"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hot Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cold Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Difference On Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Difference Off Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"AvailabilityManager:HighTemperatureTurnOff", () => new IdfObject("AvailabilityManager:HighTemperatureTurnOff",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SystemAvailabilityManagers"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sensor Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,3 ) },
            {"AvailabilityManager:HighTemperatureTurnOn", () => new IdfObject("AvailabilityManager:HighTemperatureTurnOn",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SystemAvailabilityManagers"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sensor Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,3 ) },
            {"AvailabilityManager:LowTemperatureTurnOff", () => new IdfObject("AvailabilityManager:LowTemperatureTurnOff",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SystemAvailabilityManagers"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sensor Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Applicability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,4 ) },
            {"AvailabilityManager:LowTemperatureTurnOn", () => new IdfObject("AvailabilityManager:LowTemperatureTurnOn",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SystemAvailabilityManagers"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sensor Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,3 ) },
            {"AvailabilityManager:NightVentilation", () => new IdfObject("AvailabilityManager:NightVentilation",false,IdfObjectFormat.NotSpecified,false,7,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SystemAvailabilityManagers"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Applicability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ventilation Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"deltaC",0,0,"2.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ventilation Temperature Difference",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"15.",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ventilation Temperature Low Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Night Venting Flow Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"})},false,8 ) },
            {"AvailabilityManager:HybridVentilation", () => new IdfObject("AvailabilityManager:HybridVentilation",false,IdfObjectFormat.NotSpecified,false,13,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SystemAvailabilityManagers"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"HVAC Air Loop Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AirPrimaryLoops","HVACTemplateSystems"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ventilation Control Mode Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"Yes",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Use Weather File Rain Indicators",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m/s",0,40,"40.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Wind Speed",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",-100,100,"-100",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",-100,100,"100",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg",0,300000,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Enthalpy",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/kg",0,300000,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Enthalpy",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",-100,100,"-100",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Dewpoint",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",-100,100,"100",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Outdoor Dewpoint",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outdoor Ventilation Air Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Opening Factor Function of Wind Speed Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"AirflowNetwork Control Type Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Simple Airflow Control Type Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"ZoneVentilation Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"VentilationNames"}),new IdfField(false,"minutes",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum HVAC Operation Time",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"minutes",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Ventilation Time",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,19 ) },
            {"AvailabilityManagerAssignmentList", () => new IdfObject("AvailabilityManagerAssignmentList",false,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"SystemAvailabilityManagerLists"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"AvailabilityManager:Scheduled","AvailabilityManager:ScheduledOn","AvailabilityManager:ScheduledOff","AvailabilityManager:NightCycle","AvailabilityManager:DifferentialThermostat","AvailabilityManager:HighTemperatureTurnOff","AvailabilityManager:HighTemperatureTurnOn","AvailabilityManager:LowTemperatureTurnOff","AvailabilityManager:LowTemperatureTurnOn","AvailabilityManager:NightVentilation","AvailabilityManager:OptimumStart"},"Availability Manager 1 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Manager 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SystemAvailabilityManagers"})},true,13 ) },
            {"SetpointManager:Scheduled", () => new IdfObject("SetpointManager:Scheduled",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Temperature","MaximumTemperature","MinimumTemperature","HumidityRatio","MaximumHumidityRatio","MinimumHumidityRatio","MassFlowRate","MaximumMassFlowRate","MinimumMassFlowRate"},"Control Variable",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint Node or NodeList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,4 ) },
            {"SetpointManager:Scheduled:DualSetpoint", () => new IdfObject("SetpointManager:Scheduled:DualSetpoint",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Temperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Temperature"},"Control Variable",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"High Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint Node or NodeList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"SetpointManager:OutdoorAirReset", () => new IdfObject("SetpointManager:OutdoorAirReset",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Temperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Temperature","MaximumTemperature","MinimumTemperature"},"Control Variable",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint at Outdoor Low Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Low Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint at Outdoor High Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor High Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint Node or NodeList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint at Outdoor Low Temperature 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Low Temperature 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint at Outdoor High Temperature 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor High Temperature 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,12 ) },
            {"SetpointManager:SingleZone:Reheat", () => new IdfObject("SetpointManager:SingleZone:Reheat",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Temperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Temperature"},"Control Variable",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"-99",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"99",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint Node or NodeList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,8 ) },
            {"SetpointManager:SingleZone:Heating", () => new IdfObject("SetpointManager:SingleZone:Heating",false,IdfObjectFormat.NotSpecified,false,8,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Temperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Temperature"},"Control Variable",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"-99",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"99",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint Node or NodeList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,8 ) },
            {"SetpointManager:SingleZone:Cooling", () => new IdfObject("SetpointManager:SingleZone:Cooling",false,IdfObjectFormat.NotSpecified,false,8,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Temperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Temperature"},"Control Variable",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"-99",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"99",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Supply Air Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint Node or NodeList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,8 ) },
            {"SetpointManager:SingleZone:Humidity:Minimum", () => new IdfObject("SetpointManager:SingleZone:Humidity:Minimum",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint Node or NodeList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Zone Air Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,3 ) },
            {"SetpointManager:SingleZone:Humidity:Maximum", () => new IdfObject("SetpointManager:SingleZone:Humidity:Maximum",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint Node or NodeList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Zone Air Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,3 ) },
            {"SetpointManager:MixedAir", () => new IdfObject("SetpointManager:MixedAir",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Temperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Temperature"},"Control Variable",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Setpoint Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint Node or NodeList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Coil Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling coil Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"7.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Temperature at Cooling Coil Outlet Node",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,9 ) },
            {"SetpointManager:OutdoorAirPretreat", () => new IdfObject("SetpointManager:OutdoorAirPretreat",false,IdfObjectFormat.NotSpecified,false,11,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Temperature","HumidityRatio","MaximumHumidityRatio","MinimumHumidityRatio"},"Control Variable",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"-99",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Setpoint Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"99",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Setpoint Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kgWater/kgDryAir",0,1,"0.00001",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Setpoint Humidity Ratio",IdfFieldMinMaxType.None,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kgWater/kgDryAir",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Setpoint Humidity Ratio",IdfFieldMinMaxType.None,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Setpoint Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mixed Air Stream Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Stream Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Air Stream Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint Node or NodeList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,11 ) },
            {"SetpointManager:Warmest", () => new IdfObject("SetpointManager:Warmest",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Temperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Temperature"},"Control Variable",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"HVAC Air Loop Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AirPrimaryLoops"}),new IdfField(false,"C",0,0,"12.",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Setpoint Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"18.",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Setpoint Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"MaximumTemperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"MaximumTemperature"},"Strategy",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint Node or NodeList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,7 ) },
            {"SetpointManager:Coldest", () => new IdfObject("SetpointManager:Coldest",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Temperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Temperature"},"Control Variable",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"HVAC Air Loop Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AirPrimaryLoops"}),new IdfField(false,"C",0,0,"20.",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Setpoint Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"50.",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Setpoint Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"MinimumTemperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"MinimumTemperature"},"Strategy",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint Node or NodeList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,7 ) },
            {"SetpointManager:ReturnAirBypassFlow", () => new IdfObject("SetpointManager:ReturnAirBypassFlow",false,IdfObjectFormat.NotSpecified,false,4,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Flow",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Flow"},"Control Variable",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"HVAC Air Loop Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AirPrimaryLoops"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,4 ) },
            {"SetpointManager:WarmestTemperatureFlow", () => new IdfObject("SetpointManager:WarmestTemperatureFlow",false,IdfObjectFormat.NotSpecified,false,8,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Temperature"},"Control Variable",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"HVAC Air Loop Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AirPrimaryLoops"}),new IdfField(false,"C",0,0,"12.",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Setpoint Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"18.",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Setpoint Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"TemperatureFirst",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"TemperatureFirst","FlowFirst"},"Strategy",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint Node or NodeList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Turndown Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,8 ) },
            {"SetpointManager:MultiZone:Heating:Average", () => new IdfObject("SetpointManager:MultiZone:Heating:Average",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"HVAC Air Loop Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AirPrimaryLoops"}),new IdfField(false,"C",0,0,"20.",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Setpoint Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"50.",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Setpoint Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint Node or NodeList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"SetpointManager:MultiZone:Cooling:Average", () => new IdfObject("SetpointManager:MultiZone:Cooling:Average",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"HVAC Air Loop Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AirPrimaryLoops"}),new IdfField(false,"C",0,0,"12.",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Setpoint Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"18.",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Setpoint Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint Node or NodeList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"SetpointManager:MultiZone:MinimumHumidity:Average", () => new IdfObject("SetpointManager:MultiZone:MinimumHumidity:Average",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"HVAC Air Loop Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AirPrimaryLoops"}),new IdfField(false,"kgWater/kgDryAir",0,0,"0.005",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Setpoint Humidity Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kgWater/kgDryAir",0,0,"0.012",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Setpoint Humidity Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint Node or NodeList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"SetpointManager:MultiZone:MaximumHumidity:Average", () => new IdfObject("SetpointManager:MultiZone:MaximumHumidity:Average",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"HVAC Air Loop Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AirPrimaryLoops"}),new IdfField(false,"kgWater/kgDryAir",0,0,"0.008",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Setpoint Humidity Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kgWater/kgDryAir",0,0,"0.015",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Setpoint Humidity Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint Node or NodeList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"SetpointManager:MultiZone:Humidity:Minimum", () => new IdfObject("SetpointManager:MultiZone:Humidity:Minimum",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"HVAC Air Loop Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AirPrimaryLoops"}),new IdfField(false,"kgWater/kgDryAir",0,0,"0.005",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Setpoint Humidity Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kgWater/kgDryAir",0,0,"0.012",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Setpoint Humidity Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint Node or NodeList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"SetpointManager:MultiZone:Humidity:Maximum", () => new IdfObject("SetpointManager:MultiZone:Humidity:Maximum",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"HVAC Air Loop Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AirPrimaryLoops"}),new IdfField(false,"kgWater/kgDryAir",0,0,"0.008",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Setpoint Humidity Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kgWater/kgDryAir",0,0,"0.015",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Setpoint Humidity Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint Node or NodeList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"SetpointManager:FollowOutdoorAirTemperature", () => new IdfObject("SetpointManager:FollowOutdoorAirTemperature",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Temperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Temperature","MinimumTemperature","MaximumTemperature"},"Control Variable",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"OutdoorAirWetBulb",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"OutdoorAirWetBulb","OutdoorAirDryBulb"},"Reference Temperature Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Offset Temperature Difference",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Setpoint Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Setpoint Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint Node or NodeList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,7 ) },
            {"SetpointManager:FollowSystemNodeTemperature", () => new IdfObject("SetpointManager:FollowSystemNodeTemperature",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Temperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Temperature","MinimumTemperature","MaximumTemperature"},"Control Variable",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"NodeDryBulb",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"NodeWetBulb","NodeDryBulb"},"Reference Temperature Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Offset Temperature Difference",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Limit Setpoint Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Limit Setpoint Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint Node or NodeList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,8 ) },
            {"SetpointManager:FollowGroundTemperature", () => new IdfObject("SetpointManager:FollowGroundTemperature",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Temperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Temperature","MinimumTemperature","MaximumTemperature"},"Control Variable",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Site:GroundTemperature:BuildingSurface","Site:GroundTemperature:Shallow","Site:GroundTemperature:Deep","Site:GroundTemperature:FCfactorMethod"},"Reference Ground Temperature Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Offset Temperature Difference",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Setpoint Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Setpoint Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint Node or NodeList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,7 ) },
            {"SetpointManager:CondenserEnteringReset", () => new IdfObject("SetpointManager:CondenserEnteringReset",false,IdfObjectFormat.NotSpecified,false,10,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Temperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Temperature"},"Control Variable",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Default Condenser Entering Water Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Design Wetbulb Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"QuadvariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Outside Air Wetbulb Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"QuadvariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Optimized Cond Entering Water Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"QuadvariateFunctions"}),new IdfField(false,"deltaC",0,0,"11.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Lift",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"32",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Condenser Entering Water Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"25.56",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Tower Design Inlet Air Wet-Bulb Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint Node or NodeList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,10 ) },
            {"SetpointManager:CondenserEnteringReset:Ideal", () => new IdfObject("SetpointManager:CondenserEnteringReset:Ideal",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Temperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Temperature"},"Control Variable",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"11.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Lift",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"32",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Condenser Entering Water Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint Node or NodeList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"SetpointManager:SingleZone:OneStageCooling", () => new IdfObject("SetpointManager:SingleZone:OneStageCooling",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"-99",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Stage On Supply Air Setpoint Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"99",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Stage Off Supply Air Setpoint Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint Node or NodeList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"SetpointManager:SingleZone:OneStageHeating", () => new IdfObject("SetpointManager:SingleZone:OneStageHeating",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"99",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Stage On Supply Air Setpoint Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"-99",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Stage Off Supply Air Setpoint Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Control Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Setpoint Node or NodeList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"SetpointManager:ReturnTemperature:ChilledWater", () => new IdfObject("SetpointManager:ReturnTemperature:ChilledWater",false,IdfObjectFormat.NotSpecified,false,7,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plant Loop Supply Outlet Node",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plant Loop Supply Inlet Node",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Supply Temperature Setpoint",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"10",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Supply Temperature Setpoint",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Constant","Scheduled","ReturnTemperatureSetpoint"},"Return Temperature Setpoint Input Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"13",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Temperature Setpoint Constant Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Temperature Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,8 ) },
            {"SetpointManager:ReturnTemperature:HotWater", () => new IdfObject("SetpointManager:ReturnTemperature:HotWater",false,IdfObjectFormat.NotSpecified,false,7,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plant Loop Supply Outlet Node",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Plant Loop Supply Inlet Node",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"77",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Supply Temperature Setpoint",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"82",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Supply Temperature Setpoint",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Constant","Scheduled","ReturnTemperatureSetpoint"},"Return Temperature Setpoint Input Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"71",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Temperature Setpoint Constant Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Return Temperature Setpoint Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,8 ) },
            {"Refrigeration:Case", () => new IdfObject("Refrigeration:Case",false,IdfObjectFormat.NotSpecified,false,28,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"RefrigerationCaseAndWalkInAndListNames","RefrigerationCaseAndWalkInNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"C",0,0,"23.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Ambient Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent",0,100,"55.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Ambient Relative Humidity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m",0,0,"1900",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Total Cooling Capacity per Unit Length",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.3",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Latent Heat Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.85",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Runtime Fraction",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"3.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Case Length",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,20,"1.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Case Operating Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"CaseTemperatureMethod",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"CaseTemperatureMethod","RelativeHumidityMethod","DewpointMethod"},"Latent Case Credit Curve Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Latent Case Credit Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W/m",0,0,"75.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Standard Case Fan Power per Unit Length",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m",0,0,"75.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Operating Case Fan Power per Unit Length",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m",0,0,"90.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Standard Case Lighting Power per Unit Length",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Installed Case Lighting Power per Unit Length",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Case Lighting Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Lighting Energy to Case",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Case Anti-Sweat Heater Power per Unit Length",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m",0,0,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Anti-Sweat Heater Power per Unit Length",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","Constant","Linear","DewpointMethod","HeatBalanceMethod"},"Anti-Sweat Heater Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent",0,0,"-10.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidity at Zero Anti-Sweat Heater Energy",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"1.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Case Height",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Anti-Sweat Heater Energy to Case",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Case Defrost Power per Unit Length",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"OffCycle",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","OffCycle","HotGas","Electric","HotFluid","HotGasWithTemperatureTermination","ElectricWithTemperatureTermination","HotFluidWithTemperatureTermination"},"Case Defrost Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Case Defrost Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Case Defrost Drip-Down Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","CaseTemperatureMethod","RelativeHumidityMethod","DewpointMethod"},"Defrost Energy Correction Curve Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Defrost Energy Correction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Under Case HVAC Return Air Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Refrigerated Case Restocking Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Case Credit Fraction Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"C",-70,40,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Evaporator Temperature or Brine Inlet Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/m",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Average Refrigerant Charge Inventory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Under Case HVAC Return Air Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,36 ) },
            {"Refrigeration:CompressorRack", () => new IdfObject("Refrigeration:CompressorRack",false,IdfObjectFormat.NotSpecified,false,25,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"DesuperHeatingCoilSources","validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,"Outdoors",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Outdoors","Zone"},"Heat Rejection Location",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"2.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Compressor Rack COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compressor Rack COP Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W",0,0,"250.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Condenser Fan Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Fan Power Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,"AirCooled",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"AirCooled","EvaporativelyCooled","WaterCooled"},"Condenser Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water-Cooled Condenser Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water-Cooled Condenser Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"VariableFlow",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"VariableFlow","ConstantFlow"},"Water-Cooled Loop Flow Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water-Cooled Condenser Outlet Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water-Cooled Condenser Design Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water-Cooled Condenser Maximum Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",10,60,"55.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water-Cooled Condenser Maximum Water Outlet Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",10,30,"10.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water-Cooled Condenser Minimum Water Inlet Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporative Condenser Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"dimensionless",0,1,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporative Condenser Effectiveness",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"Autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporative Condenser Air Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,"200.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",2,0,"2.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Setpoint Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"1000.0",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Evaporative Condenser Water Pump Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporative Water Supply Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Refrigeration Case Name or WalkIn Name or CaseAndWalkInList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"RefrigerationCaseAndWalkInAndListNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Rejection Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"})},false,26 ) },
            {"Refrigeration:CaseAndWalkInList", () => new IdfObject("Refrigeration:CaseAndWalkInList",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"RefrigerationCaseAndWalkInAndListNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Case or WalkIn 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"RefrigerationCaseAndWalkInNames"})},true,41 ) },
            {"Refrigeration:Condenser:AirCooled", () => new IdfObject("Refrigeration:Condenser:AirCooled",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"RefrigerationAllTypesCondenserNames","DesuperHeatingCoilSources"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Effective Total Heat Rejection Rate Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"deltaC",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Subcooling Temperature Difference",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Fixed",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fixed","FixedLinear","VariableSpeed","TwoSpeed"},"Condenser Fan Speed Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"250.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Fan Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Fan Air Flow Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name or Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Refrigerant Operating Charge Inventory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condensate Receiver Refrigerant Inventory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condensate Piping Refrigerant Inventory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,11 ) },
            {"Refrigeration:Condenser:EvaporativeCooled", () => new IdfObject("Refrigeration:Condenser:EvaporativeCooled",false,IdfObjectFormat.NotSpecified,false,10,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"RefrigerationAllTypesCondenserNames","DesuperHeatingCoilSources"},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Effective Total Heat Rejection Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Subcooling Temperature Difference",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Fixed",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fixed","FixedLinear","VariableSpeed","TwoSpeed"},"Fan Speed Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Fan Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Fan Air Flow Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,20,"6.63",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Approach Temperature Constant Term",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,20,"0.468",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Approach Temperature Coefficient 2",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,30,"17.93",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Approach Temperature Coefficient 3",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",-20,20,"-0.322",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Approach Temperature Coefficient 4",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"0.50",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Capacity Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"5.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Capacity Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"autocalculate",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Air Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,"200.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",2,0,"2.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Basin Heater Setpoint Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"1000.0",true,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Water Pump Power",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporative Water Supply Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporative Condenser Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Refrigerant Operating Charge Inventory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condensate Receiver Refrigerant Inventory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condensate Piping Refrigerant Inventory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,23 ) },
            {"Refrigeration:Condenser:WaterCooled", () => new IdfObject("Refrigeration:Condenser:WaterCooled",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"RefrigerationAllTypesCondenserNames","DesuperHeatingCoilSources","validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Effective Total Heat Rejection Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Condensing Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Subcooling Temperature Difference",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Water Inlet Temperature",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"VariableFlow",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"VariableFlow","ConstantFlow"},"Water-Cooled Loop Flow Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Outlet Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Design Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Maximum Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",10,60,"55.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Maximum Water Outlet Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",10,30,"10.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Minimum Water Inlet Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Refrigerant Operating Charge Inventory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condensate Receiver Refrigerant Inventory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condensate Piping Refrigerant Inventory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,17 ) },
            {"Refrigeration:Condenser:Cascade", () => new IdfObject("Refrigeration:Condenser:Cascade",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"RefrigerationAllTypesCondenserNames","RefrigerationCascadeCondenserAndSecondarySystemNames","RefrigerationSecondarySystemAndCascadeCondenserAndTransferLoadListNames"},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Condensing Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"3.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Approach Temperature Difference",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Effective Total Heat Rejection Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Fixed",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fixed","Float"},"Condensing Temperature Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condenser Refrigerant Operating Charge Inventory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condensate Receiver Refrigerant Inventory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Condensate Piping Refrigerant Inventory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,8 ) },
            {"Refrigeration:GasCooler:AirCooled", () => new IdfObject("Refrigeration:GasCooler:AirCooled",false,IdfObjectFormat.NotSpecified,false,4,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"RefrigerationAllTypesGasCoolerNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Total Heat Rejection Rate Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,"Fixed",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fixed","FixedLinear","VariableSpeed","TwoSpeed"},"Gas Cooler Fan Speed Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"5000.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Fan Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Fan Air Flow Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"27.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Transition Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"3.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Transcritical Approach Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,"10.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Subcritical Temperature Difference",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"10.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Condensing Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gas Cooler Refrigerant Operating Charge Inventory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gas Cooler Receiver Refrigerant Inventory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Gas Cooler Outlet Piping Refrigerant Inventory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,14 ) },
            {"Refrigeration:TransferLoadList", () => new IdfObject("Refrigeration:TransferLoadList",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"RefrigerationSecondarySystemAndCascadeCondenserAndTransferLoadListNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cascade Condenser Name or Secondary System 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"RefrigerationCascadeCondenserAndSecondarySystemNames"})},true,10 ) },
            {"Refrigeration:Subcooler", () => new IdfObject("Refrigeration:Subcooler",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"RefrigerationSubcoolerNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"LiquidSuction",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Mechanical","LiquidSuction"},"Subcooler Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Suction Design Subcooling Temperature Difference",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Liquid Inlet Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Vapor Inlet Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Capacity-Providing System",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"RefrigerationSystemNames"}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outlet Control Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,7 ) },
            {"Refrigeration:Compressor", () => new IdfObject("Refrigeration:Compressor",false,IdfObjectFormat.NotSpecified,false,6,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"RefrigerationCompressorAndListNames","RefrigerationCompressorNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Refrigeration Compressor Power Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Refrigeration Compressor Capacity Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Superheat",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Return Gas Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Liquid Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Subcooling",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Subcritical",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Subcritical","Transcritical"},"Mode of Operation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Transcritical Compressor Power Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Transcritical Compressor Capacity Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"})},false,11 ) },
            {"Refrigeration:CompressorList", () => new IdfObject("Refrigeration:CompressorList",false,IdfObjectFormat.NotSpecified,false,2,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"RefrigerationCompressorAndListNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Refrigeration Compressor 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"RefrigerationCompressorNames"})},true,41 ) },
            {"Refrigeration:System", () => new IdfObject("Refrigeration:System",false,IdfObjectFormat.NotSpecified,false,7,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"RefrigerationSystemNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Refrigerated Case or Walkin or CaseAndWalkInList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"RefrigerationCaseAndWalkInAndListNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Refrigeration Transfer Load or TransferLoad List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"RefrigerationSecondarySystemAndCascadeCondenserAndTransferLoadListNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Refrigeration Condenser Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"RefrigerationAllTypesCondenserNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compressor or CompressorList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"RefrigerationCompressorAndListNames"}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Condensing Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Refrigeration System Working Fluid Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FluidNames"}),new IdfField(false,"",0,0,"ConstantSuctionTemperature",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"FloatSuctionTemperature","ConstantSuctionTemperature"},"Suction Temperature Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Mechanical Subcooler Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"RefrigerationSubcoolerNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Suction Heat Exchanger Subcooler Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"RefrigerationSubcoolerNames"}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sum UA Suction Piping",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Suction Piping Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"1","2"},"Number of Compressor Stages",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","Flash Intercooler","Shell-and-Coil Intercooler"},"Intercooler Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.8",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Shell-and-Coil Intercooler Effectiveness",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"High-Stage Compressor or CompressorList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"RefrigerationCompressorAndListNames"})},false,17 ) },
            {"Refrigeration:TranscriticalSystem", () => new IdfObject("Refrigeration:TranscriticalSystem",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"RefrigerationSystemNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SingleStage","TwoStage"},"System Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Medium Temperature Refrigerated Case or Walkin or CaseAndWalkInList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"RefrigerationCaseAndWalkInAndListNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Temperature Refrigerated Case or Walkin or CaseAndWalkInList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"RefrigerationCaseAndWalkInAndListNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Refrigeration Gas Cooler Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"RefrigerationAllTypesGasCoolerNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"High Pressure Compressor or CompressorList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"RefrigerationCompressorAndListNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Pressure Compressor or CompressorList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"RefrigerationCompressorAndListNames"}),new IdfField(false,"Pa",0,0,"4000000",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Receiver Pressure",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.4",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Subcooler Effectiveness",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Refrigeration System Working Fluid Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FluidNames"}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sum UA Suction Piping for Medium Temperature Loads",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Medium Temperature Suction Piping Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sum UA Suction Piping for Low Temperature Loads",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Low Temperature Suction Piping Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,15 ) },
            {"Refrigeration:SecondarySystem", () => new IdfObject("Refrigeration:SecondarySystem",false,IdfObjectFormat.NotSpecified,false,14,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"RefrigerationCascadeCondenserAndSecondarySystemNames","RefrigerationSecondarySystemAndCascadeCondenserAndTransferLoadListNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Refrigerated Case or Walkin or CaseAndWalkInList Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"RefrigerationCaseAndWalkInAndListNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"FluidAlwaysLiquid","FluidPhaseChange"},"Circulating Fluid Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Circulating Fluid Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FluidAndGlycolNames"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporator Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporator Flow Rate for Secondary Fluid",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporator Evaporating Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporator Approach Temperature Difference",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporator Range Temperature Difference",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Pumps in Loop",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Total Pump Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Total Pump Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Total Pump Head",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",1,0,"2.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"PhaseChange Circulating Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Constant",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Constant","Variable"},"Pump Drive Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Variable Speed Pump Cubic Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"dimensionless",0.5,1,"0.85",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pump Motor Heat to Fluid",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sum UA Distribution Piping",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Distribution Piping Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"W/K",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sum UA Receiver/Separator Shell",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Receiver/Separator Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"kg",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporator Refrigerant Inventory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,23 ) },
            {"Refrigeration:WalkIn", () => new IdfObject("Refrigeration:WalkIn",false,IdfObjectFormat.NotSpecified,false,28,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"RefrigerationCaseAndWalkInNames","RefrigerationCaseAndWalkInAndListNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Coil Cooling Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,20,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Operating Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",-70,40,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Cooling Source Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Total Heating Power",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Power Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"W",0,0,"375.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Cooling Coil Fan Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Circulation Fan Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Total Lighting Power",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Lighting Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"Electric",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HotFluid","Electric","None","OffCycle"},"Defrost Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"TimeSchedule",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"TimeSchedule","TemperatureTermination"},"Defrost Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Defrost Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Defrost Drip-Down Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Defrost Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Termination Defrost Fraction to Ice",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Restocking Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"kg",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Average Refrigerant Charge Inventory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Insulated Floor Surface Area",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2-K",0,0,"0.3154",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Insulated Floor U-Value",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(true,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Total Insulated Surface Area Facing Zone 1",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2-K",0,0,"0.3154",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Insulated Surface U-Value Facing Zone 1",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Area of Glass Reach In Doors Facing Zone 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"1.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Height of Glass Reach In Doors Facing Zone 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2-K",0,0,"1.136",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Glass Reach In Door U Value Facing Zone 1",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Glass Reach In Door Opening Schedule Name Facing Zone 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"m2",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Area of Stocking Doors Facing Zone 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"3.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Height of Stocking Doors Facing Zone 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2-K",0,0,"0.3785",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stocking Door U Value Facing Zone 1",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stocking Door Opening Schedule Name Facing Zone 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"AirCurtain",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","AirCurtain","StripCurtain"},"Stocking Door Opening Protection Type Facing Zone 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,57 ) },
            {"Refrigeration:AirChiller", () => new IdfObject("Refrigeration:AirChiller",false,IdfObjectFormat.NotSpecified,false,23,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"RefrigerationCaseAndWalkInNames","RefrigerationCaseAndWalkInAndListNames","RefrigerationAirChillerNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"UnitLoadFactorSensibleOnly","CapacityTotalSpecificConditions","EuropeanSC1Standard","EuropeanSC1NominalWet","EuropeanSC2Standard","EuropeanSC2NominalWet","EuropeanSC3Standard","FixedLinear","EuropeanSC3NominalWet","EuropeanSC4Standard","EuropeanSC4NominalWet","EuropeanSC5Standard","EuropeanSC5NominalWet"},"Capacity Rating Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Unit Load Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"percent",0,100,"85",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Relative Humidity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",-70,40,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Cooling Source Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"deltaC",0,20,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Temperature Difference DT1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,25,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Temperature Difference Between Inlet Air and Evaporating Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coil Material Correction Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Refrigerant Correction Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"LinearSHR60","QuadraticSHR","European","TabularRHxDT1xTRoom"},"Capacity Correction Curve Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Capacity Correction Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions","TrivariateFunctions"}),new IdfField(false,"dimensionless",0,1.67,"1.48",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"SHR60 Correction Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Total Heating Power",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heating Power Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"Fixed",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fixed","FixedLinear","VariableSpeed","TwoSpeed"},"Fan Speed Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"375.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Fan Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Air Flow",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"0.2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Fan Air Flow Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Electric",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HotFluid","Electric","None","OffCycle"},"Defrost Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"TimeSchedule",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"TimeSchedule","TemperatureTermination"},"Defrost Control Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Defrost Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Defrost Drip-Down Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Defrost Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Termination Defrost Fraction to Ice",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Middle",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Ceiling","Middle","Floor"},"Vertical Location",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Average Refrigerant Charge Inventory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,28 ) },
            {"ZoneHVAC:RefrigerationChillerSet", () => new IdfObject("ZoneHVAC:RefrigerationChillerSet",false,IdfObjectFormat.NotSpecified,false,6,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ZoneEquipmentNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Chiller 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"RefrigerationAirChillerNames"})},true,100 ) },
            {"DemandManagerAssignmentList", () => new IdfObject("DemandManagerAssignmentList",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Meter Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Demand Limit Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Demand Limit Safety Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Billing Period Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Peak Period Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"minutes",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Demand Window Length",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Sequential","All"},"Demand Manager Priority",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"DemandManager:ExteriorLights","DemandManager:Lights","DemandManager:ElectricEquipment","DemandManager:Thermostats","DemandManager:Ventilation"},"DemandManager 1 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"DemandManager 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"DemandManagerNames"})},true,28 ) },
            {"DemandManager:ExteriorLights", () => new IdfObject("DemandManager:ExteriorLights",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"DemandManagerNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Off","Fixed"},"Limit Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"minutes",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Limit Duration",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Limit Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Limit Step Change",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"All","RotateMany","RotateOne"},"Selection Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"minutes",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rotation Duration",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Exterior Lights 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ExteriorLightsNames"})},true,18 ) },
            {"DemandManager:Lights", () => new IdfObject("DemandManager:Lights",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"DemandManagerNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Off","Fixed"},"Limit Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"minutes",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Limit Duration",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Limit Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Limit Step Change",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"All","RotateMany","RotateOne"},"Selection Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"minutes",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rotation Duration",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Lights 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"LightsNames"})},true,18 ) },
            {"DemandManager:ElectricEquipment", () => new IdfObject("DemandManager:ElectricEquipment",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"DemandManagerNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Off","Fixed"},"Limit Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"minutes",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Limit Duration",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Limit Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Limit Step Change",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"All","RotateMany","RotateOne"},"Selection Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"minutes",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rotation Duration",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Electric Equipment 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ElectricEquipmentNames"})},true,18 ) },
            {"DemandManager:Thermostats", () => new IdfObject("DemandManager:Thermostats",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"DemandManagerNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Off","Fixed"},"Reset Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"minutes",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Reset Duration",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Heating Setpoint Reset",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Cooling Setpoint Reset",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reset Step Change",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"All","RotateMany","RotateOne"},"Selection Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"minutes",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rotation Duration",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermostat 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneControlThermostaticNames"})},true,19 ) },
            {"DemandManager:Ventilation", () => new IdfObject("DemandManager:Ventilation",false,IdfObjectFormat.NotSpecified,false,10,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"DemandManagerNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Off","FixedRate","ReductionRatio"},"Limit Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"minutes",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Limit Duration",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fixed Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reduction Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Limit Step Change",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"All",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"All","RotateMany","RotateOne"},"Selection Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"minutes",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rotation Duration",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Controller Outdoor Air 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"OAControllerNames"})},true,19 ) },
            {"Generator:InternalCombustionEngine", () => new IdfObject("Generator:InternalCombustionEngine",false,IdfObjectFormat.NotSpecified,false,20,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"GeneratorNames","validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Power Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Electric Circuit Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Part Load Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Part Load Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Optimum Part Load Ratio",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Shaft Power Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Jacket Heat Recovery Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Lube Heat Recovery Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Total Exhaust Energy Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Exhaust Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 1 of U-Factor Times Area Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,2,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 2 of U-Factor Times Area Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"(kg/s)/W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Exhaust Flow per Unit of Power Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Minimum Exhaust Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kJ/kg",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fuel Higher Heating Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Heat Recovery Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Diesel",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"NaturalGas","PropaneGas","Diesel","Gasoline","FuelOil#1","FuelOil#2","OtherFuel1","OtherFuel2"},"Fuel Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,100,"80.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Maximum Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,21 ) },
            {"Generator:CombustionTurbine", () => new IdfObject("Generator:CombustionTurbine",false,IdfObjectFormat.NotSpecified,false,22,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"GeneratorNames","validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Power Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Electric Circuit Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Part Load Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Part Load Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Optimum Part Load Ratio",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Part Load Based Fuel Input Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Based Fuel Input Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Exhaust Flow Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Part Load Based Exhaust Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Based Exhaust Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Lube Energy Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 1 of U-Factor Times Area Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,2,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient 2 of U-Factor Times Area Curve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"(kg/s)/W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Exhaust Flow per Unit of Power Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Minimum Exhaust Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Air Inlet Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kJ/kg",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fuel Higher Heating Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Heat Recovery Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"NaturalGas",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"NaturalGas","PropaneGas","Diesel","Gasoline","FuelOil#1","FuelOil#2","OtherFuel1","OtherFuel2"},"Fuel Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,100,"80.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Maximum Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outdoor Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,24 ) },
            {"Generator:MicroTurbine", () => new IdfObject("Generator:MicroTurbine",false,IdfObjectFormat.NotSpecified,false,11,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"GeneratorNames","MicroTurbineGeneratorNames","validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(true,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Electrical Power Output",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Full Load Electrical Power Output",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Full Load Electrical Power Output",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Electrical Efficiency Using Lower Heating Value",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"15.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Combustion Air Inlet Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kgWater/kgDryAir",0,0,"0.00638",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Combustion Air Inlet Humidity Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",-300,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Elevation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Electrical Power Function of Temperature and Elevation Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Electrical Efficiency Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Electrical Efficiency Function of Part Load Ratio Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,"NaturalGas",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"NaturalGas","PropaneGas"},"Fuel Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kJ/kg",0,0,"50000",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fuel Higher Heating Value",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kJ/kg",0,0,"45450",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fuel Lower Heating Value",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Standby Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ancillary Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ancillary Power Function of Fuel Input Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Thermal Efficiency Using Lower Heat Value",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Inlet Water Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"PlantControl",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"PlantControl","InternalControl"},"Heat Recovery Water Flow Operating Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Heat Recovery Water Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Water Flow Rate Function of Temperature and Power Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Efficiency Function of Temperature and Elevation Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Rate Function of Part Load Ratio Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Rate Function of Inlet Water Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Rate Function of Water Flow Rate Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"m3/s",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Heat Recovery Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Heat Recovery Water Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Heat Recovery Water Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Combustion Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Combustion Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Exhaust Air Mass Flow Rate",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Exhaust Air Flow Rate Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Exhaust Air Flow Rate Function of Part Load Ratio Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Exhaust Air Outlet Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Exhaust Air Temperature Function of Temperature Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Exhaust Air Temperature Function of Part Load Ratio Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"})},false,39 ) },
            {"Generator:Photovoltaic", () => new IdfObject("Generator:Photovoltaic",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"GeneratorNames","PVGeneratorNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllShadingAndHTSurfNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"PhotovoltaicPerformance:Simple","PhotovoltaicPerformance:EquivalentOne-Diode","PhotovoltaicPerformance:Sandia"},"Photovoltaic Performance Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Module Performance Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"PVModules"}),new IdfField(false,"",0,0,"Decoupled",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Decoupled","DecoupledUllebergDynamic","IntegratedSurfaceOutsideFace","IntegratedTranspiredCollector","IntegratedExteriorVentedCavity","PhotovoltaicThermalSolarCollector"},"Heat Transfer Integration Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",1,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Series Strings in Parallel",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",1,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Modules in Series",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,7 ) },
            {"PhotovoltaicPerformance:Simple", () => new IdfObject("PhotovoltaicPerformance:Simple",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"PVModules"},new List<string>{},new List<string>{}),new IdfField(true,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Surface Area with Active Solar Cells",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fixed","Scheduled"},"Conversion Efficiency Input Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Value for Cell Efficiency if Fixed",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Efficiency Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,5 ) },
            {"PhotovoltaicPerformance:EquivalentOne-Diode", () => new IdfObject("PhotovoltaicPerformance:EquivalentOne-Diode",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"PVModules"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"CrystallineSilicon","AmorphousSilicon"},"Cell type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"36",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Cells in Series",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2",0.1,0,"0.89",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Active Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,1,"0.95",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Transmittance Absorptance Product",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"eV",0,0,"1.12",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Semiconductor Bandgap",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"ohms",0,0,"1000000.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Shunt Resistance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"A",0,0,"6.5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Short Circuit Current",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"V",0,0,"21.6",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Open Circuit Voltage",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"25",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2",0,0,"1000",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Insolation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"A",0,0,"5.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Module Current at Maximum Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"V",0,0,"17",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Module Voltage at Maximum Power",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"A/K",0,0,"0.02",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Coefficient of Short Circuit Current",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"V/K",0,0,"-0.079",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Coefficient of Open Circuit Voltage",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"20",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Operating Cell Temperature Test Ambient Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,"40",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Operating Cell Temperature Test Cell Temperature",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2",0,0,"800",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Operating Cell Temperature Test Insolation",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2-K",0,0,"30",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Module Heat Loss Coefficient",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/m2-K",0,0,"50000",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Total Heat Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,20 ) },
            {"PhotovoltaicPerformance:Sandia", () => new IdfObject("PhotovoltaicPerformance:Sandia",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"PVModules"},new List<string>{},new List<string>{}),new IdfField(false,"m2",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Active Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",1,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Cells in Series",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",1,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Cells in Parallel",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"A",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Short Circuit Current",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"V",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Open Circuit Voltage",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"A",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Current at Maximum Power Point",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"V",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Voltage at Maximum Power Point",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"1/K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sandia Database Parameter aIsc",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"1/K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sandia Database Parameter aImp",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sandia Database Parameter c0",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sandia Database Parameter c1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"V/K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sandia Database Parameter BVoc0",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"V/K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sandia Database Parameter mBVoc",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"V/K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sandia Database Parameter BVmp0",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"V/K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sandia Database Parameter mBVmp",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Diode Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sandia Database Parameter c2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sandia Database Parameter c3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sandia Database Parameter a0",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sandia Database Parameter a1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sandia Database Parameter a2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sandia Database Parameter a3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sandia Database Parameter a4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sandia Database Parameter b0",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sandia Database Parameter b1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sandia Database Parameter b2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sandia Database Parameter b3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sandia Database Parameter b4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sandia Database Parameter b5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sandia Database Parameter Delta(Tc)",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sandia Database Parameter fd",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sandia Database Parameter a",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sandia Database Parameter b",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sandia Database Parameter c4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sandia Database Parameter c5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sandia Database Parameter Ix0",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sandia Database Parameter Ixx0",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sandia Database Parameter c6",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sandia Database Parameter c7",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,40 ) },
            {"Generator:PVWatts", () => new IdfObject("Generator:PVWatts",false,IdfObjectFormat.NotSpecified,false,9,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"GeneratorNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"5"},"PVWatts Version",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"DC System Capacity",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Standard","Premium","ThinFilm"},"Module Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"FixedOpenRack","FixedRoofMounted","OneAxis","OneAxisBacktracking","TwoAxis"},"Array Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.14",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"System Losses",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"TiltAzimuth",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"TiltAzimuth","Surface"},"Array Geometry Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,90,"20",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tilt Angle",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deg",0,360,"180",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Azimuth Angle",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Surface Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllShadingAndHTSurfNames"}),new IdfField(false,"",0,1,"0.4",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ground Coverage Ratio",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,11 ) },
            {"ElectricLoadCenter:Inverter:PVWatts", () => new IdfObject("ElectricLoadCenter:Inverter:PVWatts",false,IdfObjectFormat.NotSpecified,false,1,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"InverterList"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.10",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"DC to AC Size Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.96",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inverter Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,3 ) },
            {"Generator:FuelCell", () => new IdfObject("Generator:FuelCell",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"GeneratorNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Power Module Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FCPMNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Supply Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FCAirSupNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fuel Supply Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"GenFuelSupNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Supply Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FCWaterSupNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Auxiliary Heater Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FCAuxHeatNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Exchanger Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FCExhaustHXNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Electrical Storage Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FCStorageNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inverter Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FCInverterNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stack Cooler Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FCStackCoolerNames"})},false,10 ) },
            {"Generator:FuelCell:PowerModule", () => new IdfObject("Generator:FuelCell:PowerModule",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"FCPMNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Annex42","Normalized"},"Efficiency Curve Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Efficiency Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Efficiency",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Electrical Power",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Stops at Start of Simulation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cycling Performance Degradation Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"hr",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Run Hours at Beginning of Simulation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Accumulated Run Time Degradation Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"hr",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Run Time Degradation Initiation Time Threshold",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Power Up Transient Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Power Down Transient Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Start Up Time",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kmol",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Start Up Fuel",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Start Up Electricity Consumption",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Start Up Electricity Produced",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Shut Down Time",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kmol",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Shut Down Fuel",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Shut Down Electricity Consumption",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ancillary Electricity Constant Term",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ancillary Electricity Linear Term",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ConstantRate","UAForProcessGasTemperature","QuadraticFunctionOfFuelRate"},"Skin Loss Calculation Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Skin Loss Radiative Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Constant Skin Loss Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Skin Loss U-Factor Times Area Term",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Skin Loss Quadratic Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"kmol/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dilution Air Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stack Heat loss to Dilution Air",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dilution Inlet Air Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Dilution Outlet Air Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Operating Point",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Operating Point",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,33 ) },
            {"Generator:FuelCell:AirSupply", () => new IdfObject("Generator:FuelCell:AirSupply",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"FCAirSupNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Blower Power Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Blower Heat Loss Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"AirRatiobyStoics","QuadraticFunctionofElectricPower","QuadraticFunctionofFuelRate"},"Air Supply Rate Calculation Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stoichiometric Ratio",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Rate Function of Electric Power Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Rate Air Temperature Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Rate Function of Fuel Rate Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"NoRecovery","RecoverBurnerInverterStorage","RecoverAuxiliaryBurner","RecoverInverterandStorage","RecoverInverter","RecoverElectricalStorage"},"Air Intake Heat Recovery Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"AmbientAir","UserDefinedConstituents"},"Air Supply Constituent Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,5,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of UserDefined Constituents",IdfFieldMinMaxType.None,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"CarbonDioxide","Nitrogen","Oxygen","Water","Argon"},"Constituent 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Molar Fraction 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},true,22 ) },
            {"Generator:FuelCell:WaterSupply", () => new IdfObject("Generator:FuelCell:WaterSupply",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"FCWaterSupNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reformer Water Flow Rate Function of Fuel Rate Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reformer Water Pump Power Function of Fuel Rate Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pump Heat Loss Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"TemperatureFromAirNode","TemperatureFromWaterNode","TemperatureFromSchedule","MainsWaterTemperature"},"Water Temperature Modeling Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Temperature Reference Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,7 ) },
            {"Generator:FuelCell:AuxiliaryHeater", () => new IdfObject("Generator:FuelCell:AuxiliaryHeater",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"FCAuxHeatNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Excess Air Ratio",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ancillary Power Constant Term",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ancillary Power Linear Term",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Skin Loss U-Factor Times Area Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SurroundingZone","AirInletForFuelCell"},"Skin Loss Destination",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name to Receive Skin Losses",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Watts","kmol/s"},"Heating Capacity Units",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Heating Capacity in Watts",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Heating Capacity in Watts",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kmol/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Heating Capacity in Kmol per Second",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kmol/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Heating Capacity in Kmol per Second",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,12 ) },
            {"Generator:FuelCell:ExhaustGasToWaterHeatExchanger", () => new IdfObject("Generator:FuelCell:ExhaustGasToWaterHeatExchanger",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"FCExhaustHXNames","validPlantEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Water Maximum Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Exhaust Outlet Air Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"FixedEffectiveness","EmpiricalUAeff","FundementalUAeff","Condensing"},"Heat Exchanger Calculation Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Method 1 Heat Exchanger Effectiveness",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Method 2 Parameter hxs0",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Method 2 Parameter hxs1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Method 2 Parameter hxs2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Method 2 Parameter hxs3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Method 2 Parameter hxs4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Method 3 h0Gas Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Method 3 NdotGasRef Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Method 3 n Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Method 3 Gas Area",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Method 3 h0 Water Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Method 3 N dot Water ref Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Method 3 m Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Method 3 Water Area",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Method 3 F Adjustment Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Method 4 hxl1 Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Method 4 hxl2 Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Method 4 Condensation Threshold",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,24 ) },
            {"Generator:FuelCell:ElectricalStorage", () => new IdfObject("Generator:FuelCell:ElectricalStorage",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"FCStorageNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SimpleEfficiencyWithConstraints"},"Choice of Model",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Charging Energetic Efficiency",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Discharging Energetic Efficiency",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Simple Maximum Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Simple Maximum Power Draw",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Simple Maximum Power Store",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Initial Charge State",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,8 ) },
            {"Generator:FuelCell:Inverter", () => new IdfObject("Generator:FuelCell:Inverter",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"FCInverterNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Quadratic","Constant"},"Inverter Efficiency Calculation Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inverter Efficiency",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Efficiency Function of DC Power Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"})},false,4 ) },
            {"Generator:FuelCell:StackCooler", () => new IdfObject("Generator:FuelCell:StackCooler",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"FCStackCoolerNames","validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Recovery Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Stack Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Actual Stack Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient r0",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient r1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient r2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient r3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stack Coolant Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stack Cooler U-Factor Times Area Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fs-cogen Adjustment Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stack Cogeneration Exchanger Area",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stack Cogeneration Exchanger Nominal Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stack Cogeneration Exchanger Nominal Heat Transfer Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stack Cogeneration Exchanger Nominal Heat Transfer Coefficient Exponent",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stack Cooler Pump Power",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stack Cooler Pump Heat Loss Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stack Air Cooler Fan Coefficient f0",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stack Air Cooler Fan Coefficient f1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Stack Air Cooler Fan Coefficient f2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,21 ) },
            {"Generator:MicroCHP", () => new IdfObject("Generator:MicroCHP",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"GeneratorNames","validPlantEquipmentNames","validBranchEquipmentNames"},new List<string>{"validPlantEquipmentTypes","validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Performance Parameters Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MicroCHPParametersNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Water Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Water Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Generator Fuel Supply Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"GenFuelSupNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,9 ) },
            {"Generator:MicroCHP:NonNormalizedParameters", () => new IdfObject("Generator:MicroCHP:NonNormalizedParameters",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"MicroCHPParametersNames"},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Electric Power",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Electric Power",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Cooling Water Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Cooling Water Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Electrical Efficiency Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"TrivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermal Efficiency Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"TrivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"PlantControl","InternalControl"},"Cooling Water Flow Rate Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Water Flow Rate Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"BivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Flow Rate Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Net Electrical Power Rate of Change",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/s2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Fuel Flow Rate of Change",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Heat Exchanger U-Factor Times Area Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Skin Loss U-Factor Times Area Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Skin Loss Radiative Fraction",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Aggregated Thermal Mass of Energy Conversion Portion of Generator",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Aggregated Thermal Mass of Heat Recovery Portion of Generator",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Standby Power",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"NominalEngineTemperature","TimeDelay"},"Warm Up Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Warm Up Fuel Flow Rate Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Engine Operating Temperature",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Warm Up Power Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Warm Up Fuel Flow Rate Limit Ratio",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Warm Up Delay Time",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cool Down Power",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cool Down Delay Time",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"MandatoryCoolDown","OptionalCoolDown"},"Restart Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,27 ) },
            {"Generator:FuelSupply", () => new IdfObject("Generator:FuelSupply",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"GenFuelSupNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"TemperatureFromAirNode","Scheduled"},"Fuel Temperature Modeling Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fuel Temperature Reference Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fuel Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compressor Power Multiplier Function of Fuel Rate Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compressor Heat Loss Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"GaseousConstituents","LiquidGeneric"},"Fuel Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kJ/kg",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Generic Fuel Lower Heating Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kJ/kg",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Generic Fuel Higher Heating Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"g/mol",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Generic Fuel Molecular Weight",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Liquid Generic Fuel CO2 Emission Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,12,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Constituents in Gaseous Constituent Fuel Supply",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"CarbonDioxide","Nitrogen","Oxygen","Water","Argon","Hydrogen","Methane","Ethane","Propane","Butane","Pentane","Hexane","Methanol","Ethanol"},"Constituent 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Constituent 1 Molar Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"CarbonDioxide","Nitrogen","Oxygen","Water","Argon","Hydrogen","Methane","Ethane","Propane","Butane","Pentane","Hexane","Methanol","Ethanol"},"Constituent 2 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Constituent 2 Molar Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"CarbonDioxide","Nitrogen","Oxygen","Water","Argon","Hydrogen","Methane","Ethane","Propane","Butane","Pentane","Hexane","Methanol","Ethanol"},"Constituent 3 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Constituent 3 Molar Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"CarbonDioxide","Nitrogen","Oxygen","Water","Argon","Hydrogen","Methane","Ethane","Propane","Butane","Pentane","Hexane","Methanol","Ethanol"},"Constituent 4 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Constituent 4 Molar Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"CarbonDioxide","Nitrogen","Oxygen","Water","Argon","Hydrogen","Methane","Ethane","Propane","Butane","Pentane","Hexane","Methanol","Ethanol"},"Constituent 5 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Constituent 5 Molar Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"CarbonDioxide","Nitrogen","Oxygen","Water","Argon","Hydrogen","Methane","Ethane","Propane","Butane","Pentane","Hexane","Methanol","Ethanol"},"Constituent 6 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Constituent 6 Molar Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Hydrogen","Methane","Ethane","Propane","Butane","Pentane","Hexane","Methanol","Ethanol"},"Constituent 7 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Constituent 7 Molar Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"CarbonDioxide","Nitrogen","Oxygen","Water","Argon","Hydrogen","Methane","Ethane","Propane","Butane","Pentane","Hexane","Methanol","Ethanol"},"Constituent 8 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Constituent 8 Molar Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"CarbonDioxide","Nitrogen","Oxygen","Water","Argon","Hydrogen","Methane","Ethane","Propane","Butane","Pentane","Hexane","Methanol","Ethanol"},"Constituent 9 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Constituent 9 Molar Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"CarbonDioxide","Nitrogen","Oxygen","Water","Argon","Hydrogen","Methane","Ethane","Propane","Butane","Pentane","Hexane","Methanol","Ethanol"},"Constituent 10 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Constituent 10 Molar Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"CarbonDioxide","Nitrogen","Oxygen","Water","Argon","Hydrogen","Methane","Ethane","Propane","Butane","Pentane","Hexane","Methanol","Ethanol"},"Constituent 11 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Constituent 11 Molar Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"CarbonDioxide","Nitrogen","Oxygen","Water","Argon","Hydrogen","Methane","Ethane","Propane","Butane","Pentane","Hexane","Methanol","Ethanol"},"Constituent 12 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Constituent 12 Molar Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,36 ) },
            {"Generator:WindTurbine", () => new IdfObject("Generator:WindTurbine",false,IdfObjectFormat.NotSpecified,false,26,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"GeneratorNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"HorizontalAxisWindTurbine",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"HorizontalAxisWindTurbine","VerticalAxisWindTurbine"},"Rotor Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"VariableSpeedVariablePitch",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"FixedSpeedFixedPitch","FixedSpeedVariablePitch","VariableSpeedFixedPitch","VariableSpeedVariablePitch"},"Power Control",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"rev/min",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Rotor Speed",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rotor Diameter",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Overall Height",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",2,0,"3",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Blades",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Power",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Wind Speed",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cut In Wind Speed",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cut Out Wind Speed",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.835",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction system Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,12,"5.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Tip Speed Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0.59,"0.25",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Power Coefficient",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Annual Local Average Wind Speed",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,"50.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Height for Local Average Wind Speed",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Blade Chord Area",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.9",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Blade Drag Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.05",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Blade Lift Coefficient",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.5176",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Power Coefficient C1",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"116.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Power Coefficient C2",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.4",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Power Coefficient C3",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Power Coefficient C4",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"5.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Power Coefficient C5",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"21.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Power Coefficient C6",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,26 ) },
            {"ElectricLoadCenter:Generators", () => new IdfObject("ElectricLoadCenter:Generators",false,IdfObjectFormat.NotSpecified,false,6,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"GeneratorLists"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Generator 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"GeneratorNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Generator:InternalCombustionEngine","Generator:CombustionTurbine","Generator:Photovoltaic","Generator:PVWatts","Generator:FuelCell","Generator:MicroCHP","Generator:MicroTurbine","Generator:WindTurbine"},"Generator 1 Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Generator 1 Rated Electric Power Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Generator 1 Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Generator 1 Rated Thermal to Electrical Power Ratio",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,151 ) },
            {"ElectricLoadCenter:Inverter:Simple", () => new IdfObject("ElectricLoadCenter:Inverter:Simple",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"InverterList"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Radiative Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inverter Efficiency",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"ElectricLoadCenter:Inverter:FunctionOfPower", () => new IdfObject("ElectricLoadCenter:Inverter:FunctionOfPower",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"InverterList"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Radiative Fraction",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Efficiency Function of Power Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Maximum Continuous Input Power",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Efficiency",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Efficiency",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Power Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Power Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ancillary Power Consumed In Standby",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,11 ) },
            {"ElectricLoadCenter:Inverter:LookUpTable", () => new IdfObject("ElectricLoadCenter:Inverter:LookUpTable",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"InverterList"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Radiative Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Maximum Continuous Output Power",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Night Tare Loss Power",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"V",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Voltage Input",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Efficiency at 10% Power and Nominal Voltage",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Efficiency at 20% Power and Nominal Voltage",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Efficiency at 30% Power and Nominal Voltage",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Efficiency at 50% Power and Nominal Voltage",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Efficiency at 75% Power and Nominal Voltage",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Efficiency at 100% Power and Nominal Voltage",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,13 ) },
            {"ElectricLoadCenter:Storage:Simple", () => new IdfObject("ElectricLoadCenter:Storage:Simple",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ElecStorageList"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Radiative Fraction for Zone Heat Gains",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Energetic Efficiency for Charging",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Discharging Energetic Efficiency",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Storage Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Power for Discharging",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Power for Charging",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Initial State of Charge",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,10 ) },
            {"ElectricLoadCenter:Storage:Battery", () => new IdfObject("ElectricLoadCenter:Storage:Battery",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ElecStorageList"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Radiative Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Battery Modules in Parallel",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,0,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Battery Modules in Series",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Ah",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Module Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Initial Fractional State of Charge",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Available Charge Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"1/hr",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Change Rate from Bound Charge to Available Charge",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"V",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fully Charged Module Open Circuit Voltage",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"V",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fully Discharged Module Open Circuit Voltage",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Voltage Change Curve Name for Charging",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Voltage Change Curve Name for Discharging",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"ohms",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Module Internal Electrical Resistance",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"A",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Module Discharging Current",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"V",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Module Cut-off Voltage",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Module Charge Rate Limit",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Battery Life Calculation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",5,0,"10",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Cycle Bins",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Battery Life Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"})},false,21 ) },
            {"ElectricLoadCenter:Transformer", () => new IdfObject("ElectricLoadCenter:Transformer",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"TransformerNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"PowerInFromGrid",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"PowerInFromGrid","PowerOutToGrid","LoadCenterPowerConditioning"},"Transformer Usage",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,1,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Radiative Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"VA",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Capacity",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"3",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"1","3"},"Phase",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Aluminum",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Copper","Aluminum"},"Conductor Material",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",50,180,"150",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Full Load Temperature Rise",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fraction of Eddy Current Losses",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"RatedLosses",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"RatedLosses","NominalEfficiency"},"Performance Input Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated No Load Loss",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Rated Load Loss",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.98",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nameplate Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.35",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Per Unit Load for Nameplate Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",20,150,"75",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Temperature for Nameplate Efficiency",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Per Unit Load for Maximum Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Yes",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Consider Transformer Loss for Utility Cost",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Meter 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,28 ) },
            {"ElectricLoadCenter:Distribution", () => new IdfObject("ElectricLoadCenter:Distribution",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Generator List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"GeneratorLists"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Baseload","DemandLimit","TrackElectrical","TrackSchedule","TrackMeter","FollowThermal","FollowThermalLimitElectrical"},"Generator Operation Scheme Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Generator Demand Limit Scheme Purchased Electric Demand Limit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Generator Track Schedule Name Scheme Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Generator Track Meter Scheme Meter Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"AlternatingCurrent",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"AlternatingCurrent","AlternatingCurrentWithStorage","DirectCurrentWithInverter","DirectCurrentWithInverterDCStorage","DirectCurrentWithInverterACStorage"},"Electrical Buss Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inverter Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"InverterList"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Electrical Storage Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ElecStorageList"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Transformer Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"TransformerNames"}),new IdfField(false,"",0,0,"TrackFacilityElectricDemandStoreExcessOnSite",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"TrackFacilityElectricDemandStoreExcessOnSite","TrackMeterDemandStoreExcessOnSite","TrackChargeDischargeSchedules","FacilityDemandLeveling"},"Storage Operation Scheme",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Storage Control Track Meter Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Storage Converter Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ConverterList"}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Storage State of Charge Fraction",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Storage State of Charge Fraction",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Storage Control Charge Power",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Storage Charge Power Fraction Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Storage Control Discharge Power",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Storage Discharge Power Fraction Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Storage Control Utility Demand Target",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Storage Control Utility Demand Target Fraction Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,21 ) },
            {"ElectricLoadCenter:Storage:Converter", () => new IdfObject("ElectricLoadCenter:Storage:Converter",false,IdfObjectFormat.NotSpecified,false,4,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ConverterList"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"SimpleFixed",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SimpleFixed","FunctionOfPower"},"Power Conversion Efficiency Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1,"0.95",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Simple Fixed Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Maximum Continuous Input Power",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Efficiency Function of Power Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ancillary Power Consumed In Standby",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Radiative Fraction",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,9 ) },
            {"WaterUse:Equipment", () => new IdfObject("WaterUse:Equipment",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"WaterUseEquipmentNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"General",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End-Use Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Peak Flow Rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Flow Rate Fraction Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Target Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hot Water Supply Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cold Water Supply Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Sensible Fraction Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Latent Fraction Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,10 ) },
            {"WaterUse:Connections", () => new IdfObject("WaterUse:Connections",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"validBranchEquipmentNames"},new List<string>{"validBranchEquipmentTypes"},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outlet Node Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Supply Water Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reclamation Water Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hot Water Supply Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cold Water Supply Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","Ideal","CounterFlow","CrossFlow"},"Drain Water Heat Exchanger Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Plant",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Plant","Equipment","PlantAndEquipment"},"Drain Water Heat Exchanger Destination",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Drain Water Heat Exchanger U-Factor Times Area",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Use Equipment 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterUseEquipmentNames"})},true,20 ) },
            {"WaterUse:Storage", () => new IdfObject("WaterUse:Storage",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"WaterStorageTankNames"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Quality Subcategory",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Initial Volume",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design In Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design Out Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Overflow Destination",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","Mains","GroundwaterWell","OtherTank"},"Type of Supply Controlled by Float Valve",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Float Valve On Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Float Valve Off Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Backup Mains Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Other Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ScheduledTemperature","ThermalModel"},"Water Thermal Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Schedule","Zone","Outdoors"},"Ambient Temperature Indicator",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Ambient Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tank Surface Area",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/m2-K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tank U Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tank Outside Surface Material Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"MaterialName"})},false,20 ) },
            {"WaterUse:Well", () => new IdfObject("WaterUse:Well",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pump Depth",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pump Rated Flow Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pump Rated Head",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pump Rated Power Consumption",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pump Efficiency",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Well Recovery Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Well Storage Volume",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Constant","Scheduled"},"Water Table Depth Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Table Depth",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Table Depth Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,12 ) },
            {"WaterUse:RainCollector", () => new IdfObject("WaterUse:RainCollector",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Storage Tank Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterStorageTankNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Constant","Scheduled"},"Loss Factor Mode",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Collection Loss Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Collection Loss Factor Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Collection Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Collection Surface 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"AllShadingAndHTSurfNames"})},true,16 ) },
            {"FaultModel:TemperatureSensorOffset:OutdoorAir", () => new IdfObject("FaultModel:TemperatureSensorOffset:OutdoorAir",false,IdfObjectFormat.NotSpecified,false,6,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Severity Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Controller:OutdoorAir"},"Controller Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Controller Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"OAControllerNames"}),new IdfField(false,"deltaC",-10,10,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Sensor Offset",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{})},false,6 ) },
            {"FaultModel:HumiditySensorOffset:OutdoorAir", () => new IdfObject("FaultModel:HumiditySensorOffset:OutdoorAir",false,IdfObjectFormat.NotSpecified,false,6,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Severity Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Controller:OutdoorAir"},"Controller Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Controller Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"OAControllerNames"}),new IdfField(false,"kgWater/kgDryAir",-0.02,0.02,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidity Sensor Offset",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{})},false,6 ) },
            {"FaultModel:EnthalpySensorOffset:OutdoorAir", () => new IdfObject("FaultModel:EnthalpySensorOffset:OutdoorAir",false,IdfObjectFormat.NotSpecified,false,6,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Severity Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Controller:OutdoorAir"},"Controller Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Controller Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"OAControllerNames"}),new IdfField(false,"J/kg",-20000,20000,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Enthalpy Sensor Offset",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{})},false,6 ) },
            {"FaultModel:TemperatureSensorOffset:ReturnAir", () => new IdfObject("FaultModel:TemperatureSensorOffset:ReturnAir",false,IdfObjectFormat.NotSpecified,false,6,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Severity Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Controller:OutdoorAir"},"Controller Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Controller Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"OAControllerNames"}),new IdfField(false,"deltaC",-10,10,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Sensor Offset",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{})},false,6 ) },
            {"FaultModel:EnthalpySensorOffset:ReturnAir", () => new IdfObject("FaultModel:EnthalpySensorOffset:ReturnAir",false,IdfObjectFormat.NotSpecified,false,6,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Severity Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Controller:OutdoorAir"},"Controller Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Controller Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"OAControllerNames"}),new IdfField(false,"J/kg",-20000,20000,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Enthalpy Sensor Offset",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{})},false,6 ) },
            {"FaultModel:TemperatureSensorOffset:ChillerSupplyWater", () => new IdfObject("FaultModel:TemperatureSensorOffset:ChillerSupplyWater",false,IdfObjectFormat.NotSpecified,false,6,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Severity Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Chiller:Electric","Chiller:Electric:EIR","Chiller:Electric:ReformulatedEIR","Chiller:ConstantCOP","Chiller:EngineDriven","Chiller:CombustionTurbine","Chiller:Absorption","Chiller:Absorption:Indirect"},"Chiller Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"Chillers"}),new IdfField(false,"deltaC",-10,10,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Sensor Offset",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{})},false,6 ) },
            {"FaultModel:TemperatureSensorOffset:CoilSupplyAir", () => new IdfObject("FaultModel:TemperatureSensorOffset:CoilSupplyAir",false,IdfObjectFormat.NotSpecified,false,6,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Severity Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"AirLoopHVAC:UnitarySystem","Coil:Heating:Electric","Coil:Heating:Gas","Coil:Heating:Desuperheater","Coil:Heating:Steam","Coil:Heating:Water","Coil:Cooling:Water","Coil:Cooling:Water:Detailedgeometry","CoilSystem:Cooling:DX","CoilSystem:Heating:DX"},"Coil Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coil Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CoolingCoilName","CoolingCoilSystemName","DOAToZonalUnit","HeatingCoilName","HeatingCoilSystemName","HeatingCoilsElectricMultiStage","HeatingCoilsGasMultiStage","HeatingCoilsDesuperheater"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Coil Controller Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"WaterCoilControllers"}),new IdfField(false,"deltaC",-10,10,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Sensor Offset",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{})},false,7 ) },
            {"FaultModel:TemperatureSensorOffset:CondenserSupplyWater", () => new IdfObject("FaultModel:TemperatureSensorOffset:CondenserSupplyWater",false,IdfObjectFormat.NotSpecified,false,6,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Severity Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"CoolingTower:SingleSpeed","CoolingTower:TwoSpeed","CoolingTower:VariableSpeed","CoolingTower:VariableSpeed:MERKEL"},"Cooling Tower Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Tower Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CoolingTowers"}),new IdfField(false,"deltaC",-10,10,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Sensor Offset",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{})},false,6 ) },
            {"FaultModel:ThermostatOffset", () => new IdfObject("FaultModel:ThermostatOffset",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ThermostatOffsetFaults"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Thermostat Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneControlThermostaticNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Severity Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"deltaC",-10,10,"2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Thermostat Offset",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{})},false,5 ) },
            {"FaultModel:HumidistatOffset", () => new IdfObject("FaultModel:HumidistatOffset",false,IdfObjectFormat.NotSpecified,false,6,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Humidistat Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneControlHumidistatNames"}),new IdfField(false,"",0,0,"ThermostatOffsetIndependent",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ThermostatOffsetIndependent","ThermostatOffsetDependent"},"Humidistat Offset Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Severity Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"percent",-20,20,"5",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Humidistat Offset",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Exclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Related Thermostat Offset Fault Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ThermostatOffsetFaults"})},false,7 ) },
            {"FaultModel:Fouling:AirFilter", () => new IdfObject("FaultModel:Fouling:AirFilter",false,IdfObjectFormat.NotSpecified,false,6,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fan:OnOff","Fan:ConstantVolume","Fan:VariableVolume"},"Fan Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FansCVandOnOffandVAV"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pressure Fraction Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fan Curve Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UnivariateFunctions"})},false,6 ) },
            {"FaultModel:Fouling:Boiler", () => new IdfObject("FaultModel:Fouling:Boiler",false,IdfObjectFormat.NotSpecified,false,6,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Severity Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Boiler:HotWater"},"Boiler Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Boiler Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"Boilers"}),new IdfField(false,"dimensionless",0,1,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fouling Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,6 ) },
            {"FaultModel:Fouling:EvaporativeCooler", () => new IdfObject("FaultModel:Fouling:EvaporativeCooler",false,IdfObjectFormat.NotSpecified,false,6,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Severity Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"EvaporativeCooler:Indirect:WetCoil"},"Evaporative Cooler Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Evaporative Cooler Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"Chillers"}),new IdfField(false,"dimensionless",0,1,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fouling Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,6 ) },
            {"FaultModel:Fouling:Chiller", () => new IdfObject("FaultModel:Fouling:Chiller",false,IdfObjectFormat.NotSpecified,false,6,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Severity Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Chiller:Electric","Chiller:Electric:EIR","Chiller:Electric:ReformulatedEIR","Chiller:ConstantCOP","Chiller:EngineDriven","Chiller:CombustionTurbine"},"Chiller Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Chiller Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"Chillers"}),new IdfField(false,"dimensionless",0,1,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fouling Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,6 ) },
            {"FaultModel:Fouling:CoolingTower", () => new IdfObject("FaultModel:Fouling:CoolingTower",false,IdfObjectFormat.NotSpecified,false,6,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Severity Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"CoolingTower:SingleSpeed","CoolingTower:TwoSpeed","CoolingTower:VariableSpeed:MERKEL"},"Cooling Tower Object Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cooling Tower Object Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"CoolingTowersWithUA"}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference UA Reduction Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,6 ) },
            {"FaultModel:Fouling:Coil", () => new IdfObject("FaultModel:Fouling:Coil",false,IdfObjectFormat.NotSpecified,false,6,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coil Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"SimpleCoils"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Availability Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Severity Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,"FouledUARated",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"FouledUARated","FoulingFactor"},"Fouling Input Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/K",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"UAFouled",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2-K/W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Side Fouling Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2-K/W",0,0,"0.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Air Side Fouling Factor",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Outside Coil Surface Area",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,"0.07",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inside to Outside Coil Surface Area Ratio",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,10 ) },
            {"Matrix:TwoDimension", () => new IdfObject("Matrix:TwoDimension",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"DataMatrices"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Rows",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Columns",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Value 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,21041 ) },
            {"HybridModel:Zone", () => new IdfObject("HybridModel:Zone",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ZoneNames"}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"No","Yes"},"Calculate Zone Internal Thermal Mass",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"No","Yes"},"Calculate Zone Air Infiltration Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"No","Yes"},"Calculate Zone People Count",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Measured Air Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Measured Air Humidity Ratio Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Measured Air CO2 Concentration Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Input People Activity Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Input People Sensible Heat Fraction Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Input People Radiant Heat Fraction Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Input People CO2 Generation Rate Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Input Supply Air Temperature Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Input Supply Air Mass Flow Rate Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Input Supply Air Humidity Ratio Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Zone Input Supply Air CO2 Concentration Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(true,"",1,12,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Begin Month",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",1,31,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Begin Day of Month",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",1,12,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End Month",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",1,31,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"End Day of Month",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,20 ) },
            {"Curve:Linear", () => new IdfObject("Curve:Linear",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"UnivariateFunctions"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient1 Constant",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient2 x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Value of x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Value of x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Curve Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Curve Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless","Temperature","VolumetricFlow","Pressure","MassFlow","Power","Distance"},"Input Unit Type for X",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless","Capacity","Power","Temperature"},"Output Unit Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,9 ) },
            {"Curve:QuadLinear", () => new IdfObject("Curve:QuadLinear",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"QuadvariateFunctions"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient1 Constant",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient2 w",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient3 x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient4 y",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient5 z",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Value of w",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Value of w",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Value of x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Value of x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Value of y",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Value of y",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Value of z",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Value of z",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Curve Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Curve Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless","Temperature","VolumetricFlow","MassFlow","Power","Distance","VolumetricFlowPerPower"},"Input Unit Type for w",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless","Temperature","VolumetricFlow","MassFlow","Power","Distance","VolumetricFlowPerPower"},"Input Unit Type for x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless","Temperature","VolumetricFlow","MassFlow","Power","Distance","VolumetricFlowPerPower"},"Input Unit Type for y",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless","Temperature","VolumetricFlow","MassFlow","Power","Distance","VolumetricFlowPerPower"},"Input Unit Type for z",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,20 ) },
            {"Curve:Quadratic", () => new IdfObject("Curve:Quadratic",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"UnivariateFunctions"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient1 Constant",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient2 x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient3 x**2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Value of x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Value of x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Curve Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Curve Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless","Temperature","VolumetricFlow","MassFlow","Power","Distance"},"Input Unit Type for X",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless","Capacity","Power","Temperature"},"Output Unit Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,10 ) },
            {"Curve:Cubic", () => new IdfObject("Curve:Cubic",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"UnivariateFunctions"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient1 Constant",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient2 x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient3 x**2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient4 x**3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Value of x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Value of x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Curve Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Curve Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless","Temperature","VolumetricFlow","MassFlow","Power","Distance"},"Input Unit Type for X",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless","Capacity","Power","Temperature"},"Output Unit Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,11 ) },
            {"Curve:Quartic", () => new IdfObject("Curve:Quartic",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"UnivariateFunctions"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient1 Constant",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient2 x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient3 x**2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient4 x**3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient5 x**4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Value of x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Value of x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Curve Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Curve Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless","Temperature","VolumetricFlow","MassFlow","Power","Distance"},"Input Unit Type for X",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless","Capacity","Power","Temperature"},"Output Unit Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,12 ) },
            {"Curve:Exponent", () => new IdfObject("Curve:Exponent",false,IdfObjectFormat.NotSpecified,false,6,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"UnivariateFunctions"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient1 Constant",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient2 Constant",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient3 Constant",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Value of x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Value of x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Curve Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Curve Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless","Temperature","VolumetricFlow","MassFlow","Power","Distance"},"Input Unit Type for X",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless","Capacity","Power","Temperature"},"Output Unit Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,10 ) },
            {"Curve:Bicubic", () => new IdfObject("Curve:Bicubic",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"BivariateFunctions"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient1 Constant",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient2 x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient3 x**2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient4 y",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient5 y**2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient6 x*y",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient7 x**3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient8 y**3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient9 x**2*y",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient10 x*y**2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Value of x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Value of x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Value of y",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Value of y",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Curve Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Curve Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless","Temperature","VolumetricFlow","MassFlow","Power","Distance"},"Input Unit Type for X",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless","Temperature","VolumetricFlow","MassFlow","Power","Distance"},"Input Unit Type for Y",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless","Capacity","Power","Temperature"},"Output Unit Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,20 ) },
            {"Curve:Biquadratic", () => new IdfObject("Curve:Biquadratic",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"BivariateFunctions"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient1 Constant",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient2 x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient3 x**2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient4 y",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient5 y**2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient6 x*y",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Value of x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Value of x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Value of y",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Value of y",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Curve Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Curve Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless","Temperature","VolumetricFlow","MassFlow","Power","Distance"},"Input Unit Type for X",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless","Temperature","VolumetricFlow","MassFlow","Power","Distance"},"Input Unit Type for Y",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless","Capacity","Power","Temperature"},"Output Unit Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,16 ) },
            {"Curve:QuadraticLinear", () => new IdfObject("Curve:QuadraticLinear",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"BivariateFunctions"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient1 Constant",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient2 x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient3 x**2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient4 y",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient5 x*y",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient6 x**2*y",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Value of x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Value of x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Value of y",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Value of y",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Curve Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Curve Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless","Temperature","VolumetricFlow","MassFlow","Power","Distance"},"Input Unit Type for X",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless","Temperature","VolumetricFlow","MassFlow","Power","Distance"},"Input Unit Type for Y",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless","Capacity","Power","Temperature"},"Output Unit Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,16 ) },
            {"Curve:CubicLinear", () => new IdfObject("Curve:CubicLinear",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"BivariateFunctions"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient1 Constant",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient2 x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient3 x**2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient4 x**3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient5 y",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient6 x*y",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Value of x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Value of x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Value of y",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Value of y",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Curve Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Curve Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless","Temperature"},"Input Unit Type for X",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless","Temperature"},"Input Unit Type for Y",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless"},"Output Unit Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,16 ) },
            {"Curve:Triquadratic", () => new IdfObject("Curve:Triquadratic",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"TrivariateFunctions"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient1 Constant",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient2 x**2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient3 x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient4 y**2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient5 y",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient6 z**2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient7 z",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient8 x**2*y**2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient9 x*y",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient10 x*y**2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient11 x**2*y",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient12 x**2*z**2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient13 x*z",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient14 x*z**2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient15 x**2*z",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient16 y**2*z**2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient17 y*z",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient18 y*z**2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient19 y**2*z",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient20 x**2*y**2*z**2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient21 x**2*y**2*z",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient22 x**2*y*z**2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient23 x*y**2*z**2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient24 x**2*y*z",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient25 x*y**2*z",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient26 x*y*z**2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient27 x*y*z",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Value of x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Value of x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Value of y",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Value of y",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Value of z",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Value of z",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Curve Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Curve Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless","Temperature","VolumetricFlow","MassFlow","Power","Distance"},"Input Unit Type for X",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless","Temperature","VolumetricFlow","MassFlow","Power","Distance"},"Input Unit Type for Y",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless","Temperature","VolumetricFlow","MassFlow","Power","Distance"},"Input Unit Type for Z",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless","Capacity","Power","Temperature"},"Output Unit Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,40 ) },
            {"Curve:Functional:PressureDrop", () => new IdfObject("Curve:Functional:PressureDrop",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"UnivariateFunctions"},new List<string>{},new List<string>{}),new IdfField(true,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Diameter",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minor Loss Coefficient",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Length",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"m",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Roughness",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fixed Friction Factor",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,6 ) },
            {"Curve:FanPressureRise", () => new IdfObject("Curve:FanPressureRise",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"BivariateFunctions"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient1 C1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient2 C2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient3 C3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient4 C4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Value of Qfan",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"m3/s",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Value of Qfan",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"Pa",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Value of Psm",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"Pa",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Value of Psm",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Curve Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"Pa",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Curve Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,11 ) },
            {"Curve:ExponentialSkewNormal", () => new IdfObject("Curve:ExponentialSkewNormal",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"UnivariateFunctions"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient1 C1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient2 C2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient3 C3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient4 C4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Value of x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Value of x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Curve Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Curve Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless"},"Input Unit Type for x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless"},"Output Unit Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,11 ) },
            {"Curve:Sigmoid", () => new IdfObject("Curve:Sigmoid",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"UnivariateFunctions"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient1 C1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient2 C2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient3 C3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient4 C4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient5 C5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Value of x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Value of x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Curve Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Curve Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless"},"Input Unit Type for x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless"},"Output Unit Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,12 ) },
            {"Curve:RectangularHyperbola1", () => new IdfObject("Curve:RectangularHyperbola1",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"UnivariateFunctions"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient1 C1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient2 C2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient3 C3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Value of x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Value of x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Curve Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Curve Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless"},"Input Unit Type for x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless"},"Output Unit Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,10 ) },
            {"Curve:RectangularHyperbola2", () => new IdfObject("Curve:RectangularHyperbola2",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"UnivariateFunctions"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient1 C1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient2 C2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient3 C3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Value of x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Value of x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Curve Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Curve Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless"},"Input Unit Type for x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless"},"Output Unit Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,10 ) },
            {"Curve:ExponentialDecay", () => new IdfObject("Curve:ExponentialDecay",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"UnivariateFunctions"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient1 C1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient2 C2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient3 C3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Value of x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Value of x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Curve Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Curve Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless"},"Input Unit Type for x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless"},"Output Unit Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,10 ) },
            {"Curve:DoubleExponentialDecay", () => new IdfObject("Curve:DoubleExponentialDecay",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"UnivariateFunctions"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient1 C1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient2 C2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient3 C3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient3 C4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient3 C5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Value of x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Value of x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Curve Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Curve Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless"},"Input Unit Type for x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless"},"Output Unit Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,12 ) },
            {"Curve:ChillerPartLoadWithLift", () => new IdfObject("Curve:ChillerPartLoadWithLift",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"TrivariateFunctions"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient1 C1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient2 C2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient3 C3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient4 C4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient5 C5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient6 C6",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient7 C7",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient8 C8",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient9 C9",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient10 C10",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient11 C11",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Coefficient12 C12",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Value of x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Value of x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Value of y",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Value of y",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Value of z",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Value of z",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Curve Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Curve Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless"},"Input Unit Type for x",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless"},"Input Unit Type for y",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless"},"Input Unit Type for z",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless"},"Output Unit Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,25 ) },
            {"Table:IndependentVariable", () => new IdfObject("Table:IndependentVariable",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"IndependentVariableName"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Linear",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Linear","Cubic"},"Interpolation Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Constant",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Constant","Linear"},"Extrapolation Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Normalization Reference Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless","Temperature","VolumetricFlow","MassFlow","Power","Distance","Angle"},"Unit Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"External File Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"External File Column Number",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"External File Starting Row Number",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Value 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,25 ) },
            {"Table:IndependentVariableList", () => new IdfObject("Table:IndependentVariableList",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"IndependentVariableListName"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Independent Variable 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"IndependentVariableName"})},true,7 ) },
            {"Table:Lookup", () => new IdfObject("Table:Lookup",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"UnivariateFunctions","BivariateFunctions","TrivariateFunctions","QuadvariateFunctions","MultivariateFunctions"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Independent Variable List Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"IndependentVariableListName"}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","DivisorOnly","AutomaticWithDivisor"},"Normalization Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"1.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Normalization Divisor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Maximum Output",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Dimensionless","Capacity","Power"},"Output Unit Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"External File Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"External File Column Number",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"External File Starting Row Number",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Output Value 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,1525 ) },
            {"FluidProperties:Name", () => new IdfObject("FluidProperties:Name",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fluid Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"FluidNames","FluidAndGlycolNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Refrigerant","Glycol"},"Fluid Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,2 ) },
            {"FluidProperties:GlycolConcentration", () => new IdfObject("FluidProperties:GlycolConcentration",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"FluidAndGlycolNames"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"EthyleneGlycol","PropyleneGlycol","UserDefinedGlycolType"},"Glycol Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"User Defined Glycol Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FluidAndGlycolNames"}),new IdfField(false,"",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Glycol Concentration",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,4 ) },
            {"FluidProperties:Temperatures", () => new IdfObject("FluidProperties:Temperatures",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"FluidPropertyTemperatures"},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 6",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 7",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 8",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 9",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 10",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 11",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 12",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 13",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 14",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 15",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 16",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 17",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 18",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 19",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 20",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 21",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 22",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 23",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 24",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 25",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 26",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 27",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 28",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 29",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 30",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 31",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 32",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 33",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 34",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 35",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 36",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 37",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 38",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 39",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 40",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 41",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 42",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 43",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 44",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 45",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 46",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 47",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 48",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 49",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 50",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 51",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 52",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 53",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 54",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 55",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 56",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 57",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 58",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 59",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 60",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 61",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 62",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 63",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 64",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 65",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 66",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 67",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 68",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 69",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 70",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 71",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 72",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 73",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 74",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 75",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 76",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 77",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 78",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 79",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 80",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 81",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 82",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 83",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 84",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 85",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 86",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 87",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 88",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 89",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 90",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 91",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 92",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 93",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 94",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 95",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 96",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 97",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 98",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 99",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 100",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 101",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 102",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 103",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 104",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 105",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 106",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 107",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 108",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 109",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 110",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 111",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 112",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 113",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 114",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 115",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 116",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 117",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 118",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 119",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 120",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 121",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 122",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 123",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 124",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 125",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 126",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 127",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 128",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 129",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 130",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 131",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 132",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 133",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 134",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 135",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 136",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 137",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 138",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 139",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 140",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 141",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 142",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 143",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 144",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 145",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 146",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 147",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 148",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 149",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 150",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 151",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 152",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 153",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 154",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 155",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 156",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 157",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 158",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 159",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 160",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 161",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 162",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 163",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 164",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 165",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 166",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 167",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 168",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 169",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 170",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 171",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 172",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 173",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 174",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 175",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 176",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 177",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 178",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 179",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 180",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 181",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 182",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 183",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 184",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 185",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 186",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 187",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 188",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 189",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 190",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 191",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 192",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 193",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 194",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 195",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 196",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 197",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 198",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 199",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 200",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 201",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 202",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 203",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 204",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 205",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 206",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 207",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 208",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 209",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 210",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 211",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 212",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 213",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 214",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 215",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 216",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 217",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 218",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 219",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 220",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 221",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 222",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 223",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 224",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 225",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 226",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 227",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 228",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 229",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 230",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 231",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 232",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 233",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 234",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 235",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 236",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 237",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 238",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 239",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 240",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 241",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 242",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 243",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 244",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 245",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 246",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 247",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 248",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 249",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"C",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature 250",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,251 ) },
            {"FluidProperties:Saturated", () => new IdfObject("FluidProperties:Saturated",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fluid Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FluidNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Enthalpy","Density","SpecificHeat","Pressure"},"Fluid Property Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Fluid","FluidGas"},"Fluid Phase",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Values Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FluidPropertyTemperatures"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 6",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 7",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 8",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 9",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 10",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 11",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 12",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 13",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 14",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 15",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 16",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 17",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 18",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 19",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 20",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 21",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 22",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 23",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 24",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 25",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 26",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 27",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 28",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 29",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 30",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 31",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 32",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 33",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 34",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 35",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 36",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 37",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 38",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 39",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 40",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 41",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 42",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 43",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 44",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 45",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 46",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 47",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 48",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 49",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 50",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 51",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 52",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 53",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 54",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 55",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 56",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 57",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 58",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 59",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 60",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 61",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 62",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 63",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 64",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 65",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 66",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 67",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 68",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 69",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 70",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 71",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 72",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 73",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 74",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 75",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 76",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 77",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 78",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 79",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 80",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 81",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 82",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 83",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 84",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 85",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 86",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 87",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 88",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 89",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 90",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 91",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 92",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 93",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 94",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 95",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 96",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 97",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 98",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 99",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 100",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 101",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 102",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 103",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 104",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 105",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 106",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 107",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 108",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 109",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 110",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 111",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 112",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 113",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 114",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 115",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 116",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 117",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 118",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 119",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 120",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 121",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 122",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 123",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 124",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 125",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 126",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 127",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 128",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 129",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 130",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 131",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 132",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 133",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 134",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 135",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 136",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 137",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 138",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 139",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 140",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 141",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 142",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 143",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 144",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 145",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 146",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 147",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 148",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 149",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 150",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 151",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 152",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 153",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 154",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 155",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 156",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 157",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 158",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 159",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 160",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 161",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 162",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 163",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 164",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 165",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 166",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 167",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 168",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 169",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 170",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 171",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 172",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 173",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 174",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 175",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 176",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 177",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 178",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 179",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 180",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 181",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 182",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 183",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 184",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 185",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 186",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 187",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 188",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 189",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 190",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 191",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 192",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 193",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 194",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 195",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 196",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 197",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 198",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 199",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 200",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 201",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 202",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 203",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 204",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 205",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 206",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 207",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 208",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 209",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 210",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 211",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 212",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 213",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 214",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 215",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 216",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 217",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 218",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 219",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 220",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 221",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 222",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 223",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 224",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 225",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 226",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 227",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 228",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 229",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 230",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 231",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 232",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 233",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 234",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 235",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 236",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 237",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 238",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 239",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 240",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 241",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 242",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 243",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 244",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 245",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 246",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 247",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 248",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 249",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 250",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,254 ) },
            {"FluidProperties:Superheated", () => new IdfObject("FluidProperties:Superheated",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fluid Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FluidNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Enthalpy","Density"},"Fluid Property Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Values Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FluidPropertyTemperatures"}),new IdfField(false,"Pa",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pressure",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 6",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 7",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 8",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 9",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 10",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 11",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 12",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 13",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 14",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 15",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 16",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 17",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 18",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 19",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 20",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 21",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 22",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 23",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 24",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 25",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 26",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 27",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 28",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 29",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 30",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 31",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 32",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 33",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 34",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 35",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 36",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 37",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 38",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 39",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 40",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 41",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 42",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 43",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 44",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 45",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 46",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 47",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 48",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 49",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 50",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 51",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 52",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 53",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 54",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 55",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 56",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 57",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 58",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 59",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 60",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 61",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 62",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 63",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 64",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 65",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 66",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 67",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 68",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 69",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 70",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 71",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 72",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 73",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 74",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 75",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 76",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 77",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 78",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 79",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 80",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 81",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 82",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 83",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 84",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 85",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 86",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 87",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 88",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 89",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 90",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 91",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 92",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 93",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 94",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 95",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 96",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 97",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 98",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 99",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 100",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 101",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 102",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 103",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 104",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 105",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 106",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 107",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 108",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 109",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 110",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 111",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 112",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 113",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 114",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 115",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 116",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 117",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 118",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 119",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 120",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 121",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 122",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 123",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 124",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 125",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 126",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 127",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 128",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 129",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 130",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 131",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 132",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 133",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 134",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 135",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 136",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 137",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 138",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 139",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 140",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 141",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 142",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 143",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 144",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 145",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 146",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 147",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 148",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 149",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 150",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 151",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 152",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 153",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 154",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 155",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 156",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 157",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 158",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 159",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 160",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 161",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 162",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 163",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 164",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 165",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 166",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 167",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 168",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 169",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 170",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 171",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 172",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 173",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 174",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 175",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 176",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 177",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 178",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 179",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 180",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 181",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 182",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 183",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 184",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 185",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 186",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 187",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 188",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 189",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 190",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 191",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 192",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 193",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 194",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 195",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 196",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 197",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 198",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 199",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 200",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 201",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 202",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 203",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 204",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 205",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 206",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 207",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 208",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 209",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 210",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 211",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 212",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 213",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 214",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 215",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 216",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 217",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 218",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 219",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 220",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 221",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 222",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 223",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 224",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 225",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 226",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 227",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 228",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 229",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 230",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 231",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 232",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 233",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 234",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 235",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 236",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 237",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 238",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 239",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 240",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 241",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 242",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 243",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 244",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 245",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 246",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 247",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 248",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 249",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 250",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,254 ) },
            {"FluidProperties:Concentration", () => new IdfObject("FluidProperties:Concentration",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Fluid Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FluidNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Density","SpecificHeat","Conductivity","Viscosity"},"Fluid Property Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Temperature Values Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"FluidPropertyTemperatures"}),new IdfField(false,"dimensionless",0,1,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Concentration",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 6",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 7",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 8",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 9",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 10",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 11",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 12",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 13",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 14",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 15",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 16",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 17",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 18",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 19",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 20",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 21",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 22",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 23",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 24",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 25",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 26",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 27",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 28",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 29",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 30",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 31",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 32",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 33",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 34",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 35",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 36",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 37",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 38",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 39",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 40",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 41",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 42",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 43",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 44",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 45",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 46",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 47",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 48",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 49",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 50",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 51",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 52",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 53",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 54",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 55",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 56",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 57",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 58",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 59",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 60",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 61",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 62",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 63",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 64",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 65",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 66",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 67",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 68",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 69",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 70",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 71",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 72",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 73",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 74",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 75",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 76",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 77",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 78",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 79",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 80",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 81",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 82",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 83",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 84",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 85",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 86",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 87",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 88",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 89",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 90",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 91",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 92",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 93",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 94",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 95",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 96",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 97",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 98",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 99",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 100",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 101",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 102",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 103",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 104",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 105",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 106",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 107",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 108",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 109",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 110",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 111",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 112",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 113",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 114",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 115",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 116",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 117",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 118",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 119",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 120",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 121",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 122",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 123",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 124",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 125",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 126",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 127",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 128",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 129",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 130",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 131",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 132",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 133",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 134",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 135",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 136",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 137",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 138",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 139",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 140",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 141",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 142",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 143",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 144",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 145",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 146",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 147",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 148",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 149",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 150",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 151",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 152",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 153",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 154",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 155",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 156",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 157",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 158",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 159",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 160",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 161",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 162",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 163",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 164",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 165",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 166",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 167",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 168",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 169",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 170",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 171",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 172",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 173",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 174",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 175",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 176",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 177",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 178",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 179",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 180",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 181",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 182",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 183",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 184",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 185",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 186",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 187",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 188",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 189",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 190",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 191",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 192",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 193",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 194",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 195",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 196",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 197",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 198",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 199",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 200",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 201",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 202",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 203",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 204",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 205",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 206",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 207",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 208",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 209",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 210",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 211",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 212",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 213",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 214",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 215",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 216",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 217",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 218",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 219",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 220",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 221",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 222",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 223",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 224",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 225",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 226",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 227",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 228",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 229",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 230",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 231",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 232",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 233",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 234",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 235",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 236",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 237",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 238",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 239",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 240",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 241",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 242",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 243",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 244",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 245",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 246",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 247",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 248",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 249",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Property Value 250",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,254 ) },
            {"CurrencyType", () => new IdfObject("CurrencyType",true,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"USD","AFN","ALL","ANG","ARS","AUD","AWG","AZN","BAM","BBD","BGN","BMD","BND","BOB","BRL","BSD","BWP","BYR","BZD","CAD","CHF","CLP","CNY","COP","CRC","CUP","CZK","DKK","DOP","EEK","EGP","EUR","FJD","GBP","GHC","GIP","GTQ","GYD","HKD","HNL","HRK","HUF","IDR","ILS","IMP","INR","IRR","ISK","JEP","JMD","JPY","KGS","KHR","KPW","KRW","KYD","KZT","LAK","LBP","LKR","LRD","LTL","LVL","MKD","MNT","MUR","MXN","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","SAR","SBD","SCR","SEK","SGD","SHP","SOS","SRD","SVC","SYP","THB","TRL","TRY","TTD","TVD","TWD","UAH","UYU","UZS","VEF","VND","XCD","YER","ZAR","ZWD"},"Monetary Unit",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,1 ) },
            {"ComponentCost:Adjustments", () => new IdfObject("ComponentCost:Adjustments",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"$/m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Miscellaneous Cost per Conditioned Area",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Design and Engineering Fees",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Contractor Fee",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Contingency",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Permits, Bonding and Insurance",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Commissioning Fee",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Regional Adjustment Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,7 ) },
            {"ComponentCost:Reference", () => new IdfObject("ComponentCost:Reference",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"$",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Building Line Item Costs",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"$/m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Building Miscellaneous Cost per Conditioned Area",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Building Design and Engineering Fees",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Building Contractor Fee",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Building Contingency",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Building Permits, Bonding and Insurance",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Building Commissioning Fee",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Reference Building Regional Adjustment Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,8 ) },
            {"ComponentCost:LineItem", () => new IdfObject("ComponentCost:LineItem",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"General","Construction","Coil:DX","Coil:Cooling:DX:SingleSpeed","Coil:Heating:Fuel","Chiller:Electric","Daylighting:Controls","Shading:Zone:Detailed","Lights","Generator:Photovoltaic"},"Line Item Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Item Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Object End-Use Key",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"$",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cost per Each",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"$/m2",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cost per Area",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"$/kW",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cost per Unit of Output Capacity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"$/kW",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cost per Unit of Output Capacity per COP",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"$/m3",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cost per Volume",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"$/(m3/s)",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cost per Volume Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"$/(W/K)",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cost per Energy per Temperature Difference",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"dimensionless",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Quantity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,13 ) },
            {"UtilityCost:Tariff", () => new IdfObject("UtilityCost:Tariff",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"UtilityCostTariffs"},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Output Meter Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"UserDefined","kWh","Therm","MMBtu","MJ","kBtu","MCF","CCF","m3","gal","kgal"},"Conversion Factor Choice",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Energy Conversion Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Demand Conversion Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Time of Use Period Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Season Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Month Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"QuarterHour","HalfHour","FullHour","Day","Week"},"Demand Window Length",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Monthly Charge or Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Minimum Monthly Charge or Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Real Time Pricing Charge Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Customer Baseline Load Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Group Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"BuyFromUtility",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"BuyFromUtility","SellToUtility","NetMetering"},"Buy Or Sell",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,15 ) },
            {"UtilityCost:Qualify", () => new IdfObject("UtilityCost:Qualify",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Utility Cost Qualify Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tariff Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UtilityCostTariffs"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Maximum",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Minimum","Maximum"},"Qualify Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Threshold Value or Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Annual","Summer","Winter","Spring","Fall"},"Season",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Consecutive",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Count","Consecutive"},"Threshold Test",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,12,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Number of Months",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,8 ) },
            {"UtilityCost:Charge:Simple", () => new IdfObject("UtilityCost:Charge:Simple",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Utility Cost Charge Simple Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tariff Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UtilityCostTariffs"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Variable",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Annual","Summer","Winter","Spring","Fall"},"Season",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"EnergyCharges","DemandCharges","ServiceCharges","Basis","Adjustment","Surcharge","Subtotal","Taxes","Total","NotIncluded"},"Category Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cost per Unit Value or Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,6 ) },
            {"UtilityCost:Charge:Block", () => new IdfObject("UtilityCost:Charge:Block",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Utility Cost Charge Block Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tariff Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UtilityCostTariffs"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Variable",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Annual",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Annual","Summer","Winter","Spring","Fall"},"Season",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"EnergyCharges","DemandCharges","ServiceCharges","Basis","Adjustment","Surcharge","Subtotal","Taxes","Total","NotIncluded"},"Category Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Remaining Into Variable",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Block Size Multiplier Value or Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Block Size 1 Value or Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Block 1 Cost per Unit Value or Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Block Size 2 Value or Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Block 2 Cost per Unit Value or Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Block Size 3 Value or Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Block 3 Cost per Unit Value or Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Block Size 4 Value or Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Block 4 Cost per Unit Value or Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Block Size 5 Value or Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Block 5 Cost per Unit Value or Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Block Size 6 Value or Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Block 6 Cost per Unit Value or Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Block Size 7 Value or Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Block 7 Cost per Unit Value or Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Block Size 8 Value or Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Block 8 Cost per Unit Value or Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Block Size 9 Value or Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Block 9 Cost per Unit Value or Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Block Size 10 Value or Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Block 10 Cost per Unit Value or Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Block Size 11 Value or Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Block 11 Cost per Unit Value or Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Block Size 12 Value or Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Block 12 Cost per Unit Value or Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Block Size 13 Value or Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Block 13 Cost per Unit Value or Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Block Size 14 Value or Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Block 14 Cost per Unit Value or Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Block Size 15 Value or Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Block 15 Cost per Unit Value or Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,37 ) },
            {"UtilityCost:Ratchet", () => new IdfObject("UtilityCost:Ratchet",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tariff Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UtilityCostTariffs"}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Baseline Source Variable",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Adjustment Source Variable",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Annual","Summer","Winter","Spring","Fall","Monthly"},"Season From",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Annual","Summer","Winter","Spring","Fall"},"Season To",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Multiplier Value or Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Offset Value or Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,8 ) },
            {"UtilityCost:Variable", () => new IdfObject("UtilityCost:Variable",false,IdfObjectFormat.NotSpecified,false,3,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tariff Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UtilityCostTariffs"}),new IdfField(false,"",0,0,"Dimensionless",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Energy","Power","Dimensionless","Currency"},"Variable Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"January Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"February Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"March Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"April Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"May Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"June Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"July Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"August Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"September Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"October Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"November Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"December Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,15 ) },
            {"UtilityCost:Computation", () => new IdfObject("UtilityCost:Computation",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tariff Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"UtilityCostTariffs"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compute Step 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compute Step 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compute Step 3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compute Step 4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compute Step 5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compute Step 6",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compute Step 7",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compute Step 8",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compute Step 9",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compute Step 10",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compute Step 11",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compute Step 12",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compute Step 13",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compute Step 14",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compute Step 15",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compute Step 16",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compute Step 17",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compute Step 18",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compute Step 19",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compute Step 20",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compute Step 21",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compute Step 22",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compute Step 23",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compute Step 24",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compute Step 25",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compute Step 26",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compute Step 27",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compute Step 28",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compute Step 29",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Compute Step 30",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,32 ) },
            {"LifeCycleCost:Parameters", () => new IdfObject("LifeCycleCost:Parameters",true,IdfObjectFormat.NotSpecified,false,11,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"EndOfYear",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"EndOfYear","MidYear","BeginningOfYear"},"Discounting Convention",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ConstantDollar",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ConstantDollar","CurrentDollar"},"Inflation Approach",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Real Discount Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nominal Discount Rate",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Inflation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"January",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"January","February","March","April","May","June","July","August","September","October","November","December"},"Base Date Month",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1900,2100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Base Date Year",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"January",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"January","February","March","April","May","June","July","August","September","October","November","December"},"Service Date Month",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1900,2100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Service Date Year",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Length of Study Period in Years",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tax rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ModifiedAcceleratedCostRecoverySystem-3year","ModifiedAcceleratedCostRecoverySystem-5year","ModifiedAcceleratedCostRecoverySystem-7year","ModifiedAcceleratedCostRecoverySystem-10year","ModifiedAcceleratedCostRecoverySystem-15year","ModifiedAcceleratedCostRecoverySystem-20year","StraightLine-27year","StraightLine-31year","StraightLine-39year","StraightLine-40year","None"},"Depreciation Method",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,13 ) },
            {"LifeCycleCost:RecurringCosts", () => new IdfObject("LifeCycleCost:RecurringCosts",false,IdfObjectFormat.NotSpecified,false,7,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Maintenance",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Maintenance","Repair","Operation","Replacement","MinorOverhaul","MajorOverhaul","OtherOperational"},"Category",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cost",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ServicePeriod",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ServicePeriod","BasePeriod"},"Start of Costs",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Years from Start",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1200,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Months from Start",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,100,"1",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Repeat Period Years",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1200,"0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Repeat Period Months",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",-0.3,0.3,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Annual escalation rate",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,9 ) },
            {"LifeCycleCost:NonrecurringCost", () => new IdfObject("LifeCycleCost:NonrecurringCost",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Construction",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Construction","Salvage","OtherCapital"},"Category",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Cost",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"ServicePeriod",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"ServicePeriod","BasePeriod"},"Start of Costs",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Years from Start",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,1200,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Months from Start",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,6 ) },
            {"LifeCycleCost:UsePriceEscalation", () => new IdfObject("LifeCycleCost:UsePriceEscalation",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"LCC Price Escalation Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Electricity","ElectricityPurchased","ElectricityProduced","ElectricitySurplusSold","ElectricityNet","NaturalGas","Steam","Gasoline","Diesel","Coal","FuelOil#1","FuelOil#2","Propane","OtherFuel1","OtherFuel2","Water"},"Resource",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1900,2100,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Escalation Start Year",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"January",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"January","February","March","April","May","June","July","August","September","October","November","December"},"Escalation Start Month",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Year 1 Escalation",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,104 ) },
            {"LifeCycleCost:UseAdjustment", () => new IdfObject("LifeCycleCost:UseAdjustment",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Electricity","ElectricityPurchased","ElectricityProduced","ElectricitySurplusSold","ElectricityNet","NaturalGas","Steam","Gasoline","Diesel","Coal","FuelOil#1","FuelOil#2","Propane","OtherFuel1","OtherFuel2","Water"},"Resource",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Year 1 Multiplier",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,102 ) },
            {"Parametric:SetValueForRun", () => new IdfObject("Parametric:SetValueForRun",false,IdfObjectFormat.NotSpecified,false,2,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Value for Run 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,101 ) },
            {"Parametric:Logic", () => new IdfObject("Parametric:Logic",true,IdfObjectFormat.NotSpecified,false,2,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Parametric Logic Line 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,101 ) },
            {"Parametric:RunControl", () => new IdfObject("Parametric:RunControl",true,IdfObjectFormat.NotSpecified,false,2,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Yes",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Perform Run 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,101 ) },
            {"Parametric:FileNameSuffix", () => new IdfObject("Parametric:FileNameSuffix",true,IdfObjectFormat.NotSpecified,false,2,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Suffix for File Name in Run 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,101 ) },
            {"Output:VariableDictionary", () => new IdfObject("Output:VariableDictionary",false,IdfObjectFormat.NotSpecified,false,1,false,new List<IdfField> {new IdfField(false,"",0,0,"regular",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"IDF","regular"},"Key Field",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Name","Unsorted"},"Sort Option",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,2 ) },
            {"Output:Surfaces:List", () => new IdfObject("Output:Surfaces:List",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Details","Vertices","DetailsWithVertices","ViewFactorInfo","Lines","CostInfo","DecayCurvesFromComponentLoadsSummary"},"Report Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"IDF"},"Report Specifications",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,2 ) },
            {"Output:Surfaces:Drawing", () => new IdfObject("Output:Surfaces:Drawing",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"DXF","DXF:WireFrame","VRML"},"Report Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Triangulate3DFace",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Triangulate3DFace","ThickPolyline","RegularPolyline"},"Report Specifications 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Report Specifications 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ColorSchemes"})},false,3 ) },
            {"Output:Schedules", () => new IdfObject("Output:Schedules",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Hourly","Timestep"},"Key Field",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,1 ) },
            {"Output:Constructions", () => new IdfObject("Output:Constructions",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Constructions","Materials"},"Details Type 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Constructions","Materials"},"Details Type 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,2 ) },
            {"Output:EnergyManagementSystem", () => new IdfObject("Output:EnergyManagementSystem",true,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","NotByUniqueKeyNames","Verbose"},"Actuator Availability Dictionary Reporting",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","NotByUniqueKeyNames","Verbose"},"Internal Variable Availability Dictionary Reporting",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","ErrorsOnly","Verbose"},"EMS Runtime Language Debug Output Level",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,3 ) },
            {"OutputControl:SurfaceColorScheme", () => new IdfObject("OutputControl:SurfaceColorScheme",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{"ColorSchemes"},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Text","Walls","Windows","GlassDoors","Doors","Roofs","Floors","DetachedBuildingShades","DetachedFixedShades","AttachedBuildingShades","Photovoltaics","TubularDaylightDomes","TubularDaylightDiffusers","DaylightReferencePoint1","DaylightReferencePoint2"},"Drawing Element 1 Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,255,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Color for Drawing Element 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Text","Walls","Windows","GlassDoors","Doors","Roofs","Floors","DetachedBuildingShades","DetachedFixedShades","AttachedBuildingShades","Photovoltaics","TubularDaylightDomes","TubularDaylightDiffusers","DaylightReferencePoint1","DaylightReferencePoint2"},"Drawing Element 2 Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,255,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Color for Drawing Element 2",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Text","Walls","Windows","GlassDoors","Doors","Roofs","Floors","DetachedBuildingShades","DetachedFixedShades","AttachedBuildingShades","Photovoltaics","TubularDaylightDomes","TubularDaylightDiffusers","DaylightReferencePoint1","DaylightReferencePoint2"},"Drawing Element 3 Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,255,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Color for Drawing Element 3",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Text","Walls","Windows","GlassDoors","Doors","Roofs","Floors","DetachedBuildingShades","DetachedFixedShades","AttachedBuildingShades","Photovoltaics","TubularDaylightDomes","TubularDaylightDiffusers","DaylightReferencePoint1","DaylightReferencePoint2"},"Drawing Element 4 Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,255,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Color for Drawing Element 4",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Text","Walls","Windows","GlassDoors","Doors","Roofs","Floors","DetachedBuildingShades","DetachedFixedShades","AttachedBuildingShades","Photovoltaics","TubularDaylightDomes","TubularDaylightDiffusers","DaylightReferencePoint1","DaylightReferencePoint2"},"Drawing Element 5 Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,255,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Color for Drawing Element 5",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Text","Walls","Windows","GlassDoors","Doors","Roofs","Floors","DetachedBuildingShades","DetachedFixedShades","AttachedBuildingShades","Photovoltaics","TubularDaylightDomes","TubularDaylightDiffusers","DaylightReferencePoint1","DaylightReferencePoint2"},"Drawing Element 6 Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,255,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Color for Drawing Element 6",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Text","Walls","Windows","GlassDoors","Doors","Roofs","Floors","DetachedBuildingShades","DetachedFixedShades","AttachedBuildingShades","Photovoltaics","TubularDaylightDomes","TubularDaylightDiffusers","DaylightReferencePoint1","DaylightReferencePoint2"},"Drawing Element 7 Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,255,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Color for Drawing Element 7",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Text","Walls","Windows","GlassDoors","Doors","Roofs","Floors","DetachedBuildingShades","DetachedFixedShades","AttachedBuildingShades","Photovoltaics","TubularDaylightDomes","TubularDaylightDiffusers","DaylightReferencePoint1","DaylightReferencePoint2"},"Drawing Element 8 Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,255,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Color for Drawing Element 8",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Text","Walls","Windows","GlassDoors","Doors","Roofs","Floors","DetachedBuildingShades","DetachedFixedShades","AttachedBuildingShades","Photovoltaics","TubularDaylightDomes","TubularDaylightDiffusers","DaylightReferencePoint1","DaylightReferencePoint2"},"Drawing Element 9 Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,255,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Color for Drawing Element 9",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Text","Walls","Windows","GlassDoors","Doors","Roofs","Floors","DetachedBuildingShades","DetachedFixedShades","AttachedBuildingShades","Photovoltaics","TubularDaylightDomes","TubularDaylightDiffusers","DaylightReferencePoint1","DaylightReferencePoint2"},"Drawing Element 10 Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,255,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Color for Drawing Element 10",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Text","Walls","Windows","GlassDoors","Doors","Roofs","Floors","DetachedBuildingShades","DetachedFixedShades","AttachedBuildingShades","Photovoltaics","TubularDaylightDomes","TubularDaylightDiffusers","DaylightReferencePoint1","DaylightReferencePoint2"},"Drawing Element 11 Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,255,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Color for Drawing Element 11",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Text","Walls","Windows","GlassDoors","Doors","Roofs","Floors","DetachedBuildingShades","DetachedFixedShades","AttachedBuildingShades","Photovoltaics","TubularDaylightDomes","TubularDaylightDiffusers","DaylightReferencePoint1","DaylightReferencePoint2"},"Drawing Element 12 Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,255,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Color for Drawing Element 12",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Text","Walls","Windows","GlassDoors","Doors","Roofs","Floors","DetachedBuildingShades","DetachedFixedShades","AttachedBuildingShades","Photovoltaics","TubularDaylightDomes","TubularDaylightDiffusers","DaylightReferencePoint1","DaylightReferencePoint2"},"Drawing Element 13 Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,255,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Color for Drawing Element 13",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Text","Walls","Windows","GlassDoors","Doors","Roofs","Floors","DetachedBuildingShades","DetachedFixedShades","AttachedBuildingShades","Photovoltaics","TubularDaylightDomes","TubularDaylightDiffusers","DaylightReferencePoint1","DaylightReferencePoint2"},"Drawing Element 14 Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,255,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Color for Drawing Element 14",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Text","Walls","Windows","GlassDoors","Doors","Roofs","Floors","DetachedBuildingShades","DetachedFixedShades","AttachedBuildingShades","Photovoltaics","TubularDaylightDomes","TubularDaylightDiffusers","DaylightReferencePoint1","DaylightReferencePoint2"},"Drawing Element 15 Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,255,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Color for Drawing Element 15",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,31 ) },
            {"Output:Table:SummaryReports", () => new IdfObject("Output:Table:SummaryReports",true,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"AllSummary","AllSummaryAndSizingPeriod","AllMonthly","AllSummaryAndMonthly","AllSummaryMonthlyAndSizingPeriod","AnnualBuildingUtilityPerformanceSummary","InputVerificationandResultsSummary","DemandEndUseComponentsSummary","SourceEnergyEndUseComponentsSummary","ClimaticDataSummary","EquipmentSummary","EnvelopeSummary","SurfaceShadowingSummary","ShadingSummary","LightingSummary","HVACSizingSummary","SystemSummary","ComponentSizingSummary","CoilSizingDetails","OutdoorAirSummary","ObjectCountSummary","ComponentCostEconomicsSummary","AdaptiveComfortSummary","SensibleHeatGainSummary","ZoneComponentLoadSummary","AirLoopComponentLoadSummary","FacilityComponentLoadSummary","Standard62.1Summary","EnergyMeters","InitializationSummary","LEEDSummary","LifeCycleCostReport","TariffReport","EconomicResultSummary","ZoneCoolingSummaryMonthly","ZoneHeatingSummaryMonthly","ZoneElectricSummaryMonthly","SpaceGainsMonthly","PeakSpaceGainsMonthly","SpaceGainComponentsAtCoolingPeakMonthly","EnergyConsumptionElectricityNaturalGasMonthly","EnergyConsumptionElectricityGeneratedPropaneMonthly","EnergyConsumptionDieselFuelOilMonthly","EnergyConsumptionDistrictHeatingCoolingMonthly","EnergyConsumptionCoalGasolineMonthly","EnergyConsumptionOtherFuelsMonthly","EndUseEnergyConsumptionElectricityMonthly","EndUseEnergyConsumptionNaturalGasMonthly","EndUseEnergyConsumptionDieselMonthly","EndUseEnergyConsumptionFuelOilMonthly","EndUseEnergyConsumptionCoalMonthly","EndUseEnergyConsumptionPropaneMonthly","EndUseEnergyConsumptionGasolineMonthly","EndUseEnergyConsumptionOtherFuelsMonthly","PeakEnergyEndUseElectricityPart1Monthly","PeakEnergyEndUseElectricityPart2Monthly","ElectricComponentsOfPeakDemandMonthly","PeakEnergyEndUseNaturalGasMonthly","PeakEnergyEndUseDieselMonthly","PeakEnergyEndUseFuelOilMonthly","PeakEnergyEndUseCoalMonthly","PeakEnergyEndUsePropaneMonthly","PeakEnergyEndUseGasolineMonthly","PeakEnergyEndUseOtherFuelsMonthly","SetpointsNotMetWithTemperaturesMonthly","ComfortReportSimple55Monthly","UnglazedTranspiredSolarCollectorSummaryMonthly","OccupantComfortDataSummaryMonthly","ChillerReportMonthly","TowerReportMonthly","BoilerReportMonthly","DXReportMonthly","WindowReportMonthly","WindowEnergyReportMonthly","WindowZoneSummaryMonthly","WindowEnergyZoneSummaryMonthly","AverageOutdoorConditionsMonthly","OutdoorConditionsMaximumDryBulbMonthly","OutdoorConditionsMinimumDryBulbMonthly","OutdoorConditionsMaximumWetBulbMonthly","OutdoorConditionsMaximumDewPointMonthly","OutdoorGroundConditionsMonthly","WindowACReportMonthly","WaterHeaterReportMonthly","GeneratorReportMonthly","DaylightingReportMonthly","CoilReportMonthly","PlantLoopDemandReportMonthly","FanReportMonthly","PumpReportMonthly","CondLoopDemandReportMonthly","ZoneTemperatureOscillationReportMonthly","AirLoopSystemEnergyAndWaterUseMonthly","AirLoopSystemComponentLoadsMonthly","AirLoopSystemComponentEnergyUseMonthly","MechanicalVentilationLoadsMonthly","HeatEmissionsSummary","HeatEmissionsReportMonthly"},"Report 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,83 ) },
            {"Output:Table:TimeBins", () => new IdfObject("Output:Table:TimeBins",false,IdfObjectFormat.NotSpecified,false,5,false,new List<IdfField> {new IdfField(false,"",0,0,"*",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Key Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Interval Start",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Interval Size",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",1,20,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Interval Count",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Energy","Temperature","VolumetricFlow","Power"},"Variable Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,7 ) },
            {"Output:Table:Monthly", () => new IdfObject("Output:Table:Monthly",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,10,"2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Digits After Decimal",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Variable or Meter 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SumOrAverage","Maximum","Minimum","ValueWhenMaximumOrMinimum","HoursNonZero","HoursZero","HoursPositive","HoursNonPositive","HoursNegative","HoursNonNegative","SumOrAverageDuringHoursShown","MaximumDuringHoursShown","MinimumDuringHoursShown"},"Aggregation Type for Variable or Meter 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,52 ) },
            {"Output:Table:Annual", () => new IdfObject("Output:Table:Annual",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Filter",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Variable or Meter or EMS Variable or Field 1 Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"SumOrAverage","Maximum","Minimum","ValueWhenMaximumOrMinimum","HoursNonZero","HoursZero","HoursPositive","HoursNonPositive","HoursNegative","HoursNonNegative","HourInTenBinsMinToMax","HourInTenBinsZeroToMax","HourInTenBinsMinToZero","SumOrAverageDuringHoursShown","MaximumDuringHoursShown","MinimumDuringHoursShown"},"Aggregation Type for Variable or Meter 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,10,"2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Digits After Decimal 1",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},true,48 ) },
            {"OutputControl:Table:Style", () => new IdfObject("OutputControl:Table:Style",true,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,"Comma",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Comma","Tab","Fixed","HTML","XML","CommaAndHTML","CommaAndXML","TabAndHTML","XMLandHTML","All"},"Column Separator",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"None",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"None","JtoKWH","JtoMJ","JtoGJ","InchPound"},"Unit Conversion",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,2 ) },
            {"OutputControl:ReportingTolerances", () => new IdfObject("OutputControl:ReportingTolerances",true,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"deltaC",0,10,".2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tolerance for Time Heating Setpoint Not Met",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"deltaC",0,10,".2",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Tolerance for Time Cooling Setpoint Not Met",IdfFieldMinMaxType.Inclusive,IdfFieldMinMaxType.Inclusive,new List<string>{},new List<string>{},new List<string>{})},false,2 ) },
            {"Output:Variable", () => new IdfObject("Output:Variable",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,"*",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Key Value",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Variable Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Hourly",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Detailed","Timestep","Hourly","Daily","Monthly","RunPeriod","Environment","Annual"},"Reporting Frequency",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,4 ) },
            {"Output:Meter", () => new IdfObject("Output:Meter",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Key Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Hourly",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Detailed","Timestep","Hourly","Daily","Monthly","RunPeriod","Environment","Annual"},"Reporting Frequency",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,2 ) },
            {"Output:Meter:MeterFileOnly", () => new IdfObject("Output:Meter:MeterFileOnly",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Key Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Hourly",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Detailed","Timestep","Hourly","Daily","Monthly","RunPeriod","Environment","Annual"},"Reporting Frequency",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,2 ) },
            {"Output:Meter:Cumulative", () => new IdfObject("Output:Meter:Cumulative",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Key Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Hourly",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Detailed","Timestep","Hourly","Daily","Monthly","RunPeriod","Environment","Annual"},"Reporting Frequency",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,2 ) },
            {"Output:Meter:Cumulative:MeterFileOnly", () => new IdfObject("Output:Meter:Cumulative:MeterFileOnly",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Key Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Hourly",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Detailed","Timestep","Hourly","Daily","Monthly","RunPeriod","Environment","Annual"},"Reporting Frequency",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,2 ) },
            {"Meter:Custom", () => new IdfObject("Meter:Custom",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Electricity","NaturalGas","PropaneGas","FuelOil#1","FuelOil#2","Coal","Diesel","Gasoline","Water","Generic","OtherFuel1","OtherFuel2"},"Fuel Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Key Name 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Output Variable or Meter Name 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,102 ) },
            {"Meter:CustomDecrement", () => new IdfObject("Meter:CustomDecrement",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Electricity","NaturalGas","PropaneGas","FuelOil#1","FuelOil#2","Coal","Diesel","Gasoline","Water","Generic","OtherFuel1","OtherFuel2"},"Fuel Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Meter Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Key Name 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Output Variable or Meter Name 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},true,47 ) },
            {"Output:JSON", () => new IdfObject("Output:JSON",true,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(true,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"TimeSeries","TimeSeriesAndTabular"},"Option Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"Yes",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Output JSON",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Output CBOR",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"No",false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Yes","No"},"Output MessagePack",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,4 ) },
            {"Output:SQLite", () => new IdfObject("Output:SQLite",true,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Simple","SimpleAndTabular"},"Option Type",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,1 ) },
            {"Output:EnvironmentalImpactFactors", () => new IdfObject("Output:EnvironmentalImpactFactors",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Timestep","Hourly","Daily","Monthly","RunPeriod","Environment","Annual"},"Reporting Frequency",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,1 ) },
            {"EnvironmentalImpactFactors", () => new IdfObject("EnvironmentalImpactFactors",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,"0.3",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"District Heating Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"W/W",0,0,"3.0",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"District Cooling COP",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,"0.25",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Steam Conversion Efficiency",IdfFieldMinMaxType.Exclusive,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/kg",0,0,"80.7272",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Total Carbon Equivalent Emission Factor From N2O",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/kg",0,0,"6.2727",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Total Carbon Equivalent Emission Factor From CH4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"kg/kg",0,0,"0.2727",false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Total Carbon Equivalent Emission Factor From CO2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,6 ) },
            {"FuelFactors", () => new IdfObject("FuelFactors",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Electricity","NaturalGas","FuelOil#1","FuelOil#2","Coal","Gasoline","Propane","Diesel","OtherFuel1","OtherFuel2"},"Existing Fuel Resource Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Units of Measure",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Energy per Unit Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"J/J",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Energy Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Source Energy Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"g/MJ",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"CO2 Emission Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"CO2 Emission Factor Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"g/MJ",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"CO Emission Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"CO Emission Factor Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"g/MJ",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"CH4 Emission Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"CH4 Emission Factor Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"g/MJ",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"NOx Emission Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"NOx Emission Factor Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"g/MJ",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"N2O Emission Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"N2O Emission Factor Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"g/MJ",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"SO2 Emission Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"SO2 Emission Factor Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"g/MJ",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"PM Emission Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"PM Emission Factor Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"g/MJ",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"PM10 Emission Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"PM10 Emission Factor Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"g/MJ",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"PM2.5 Emission Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"PM2.5 Emission Factor Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"g/MJ",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"NH3 Emission Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"NH3 Emission Factor Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"g/MJ",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"NMVOC Emission Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"NMVOC Emission Factor Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"g/MJ",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hg Emission Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Hg Emission Factor Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"g/MJ",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pb Emission Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Pb Emission Factor Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"L/MJ",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Emission Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Water Emission Factor Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"g/MJ",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nuclear High Level Emission Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nuclear High Level Emission Factor Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"}),new IdfField(false,"m3/MJ",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nuclear Low Level Emission Factor",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Nuclear Low Level Emission Factor Schedule Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{"ScheduleNames"})},false,37 ) },
            {"Output:Diagnostics", () => new IdfObject("Output:Diagnostics",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"DisplayAllWarnings","DisplayExtraWarnings","DisplayUnusedSchedules","DisplayUnusedObjects","DisplayAdvancedReportVariables","DisplayZoneAirHeatBalanceOffBalance","DoNotMirrorDetachedShading","DoNotMirrorAttachedShading","DisplayWeatherMissingDataWarnings","ReportDuringWarmup","ReportDetailedWarmupConvergence","ReportDuringHVACSizingSimulation"},"Key 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"DisplayAllWarnings","DisplayExtraWarnings","DisplayUnusedSchedules","DisplayUnusedObjects","DisplayAdvancedReportVariables","DisplayZoneAirHeatBalanceOffBalance","DoNotMirrorDetachedShading","DoNotMirrorAttachedShading","DisplayWeatherMissingDataWarnings","ReportDuringWarmup","ReportDetailedWarmupConvergence","ReportDuringHVACSizingSimulation"},"Key 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,2 ) },
            {"Output:DebuggingData", () => new IdfObject("Output:DebuggingData",true,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Report Debugging Data",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Numeric,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Report During Warmup",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,2 ) },
            {"Output:PreprocessorMessage", () => new IdfObject("Output:PreprocessorMessage",false,IdfObjectFormat.NotSpecified,false,null,false,new List<IdfField> {new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Preprocessor Name",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){"Information","Warning","Severe","Fatal"},"Error Severity",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Message Line 1",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Message Line 2",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Message Line 3",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Message Line 4",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Message Line 5",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Message Line 6",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Message Line 7",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Message Line 8",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Message Line 9",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{}),new IdfField(false,"",0,0,null,false,false,IdfFieldAlphaNumeric.Alpha,new HashSet<string>(StringComparer.OrdinalIgnoreCase){},"Message Line 10",IdfFieldMinMaxType.None,IdfFieldMinMaxType.None,new List<string>{},new List<string>{},new List<string>{})},false,12 ) },
        };
    }
}
